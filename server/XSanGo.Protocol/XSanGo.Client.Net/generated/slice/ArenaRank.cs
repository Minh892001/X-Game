// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ArenaRank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class RivalRank : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string id;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string name;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string icon;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vip;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sex;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int rank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int compositeCombat;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string groupName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public float attack;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public float guard;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sneerId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string sneerStr;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string guardId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.FormationSummaryView[] guardHeroArr;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public RivalRank()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public RivalRank(string id, string name, string icon, int level, int vip, int sex, int rank, int compositeCombat, string groupName, float attack, float guard, int sneerId, string sneerStr, string guardId, com.XSanGo.Protocol.FormationSummaryView[] guardHeroArr)
                {
                    this.id = id;
                    this.name = name;
                    this.icon = icon;
                    this.level = level;
                    this.vip = vip;
                    this.sex = sex;
                    this.rank = rank;
                    this.compositeCombat = compositeCombat;
                    this.groupName = groupName;
                    this.attack = attack;
                    this.guard = guard;
                    this.sneerId = sneerId;
                    this.sneerStr = sneerStr;
                    this.guardId = guardId;
                    this.guardHeroArr = guardHeroArr;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::RivalRank");
                    IceInternal.HashUtil.hashAdd(ref h__, id);
                    IceInternal.HashUtil.hashAdd(ref h__, name);
                    IceInternal.HashUtil.hashAdd(ref h__, icon);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, vip);
                    IceInternal.HashUtil.hashAdd(ref h__, sex);
                    IceInternal.HashUtil.hashAdd(ref h__, rank);
                    IceInternal.HashUtil.hashAdd(ref h__, compositeCombat);
                    IceInternal.HashUtil.hashAdd(ref h__, groupName);
                    IceInternal.HashUtil.hashAdd(ref h__, attack);
                    IceInternal.HashUtil.hashAdd(ref h__, guard);
                    IceInternal.HashUtil.hashAdd(ref h__, sneerId);
                    IceInternal.HashUtil.hashAdd(ref h__, sneerStr);
                    IceInternal.HashUtil.hashAdd(ref h__, guardId);
                    IceInternal.HashUtil.hashAdd(ref h__, guardHeroArr);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    RivalRank o__ = (RivalRank)other__;
                    if(id == null)
                    {
                        if(o__.id != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!id.Equals(o__.id))
                        {
                            return false;
                        }
                    }
                    if(name == null)
                    {
                        if(o__.name != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!name.Equals(o__.name))
                        {
                            return false;
                        }
                    }
                    if(icon == null)
                    {
                        if(o__.icon != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!icon.Equals(o__.icon))
                        {
                            return false;
                        }
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(!vip.Equals(o__.vip))
                    {
                        return false;
                    }
                    if(!sex.Equals(o__.sex))
                    {
                        return false;
                    }
                    if(!rank.Equals(o__.rank))
                    {
                        return false;
                    }
                    if(!compositeCombat.Equals(o__.compositeCombat))
                    {
                        return false;
                    }
                    if(groupName == null)
                    {
                        if(o__.groupName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!groupName.Equals(o__.groupName))
                        {
                            return false;
                        }
                    }
                    if(!attack.Equals(o__.attack))
                    {
                        return false;
                    }
                    if(!guard.Equals(o__.guard))
                    {
                        return false;
                    }
                    if(!sneerId.Equals(o__.sneerId))
                    {
                        return false;
                    }
                    if(sneerStr == null)
                    {
                        if(o__.sneerStr != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!sneerStr.Equals(o__.sneerStr))
                        {
                            return false;
                        }
                    }
                    if(guardId == null)
                    {
                        if(o__.guardId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!guardId.Equals(o__.guardId))
                        {
                            return false;
                        }
                    }
                    if(guardHeroArr == null)
                    {
                        if(o__.guardHeroArr != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(guardHeroArr, o__.guardHeroArr))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(RivalRank lhs__, RivalRank rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(RivalRank lhs__, RivalRank rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(id);
                    os__.writeString(name);
                    os__.writeString(icon);
                    os__.writeInt(level);
                    os__.writeInt(vip);
                    os__.writeInt(sex);
                    os__.writeInt(rank);
                    os__.writeInt(compositeCombat);
                    os__.writeString(groupName);
                    os__.writeFloat(attack);
                    os__.writeFloat(guard);
                    os__.writeInt(sneerId);
                    os__.writeString(sneerStr);
                    os__.writeString(guardId);
                    com.XSanGo.Protocol.FormationSummaryViewSeqHelper.write(os__, guardHeroArr);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    id = is__.readString();
                    name = is__.readString();
                    icon = is__.readString();
                    level = is__.readInt();
                    vip = is__.readInt();
                    sex = is__.readInt();
                    rank = is__.readInt();
                    compositeCombat = is__.readInt();
                    groupName = is__.readString();
                    attack = is__.readFloat();
                    guard = is__.readFloat();
                    sneerId = is__.readInt();
                    sneerStr = is__.readString();
                    guardId = is__.readString();
                    guardHeroArr = com.XSanGo.Protocol.FormationSummaryViewSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class OwnRank : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int rank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sneerId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string SneerStr;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string guardId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public float attack;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public float guard;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int challenge;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int challengeBuy;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int fightCdTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int challengeMoney;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int clearCdNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.RivalRank[] rivalRankList;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public OwnRank()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public OwnRank(int rank, int sneerId, string SneerStr, string guardId, float attack, float guard, int challenge, int challengeBuy, int fightCdTime, int challengeMoney, int clearCdNum, com.XSanGo.Protocol.RivalRank[] rivalRankList)
                {
                    this.rank = rank;
                    this.sneerId = sneerId;
                    this.SneerStr = SneerStr;
                    this.guardId = guardId;
                    this.attack = attack;
                    this.guard = guard;
                    this.challenge = challenge;
                    this.challengeBuy = challengeBuy;
                    this.fightCdTime = fightCdTime;
                    this.challengeMoney = challengeMoney;
                    this.clearCdNum = clearCdNum;
                    this.rivalRankList = rivalRankList;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::OwnRank");
                    IceInternal.HashUtil.hashAdd(ref h__, rank);
                    IceInternal.HashUtil.hashAdd(ref h__, sneerId);
                    IceInternal.HashUtil.hashAdd(ref h__, SneerStr);
                    IceInternal.HashUtil.hashAdd(ref h__, guardId);
                    IceInternal.HashUtil.hashAdd(ref h__, attack);
                    IceInternal.HashUtil.hashAdd(ref h__, guard);
                    IceInternal.HashUtil.hashAdd(ref h__, challenge);
                    IceInternal.HashUtil.hashAdd(ref h__, challengeBuy);
                    IceInternal.HashUtil.hashAdd(ref h__, fightCdTime);
                    IceInternal.HashUtil.hashAdd(ref h__, challengeMoney);
                    IceInternal.HashUtil.hashAdd(ref h__, clearCdNum);
                    IceInternal.HashUtil.hashAdd(ref h__, rivalRankList);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    OwnRank o__ = (OwnRank)other__;
                    if(!rank.Equals(o__.rank))
                    {
                        return false;
                    }
                    if(!sneerId.Equals(o__.sneerId))
                    {
                        return false;
                    }
                    if(SneerStr == null)
                    {
                        if(o__.SneerStr != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!SneerStr.Equals(o__.SneerStr))
                        {
                            return false;
                        }
                    }
                    if(guardId == null)
                    {
                        if(o__.guardId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!guardId.Equals(o__.guardId))
                        {
                            return false;
                        }
                    }
                    if(!attack.Equals(o__.attack))
                    {
                        return false;
                    }
                    if(!guard.Equals(o__.guard))
                    {
                        return false;
                    }
                    if(!challenge.Equals(o__.challenge))
                    {
                        return false;
                    }
                    if(!challengeBuy.Equals(o__.challengeBuy))
                    {
                        return false;
                    }
                    if(!fightCdTime.Equals(o__.fightCdTime))
                    {
                        return false;
                    }
                    if(!challengeMoney.Equals(o__.challengeMoney))
                    {
                        return false;
                    }
                    if(!clearCdNum.Equals(o__.clearCdNum))
                    {
                        return false;
                    }
                    if(rivalRankList == null)
                    {
                        if(o__.rivalRankList != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(rivalRankList, o__.rivalRankList))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(OwnRank lhs__, OwnRank rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(OwnRank lhs__, OwnRank rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(rank);
                    os__.writeInt(sneerId);
                    os__.writeString(SneerStr);
                    os__.writeString(guardId);
                    os__.writeFloat(attack);
                    os__.writeFloat(guard);
                    os__.writeInt(challenge);
                    os__.writeInt(challengeBuy);
                    os__.writeInt(fightCdTime);
                    os__.writeInt(challengeMoney);
                    os__.writeInt(clearCdNum);
                    com.XSanGo.Protocol.RivalRankSeqHelper.write(os__, rivalRankList);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    rank = is__.readInt();
                    sneerId = is__.readInt();
                    SneerStr = is__.readString();
                    guardId = is__.readString();
                    attack = is__.readFloat();
                    guard = is__.readFloat();
                    challenge = is__.readInt();
                    challengeBuy = is__.readInt();
                    fightCdTime = is__.readInt();
                    challengeMoney = is__.readInt();
                    clearCdNum = is__.readInt();
                    rivalRankList = com.XSanGo.Protocol.RivalRankSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ArenaMall : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int id;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string itemId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int num;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int price;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int coinType;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int flag;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ArenaMall()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ArenaMall(int id, string itemId, int num, int price, int coinType, int flag)
                {
                    this.id = id;
                    this.itemId = itemId;
                    this.num = num;
                    this.price = price;
                    this.coinType = coinType;
                    this.flag = flag;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ArenaMall");
                    IceInternal.HashUtil.hashAdd(ref h__, id);
                    IceInternal.HashUtil.hashAdd(ref h__, itemId);
                    IceInternal.HashUtil.hashAdd(ref h__, num);
                    IceInternal.HashUtil.hashAdd(ref h__, price);
                    IceInternal.HashUtil.hashAdd(ref h__, coinType);
                    IceInternal.HashUtil.hashAdd(ref h__, flag);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ArenaMall o__ = (ArenaMall)other__;
                    if(!id.Equals(o__.id))
                    {
                        return false;
                    }
                    if(itemId == null)
                    {
                        if(o__.itemId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!itemId.Equals(o__.itemId))
                        {
                            return false;
                        }
                    }
                    if(!num.Equals(o__.num))
                    {
                        return false;
                    }
                    if(!price.Equals(o__.price))
                    {
                        return false;
                    }
                    if(!coinType.Equals(o__.coinType))
                    {
                        return false;
                    }
                    if(!flag.Equals(o__.flag))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ArenaMall lhs__, ArenaMall rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ArenaMall lhs__, ArenaMall rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(id);
                    os__.writeString(itemId);
                    os__.writeInt(num);
                    os__.writeInt(price);
                    os__.writeInt(coinType);
                    os__.writeInt(flag);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    id = is__.readInt();
                    itemId = is__.readString();
                    num = is__.readInt();
                    price = is__.readInt();
                    coinType = is__.readInt();
                    flag = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ArenaMallSel : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int exchangeRefreshNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ArenaMall[] ArenaMallList;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ArenaMallSel()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ArenaMallSel(int exchangeRefreshNum, com.XSanGo.Protocol.ArenaMall[] ArenaMallList)
                {
                    this.exchangeRefreshNum = exchangeRefreshNum;
                    this.ArenaMallList = ArenaMallList;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ArenaMallSel");
                    IceInternal.HashUtil.hashAdd(ref h__, exchangeRefreshNum);
                    IceInternal.HashUtil.hashAdd(ref h__, ArenaMallList);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ArenaMallSel o__ = (ArenaMallSel)other__;
                    if(!exchangeRefreshNum.Equals(o__.exchangeRefreshNum))
                    {
                        return false;
                    }
                    if(ArenaMallList == null)
                    {
                        if(o__.ArenaMallList != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(ArenaMallList, o__.ArenaMallList))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ArenaMallSel lhs__, ArenaMallSel rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ArenaMallSel lhs__, ArenaMallSel rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(exchangeRefreshNum);
                    com.XSanGo.Protocol.ArenaMallSeqHelper.write(os__, ArenaMallList);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    exchangeRefreshNum = is__.readInt();
                    ArenaMallList = com.XSanGo.Protocol.ArenaMallSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ArenaReportView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string id;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string name;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public short level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string icon;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vip;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sex;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int rank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int flag;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int compositeCombat;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int rankChange;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sneerId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.Property[] reward;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public long reportTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string reportId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string fightId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string fightMovieId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int type;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ArenaReportView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ArenaReportView(string id, string name, short level, string icon, int vip, int sex, int rank, int flag, int compositeCombat, int rankChange, int sneerId, com.XSanGo.Protocol.Property[] reward, long reportTime, string reportId, string fightId, string fightMovieId, int type)
                {
                    this.id = id;
                    this.name = name;
                    this.level = level;
                    this.icon = icon;
                    this.vip = vip;
                    this.sex = sex;
                    this.rank = rank;
                    this.flag = flag;
                    this.compositeCombat = compositeCombat;
                    this.rankChange = rankChange;
                    this.sneerId = sneerId;
                    this.reward = reward;
                    this.reportTime = reportTime;
                    this.reportId = reportId;
                    this.fightId = fightId;
                    this.fightMovieId = fightMovieId;
                    this.type = type;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ArenaReportView");
                    IceInternal.HashUtil.hashAdd(ref h__, id);
                    IceInternal.HashUtil.hashAdd(ref h__, name);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, icon);
                    IceInternal.HashUtil.hashAdd(ref h__, vip);
                    IceInternal.HashUtil.hashAdd(ref h__, sex);
                    IceInternal.HashUtil.hashAdd(ref h__, rank);
                    IceInternal.HashUtil.hashAdd(ref h__, flag);
                    IceInternal.HashUtil.hashAdd(ref h__, compositeCombat);
                    IceInternal.HashUtil.hashAdd(ref h__, rankChange);
                    IceInternal.HashUtil.hashAdd(ref h__, sneerId);
                    IceInternal.HashUtil.hashAdd(ref h__, reward);
                    IceInternal.HashUtil.hashAdd(ref h__, reportTime);
                    IceInternal.HashUtil.hashAdd(ref h__, reportId);
                    IceInternal.HashUtil.hashAdd(ref h__, fightId);
                    IceInternal.HashUtil.hashAdd(ref h__, fightMovieId);
                    IceInternal.HashUtil.hashAdd(ref h__, type);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ArenaReportView o__ = (ArenaReportView)other__;
                    if(id == null)
                    {
                        if(o__.id != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!id.Equals(o__.id))
                        {
                            return false;
                        }
                    }
                    if(name == null)
                    {
                        if(o__.name != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!name.Equals(o__.name))
                        {
                            return false;
                        }
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(icon == null)
                    {
                        if(o__.icon != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!icon.Equals(o__.icon))
                        {
                            return false;
                        }
                    }
                    if(!vip.Equals(o__.vip))
                    {
                        return false;
                    }
                    if(!sex.Equals(o__.sex))
                    {
                        return false;
                    }
                    if(!rank.Equals(o__.rank))
                    {
                        return false;
                    }
                    if(!flag.Equals(o__.flag))
                    {
                        return false;
                    }
                    if(!compositeCombat.Equals(o__.compositeCombat))
                    {
                        return false;
                    }
                    if(!rankChange.Equals(o__.rankChange))
                    {
                        return false;
                    }
                    if(!sneerId.Equals(o__.sneerId))
                    {
                        return false;
                    }
                    if(reward == null)
                    {
                        if(o__.reward != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(reward, o__.reward))
                        {
                            return false;
                        }
                    }
                    if(!reportTime.Equals(o__.reportTime))
                    {
                        return false;
                    }
                    if(reportId == null)
                    {
                        if(o__.reportId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!reportId.Equals(o__.reportId))
                        {
                            return false;
                        }
                    }
                    if(fightId == null)
                    {
                        if(o__.fightId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!fightId.Equals(o__.fightId))
                        {
                            return false;
                        }
                    }
                    if(fightMovieId == null)
                    {
                        if(o__.fightMovieId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!fightMovieId.Equals(o__.fightMovieId))
                        {
                            return false;
                        }
                    }
                    if(!type.Equals(o__.type))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ArenaReportView lhs__, ArenaReportView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ArenaReportView lhs__, ArenaReportView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(id);
                    os__.writeString(name);
                    os__.writeShort(level);
                    os__.writeString(icon);
                    os__.writeInt(vip);
                    os__.writeInt(sex);
                    os__.writeInt(rank);
                    os__.writeInt(flag);
                    os__.writeInt(compositeCombat);
                    os__.writeInt(rankChange);
                    os__.writeInt(sneerId);
                    com.XSanGo.Protocol.PropertySeqHelper.write(os__, reward);
                    os__.writeLong(reportTime);
                    os__.writeString(reportId);
                    os__.writeString(fightId);
                    os__.writeString(fightMovieId);
                    os__.writeInt(type);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    id = is__.readString();
                    name = is__.readString();
                    level = is__.readShort();
                    icon = is__.readString();
                    vip = is__.readInt();
                    sex = is__.readInt();
                    rank = is__.readInt();
                    flag = is__.readInt();
                    compositeCombat = is__.readInt();
                    rankChange = is__.readInt();
                    sneerId = is__.readInt();
                    reward = com.XSanGo.Protocol.PropertySeqHelper.read(is__);
                    reportTime = is__.readLong();
                    reportId = is__.readString();
                    fightId = is__.readString();
                    fightMovieId = is__.readString();
                    type = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class FightResult : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int maxNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int historyRank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int maxRank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int firstWinNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int firsChangeRank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sneerNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sneerhangeRank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int fightStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string reportMovieId;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public FightResult()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public FightResult(int maxNum, int historyRank, int maxRank, int firstWinNum, int firsChangeRank, int sneerNum, int sneerhangeRank, int fightStar, string reportMovieId)
                {
                    this.maxNum = maxNum;
                    this.historyRank = historyRank;
                    this.maxRank = maxRank;
                    this.firstWinNum = firstWinNum;
                    this.firsChangeRank = firsChangeRank;
                    this.sneerNum = sneerNum;
                    this.sneerhangeRank = sneerhangeRank;
                    this.fightStar = fightStar;
                    this.reportMovieId = reportMovieId;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::FightResult");
                    IceInternal.HashUtil.hashAdd(ref h__, maxNum);
                    IceInternal.HashUtil.hashAdd(ref h__, historyRank);
                    IceInternal.HashUtil.hashAdd(ref h__, maxRank);
                    IceInternal.HashUtil.hashAdd(ref h__, firstWinNum);
                    IceInternal.HashUtil.hashAdd(ref h__, firsChangeRank);
                    IceInternal.HashUtil.hashAdd(ref h__, sneerNum);
                    IceInternal.HashUtil.hashAdd(ref h__, sneerhangeRank);
                    IceInternal.HashUtil.hashAdd(ref h__, fightStar);
                    IceInternal.HashUtil.hashAdd(ref h__, reportMovieId);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    FightResult o__ = (FightResult)other__;
                    if(!maxNum.Equals(o__.maxNum))
                    {
                        return false;
                    }
                    if(!historyRank.Equals(o__.historyRank))
                    {
                        return false;
                    }
                    if(!maxRank.Equals(o__.maxRank))
                    {
                        return false;
                    }
                    if(!firstWinNum.Equals(o__.firstWinNum))
                    {
                        return false;
                    }
                    if(!firsChangeRank.Equals(o__.firsChangeRank))
                    {
                        return false;
                    }
                    if(!sneerNum.Equals(o__.sneerNum))
                    {
                        return false;
                    }
                    if(!sneerhangeRank.Equals(o__.sneerhangeRank))
                    {
                        return false;
                    }
                    if(!fightStar.Equals(o__.fightStar))
                    {
                        return false;
                    }
                    if(reportMovieId == null)
                    {
                        if(o__.reportMovieId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!reportMovieId.Equals(o__.reportMovieId))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(FightResult lhs__, FightResult rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(FightResult lhs__, FightResult rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(maxNum);
                    os__.writeInt(historyRank);
                    os__.writeInt(maxRank);
                    os__.writeInt(firstWinNum);
                    os__.writeInt(firsChangeRank);
                    os__.writeInt(sneerNum);
                    os__.writeInt(sneerhangeRank);
                    os__.writeInt(fightStar);
                    os__.writeString(reportMovieId);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    maxNum = is__.readInt();
                    historyRank = is__.readInt();
                    maxRank = is__.readInt();
                    firstWinNum = is__.readInt();
                    firsChangeRank = is__.readInt();
                    sneerNum = is__.readInt();
                    sneerhangeRank = is__.readInt();
                    fightStar = is__.readInt();
                    reportMovieId = is__.readString();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class FightMovieView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int isWin;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int starCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.SceneDuelView[] soloMovie;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public byte[] fightMovie;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public FightMovieView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public FightMovieView(int isWin, int starCount, com.XSanGo.Protocol.SceneDuelView[] soloMovie, byte[] fightMovie)
                {
                    this.isWin = isWin;
                    this.starCount = starCount;
                    this.soloMovie = soloMovie;
                    this.fightMovie = fightMovie;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::FightMovieView");
                    IceInternal.HashUtil.hashAdd(ref h__, isWin);
                    IceInternal.HashUtil.hashAdd(ref h__, starCount);
                    IceInternal.HashUtil.hashAdd(ref h__, soloMovie);
                    IceInternal.HashUtil.hashAdd(ref h__, fightMovie);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    FightMovieView o__ = (FightMovieView)other__;
                    if(!isWin.Equals(o__.isWin))
                    {
                        return false;
                    }
                    if(!starCount.Equals(o__.starCount))
                    {
                        return false;
                    }
                    if(soloMovie == null)
                    {
                        if(o__.soloMovie != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(soloMovie, o__.soloMovie))
                        {
                            return false;
                        }
                    }
                    if(fightMovie == null)
                    {
                        if(o__.fightMovie != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(fightMovie, o__.fightMovie))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(FightMovieView lhs__, FightMovieView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(FightMovieView lhs__, FightMovieView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(isWin);
                    os__.writeInt(starCount);
                    com.XSanGo.Protocol.SceneDuelViewSeqHelper.write(os__, soloMovie);
                    com.XSanGo.Protocol.ByteSeqHelper.write(os__, fightMovie);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    isWin = is__.readInt();
                    starCount = is__.readInt();
                    soloMovie = com.XSanGo.Protocol.SceneDuelViewSeqHelper.read(is__);
                    fightMovie = com.XSanGo.Protocol.ByteSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface ArenaRank : Ice.Object, ArenaRankOperations_, ArenaRankOperationsNC_
            {
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_selectRank(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_selectRivalRank(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_saveGuard();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_setSneer();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_buyChallenge();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_selHundredRank(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_selMallList(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_refMallList(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_exchangeItem(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_robFightReport(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_beginRevenge(com.XSanGo.Protocol.PvpOpponentFormationView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_endRevenge(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_strutReport();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_beginChallenge(com.XSanGo.Protocol.PvpOpponentFormationView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_endChallenge(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_clearCD();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_uploadFightMovie();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_ArenaRank_getFightMovie(com.XSanGo.Protocol.FightMovieView ret__);
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ArenaRankPrx : Ice.ObjectPrx
            {
                string selectRank();
                string selectRank(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> begin_selectRank();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> begin_selectRank(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_selectRank(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_selectRank(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_selectRank(Ice.AsyncResult r__);

                bool selectRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRank cb__);
                bool selectRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRank cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string selectRivalRank();
                string selectRivalRank(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> begin_selectRivalRank();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> begin_selectRivalRank(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_selectRivalRank(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_selectRivalRank(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_selectRivalRank(Ice.AsyncResult r__);

                bool selectRivalRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRivalRank cb__);
                bool selectRivalRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRivalRank cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void saveGuard(string guardId);
                void saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> begin_saveGuard(string guardId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> begin_saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_saveGuard(string guardId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_saveGuard(Ice.AsyncResult r__);

                bool saveGuard_async(com.XSanGo.Protocol.AMI_ArenaRank_saveGuard cb__, string guardId);
                bool saveGuard_async(com.XSanGo.Protocol.AMI_ArenaRank_saveGuard cb__, string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void setSneer(int sneerId, string sneerStr);
                void setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> begin_setSneer(int sneerId, string sneerStr);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> begin_setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setSneer(int sneerId, string sneerStr, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_setSneer(Ice.AsyncResult r__);

                bool setSneer_async(com.XSanGo.Protocol.AMI_ArenaRank_setSneer cb__, int sneerId, string sneerStr);
                bool setSneer_async(com.XSanGo.Protocol.AMI_ArenaRank_setSneer cb__, int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void buyChallenge();
                void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> begin_buyChallenge();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buyChallenge(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_buyChallenge(Ice.AsyncResult r__);

                bool buyChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_buyChallenge cb__);
                bool buyChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_buyChallenge cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string selHundredRank();
                string selHundredRank(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> begin_selHundredRank();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> begin_selHundredRank(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_selHundredRank(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_selHundredRank(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_selHundredRank(Ice.AsyncResult r__);

                bool selHundredRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selHundredRank cb__);
                bool selHundredRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selHundredRank cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string selMallList();
                string selMallList(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> begin_selMallList();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> begin_selMallList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_selMallList(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_selMallList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_selMallList(Ice.AsyncResult r__);

                bool selMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_selMallList cb__);
                bool selMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_selMallList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string refMallList();
                string refMallList(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> begin_refMallList();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> begin_refMallList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_refMallList(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_refMallList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_refMallList(Ice.AsyncResult r__);

                bool refMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_refMallList cb__);
                bool refMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_refMallList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string exchangeItem(int storId);
                string exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> begin_exchangeItem(int storId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> begin_exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_exchangeItem(int storId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_exchangeItem(Ice.AsyncResult r__);

                bool exchangeItem_async(com.XSanGo.Protocol.AMI_ArenaRank_exchangeItem cb__, int storId);
                bool exchangeItem_async(com.XSanGo.Protocol.AMI_ArenaRank_exchangeItem cb__, int storId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string robFightReport();
                string robFightReport(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> begin_robFightReport();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> begin_robFightReport(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_robFightReport(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_robFightReport(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_robFightReport(Ice.AsyncResult r__);

                bool robFightReport_async(com.XSanGo.Protocol.AMI_ArenaRank_robFightReport cb__);
                bool robFightReport_async(com.XSanGo.Protocol.AMI_ArenaRank_robFightReport cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId);
                com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> begin_beginRevenge(string targetId, string formationId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> begin_beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_beginRevenge(string targetId, string formationId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.PvpOpponentFormationView end_beginRevenge(Ice.AsyncResult r__);

                bool beginRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginRevenge cb__, string targetId, string formationId);
                bool beginRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginRevenge cb__, string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string endRevenge(string targetId, int resFlag, byte remainHero);
                string endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> begin_endRevenge(string targetId, int resFlag, byte remainHero);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> begin_endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_endRevenge(string targetId, int resFlag, byte remainHero, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_endRevenge(Ice.AsyncResult r__);

                bool endRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero);
                bool endRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void strutReport(string reportId, int channelType, string targetId, string content);
                void strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> begin_strutReport(string reportId, int channelType, string targetId, string content);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> begin_strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_strutReport(string reportId, int channelType, string targetId, string content, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_strutReport(Ice.AsyncResult r__);

                bool strutReport_async(com.XSanGo.Protocol.AMI_ArenaRank_strutReport cb__, string reportId, int channelType, string targetId, string content);
                bool strutReport_async(com.XSanGo.Protocol.AMI_ArenaRank_strutReport cb__, string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId);
                com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> begin_beginChallenge(string targetId, string formationId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> begin_beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_beginChallenge(string targetId, string formationId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.PvpOpponentFormationView end_beginChallenge(Ice.AsyncResult r__);

                bool beginChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginChallenge cb__, string targetId, string formationId);
                bool beginChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginChallenge cb__, string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string endChallenge(string targetId, int resFlag, byte remainHero);
                string endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> begin_endChallenge(string targetId, int resFlag, byte remainHero);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> begin_endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_endChallenge(string targetId, int resFlag, byte remainHero, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_endChallenge(Ice.AsyncResult r__);

                bool endChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero);
                bool endChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void clearCD();
                void clearCD(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> begin_clearCD();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> begin_clearCD(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_clearCD(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_clearCD(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_clearCD(Ice.AsyncResult r__);

                bool clearCD_async(com.XSanGo.Protocol.AMI_ArenaRank_clearCD cb__);
                bool clearCD_async(com.XSanGo.Protocol.AMI_ArenaRank_clearCD cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie);
                void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_uploadFightMovie(Ice.AsyncResult r__);

                bool uploadFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_uploadFightMovie cb__, string id, com.XSanGo.Protocol.FightMovieView movie);
                bool uploadFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_uploadFightMovie cb__, string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.FightMovieView getFightMovie(string id);
                com.XSanGo.Protocol.FightMovieView getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> begin_getFightMovie(string id);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> begin_getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getFightMovie(string id, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.FightMovieView end_getFightMovie(Ice.AsyncResult r__);

                bool getFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_getFightMovie cb__, string id);
                bool getFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_getFightMovie cb__, string id, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ArenaRankOperations_
            {
                void selectRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRank cb__, Ice.Current current__);

                void selectRivalRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRivalRank cb__, Ice.Current current__);

                void saveGuard(string guardId, Ice.Current current__);

                void setSneer(int sneerId, string sneerStr, Ice.Current current__);

                void buyChallenge(Ice.Current current__);

                void selHundredRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selHundredRank cb__, Ice.Current current__);

                string selMallList(Ice.Current current__);

                string refMallList(Ice.Current current__);

                string exchangeItem(int storId, Ice.Current current__);

                void robFightReport_async(com.XSanGo.Protocol.AMD_ArenaRank_robFightReport cb__, Ice.Current current__);

                void beginRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginRevenge cb__, string targetId, string formationId, Ice.Current current__);

                void endRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero, Ice.Current current__);

                void strutReport(string reportId, int channelType, string targetId, string content, Ice.Current current__);

                void beginChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginChallenge cb__, string targetId, string formationId, Ice.Current current__);

                void endChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero, Ice.Current current__);

                void clearCD(Ice.Current current__);

                void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, Ice.Current current__);

                void getFightMovie_async(com.XSanGo.Protocol.AMD_ArenaRank_getFightMovie cb__, string id, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ArenaRankOperationsNC_
            {
                void selectRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRank cb__);

                void selectRivalRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRivalRank cb__);

                void saveGuard(string guardId);

                void setSneer(int sneerId, string sneerStr);

                void buyChallenge();

                void selHundredRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selHundredRank cb__);

                string selMallList();

                string refMallList();

                string exchangeItem(int storId);

                void robFightReport_async(com.XSanGo.Protocol.AMD_ArenaRank_robFightReport cb__);

                void beginRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginRevenge cb__, string targetId, string formationId);

                void endRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero);

                void strutReport(string reportId, int channelType, string targetId, string content);

                void beginChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginChallenge cb__, string targetId, string formationId);

                void endChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero);

                void clearCD();

                void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie);

                void getFightMovie_async(com.XSanGo.Protocol.AMD_ArenaRank_getFightMovie cb__, string id);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RivalRankSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.RivalRank[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.RivalRank() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.RivalRank[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.RivalRank[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(39);
                        v__ = new com.XSanGo.Protocol.RivalRank[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.RivalRank();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ArenaMallSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.ArenaMall[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.ArenaMall() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.ArenaMall[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.ArenaMall[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(21);
                        v__ = new com.XSanGo.Protocol.ArenaMall[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.ArenaMall();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ArenaReportViewSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.ArenaReportView[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.ArenaReportView() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.ArenaReportView[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.ArenaReportView[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(49);
                        v__ = new com.XSanGo.Protocol.ArenaReportView[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.ArenaReportView();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ArenaRankPrxHelper : Ice.ObjectPrxHelperBase, ArenaRankPrx
            {
                #region Synchronous operations

                public com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId)
                {
                    return beginChallenge(targetId, formationId, null, false);
                }

                public com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return beginChallenge(targetId, formationId, context__, true);
                }

                private com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __beginChallenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__beginChallenge_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.beginChallenge(targetId, formationId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId)
                {
                    return beginRevenge(targetId, formationId, null, false);
                }

                public com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return beginRevenge(targetId, formationId, context__, true);
                }

                private com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __beginRevenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__beginRevenge_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.beginRevenge(targetId, formationId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void buyChallenge()
                {
                    buyChallenge(null, false);
                }

                public void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    buyChallenge(context__, true);
                }

                private void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buyChallenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buyChallenge_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                del__.buyChallenge(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void clearCD()
                {
                    clearCD(null, false);
                }

                public void clearCD(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    clearCD(context__, true);
                }

                private void clearCD(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __clearCD_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__clearCD_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                del__.clearCD(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string endChallenge(string targetId, int resFlag, byte remainHero)
                {
                    return endChallenge(targetId, resFlag, remainHero, null, false);
                }

                public string endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return endChallenge(targetId, resFlag, remainHero, context__, true);
                }

                private string endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __endChallenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__endChallenge_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.endChallenge(targetId, resFlag, remainHero, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string endRevenge(string targetId, int resFlag, byte remainHero)
                {
                    return endRevenge(targetId, resFlag, remainHero, null, false);
                }

                public string endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return endRevenge(targetId, resFlag, remainHero, context__, true);
                }

                private string endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __endRevenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__endRevenge_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.endRevenge(targetId, resFlag, remainHero, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string exchangeItem(int storId)
                {
                    return exchangeItem(storId, null, false);
                }

                public string exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return exchangeItem(storId, context__, true);
                }

                private string exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __exchangeItem_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__exchangeItem_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.exchangeItem(storId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.FightMovieView getFightMovie(string id)
                {
                    return getFightMovie(id, null, false);
                }

                public com.XSanGo.Protocol.FightMovieView getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getFightMovie(id, context__, true);
                }

                private com.XSanGo.Protocol.FightMovieView getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getFightMovie_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getFightMovie_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.getFightMovie(id, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string refMallList()
                {
                    return refMallList(null, false);
                }

                public string refMallList(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return refMallList(context__, true);
                }

                private string refMallList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __refMallList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__refMallList_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.refMallList(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string robFightReport()
                {
                    return robFightReport(null, false);
                }

                public string robFightReport(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return robFightReport(context__, true);
                }

                private string robFightReport(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __robFightReport_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__robFightReport_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.robFightReport(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void saveGuard(string guardId)
                {
                    saveGuard(guardId, null, false);
                }

                public void saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    saveGuard(guardId, context__, true);
                }

                private void saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __saveGuard_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__saveGuard_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                del__.saveGuard(guardId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string selHundredRank()
                {
                    return selHundredRank(null, false);
                }

                public string selHundredRank(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return selHundredRank(context__, true);
                }

                private string selHundredRank(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __selHundredRank_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__selHundredRank_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.selHundredRank(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string selMallList()
                {
                    return selMallList(null, false);
                }

                public string selMallList(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return selMallList(context__, true);
                }

                private string selMallList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __selMallList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__selMallList_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.selMallList(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string selectRank()
                {
                    return selectRank(null, false);
                }

                public string selectRank(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return selectRank(context__, true);
                }

                private string selectRank(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __selectRank_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__selectRank_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.selectRank(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string selectRivalRank()
                {
                    return selectRivalRank(null, false);
                }

                public string selectRivalRank(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return selectRivalRank(context__, true);
                }

                private string selectRivalRank(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __selectRivalRank_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__selectRivalRank_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                return del__.selectRivalRank(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void setSneer(int sneerId, string sneerStr)
                {
                    setSneer(sneerId, sneerStr, null, false);
                }

                public void setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    setSneer(sneerId, sneerStr, context__, true);
                }

                private void setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setSneer_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__setSneer_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                del__.setSneer(sneerId, sneerStr, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void strutReport(string reportId, int channelType, string targetId, string content)
                {
                    strutReport(reportId, channelType, targetId, content, null, false);
                }

                public void strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    strutReport(reportId, channelType, targetId, content, context__, true);
                }

                private void strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __strutReport_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__strutReport_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                del__.strutReport(reportId, channelType, targetId, content, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie)
                {
                    uploadFightMovie(id, movie, null, false);
                }

                public void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    uploadFightMovie(id, movie, context__, true);
                }

                private void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __uploadFightMovie_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__uploadFightMovie_name);
                                delBase__ = getDelegate__(false);
                                ArenaRankDel_ del__ = (ArenaRankDel_)delBase__;
                                del__.uploadFightMovie(id, movie, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> begin_beginChallenge(string targetId, string formationId)
                {
                    return begin_beginChallenge(targetId, formationId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> begin_beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_beginChallenge(targetId, formationId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_beginChallenge(string targetId, string formationId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginChallenge(targetId, formationId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginChallenge(targetId, formationId, ctx__, true, cb__, cookie__);
                }

                private const string __beginChallenge_name = "beginChallenge";

                public com.XSanGo.Protocol.PvpOpponentFormationView end_beginChallenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __beginChallenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.PvpOpponentFormationView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> begin_beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__beginChallenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge>(this, __beginChallenge_name, beginChallenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__beginChallenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(targetId);
                        os__.writeString(formationId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void beginChallenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.PvpOpponentFormationView ret__;
                    try
                    {
                        ret__ = end_beginChallenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool beginChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginChallenge cb__, string targetId, string formationId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__beginChallenge_name);
                        result__ = begin_beginChallenge(targetId, formationId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge>(this, __beginChallenge_name, beginChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool beginChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginChallenge cb__, string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__beginChallenge_name);
                        result__ = begin_beginChallenge(targetId, formationId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginChallenge>(this, __beginChallenge_name, beginChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> begin_beginRevenge(string targetId, string formationId)
                {
                    return begin_beginRevenge(targetId, formationId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> begin_beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_beginRevenge(targetId, formationId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_beginRevenge(string targetId, string formationId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginRevenge(targetId, formationId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginRevenge(targetId, formationId, ctx__, true, cb__, cookie__);
                }

                private const string __beginRevenge_name = "beginRevenge";

                public com.XSanGo.Protocol.PvpOpponentFormationView end_beginRevenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __beginRevenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.PvpOpponentFormationView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> begin_beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__beginRevenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge>(this, __beginRevenge_name, beginRevenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__beginRevenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(targetId);
                        os__.writeString(formationId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void beginRevenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.PvpOpponentFormationView ret__;
                    try
                    {
                        ret__ = end_beginRevenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool beginRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginRevenge cb__, string targetId, string formationId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> result__;
                    try
                    {
                        checkTwowayOnly__(__beginRevenge_name);
                        result__ = begin_beginRevenge(targetId, formationId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge>(this, __beginRevenge_name, beginRevenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool beginRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_beginRevenge cb__, string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge> result__;
                    try
                    {
                        checkTwowayOnly__(__beginRevenge_name);
                        result__ = begin_beginRevenge(targetId, formationId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_beginRevenge>(this, __beginRevenge_name, beginRevenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> begin_buyChallenge()
                {
                    return begin_buyChallenge(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buyChallenge(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buyChallenge(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChallenge(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChallenge(ctx__, true, cb__, cookie__);
                }

                private const string __buyChallenge_name = "buyChallenge";

                public void end_buyChallenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buyChallenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buyChallenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge>(this, __buyChallenge_name, buyChallenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buyChallenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buyChallenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_buyChallenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool buyChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_buyChallenge cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChallenge_name);
                        result__ = begin_buyChallenge();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge>(this, __buyChallenge_name, buyChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool buyChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_buyChallenge cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChallenge_name);
                        result__ = begin_buyChallenge(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_buyChallenge>(this, __buyChallenge_name, buyChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> begin_clearCD()
                {
                    return begin_clearCD(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> begin_clearCD(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_clearCD(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_clearCD(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_clearCD(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_clearCD(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_clearCD(ctx__, true, cb__, cookie__);
                }

                private const string __clearCD_name = "clearCD";

                public void end_clearCD(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __clearCD_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> begin_clearCD(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__clearCD_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_clearCD>(this, __clearCD_name, clearCD_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__clearCD_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void clearCD_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_clearCD cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_clearCD(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool clearCD_async(com.XSanGo.Protocol.AMI_ArenaRank_clearCD cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> result__;
                    try
                    {
                        checkTwowayOnly__(__clearCD_name);
                        result__ = begin_clearCD();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_clearCD>(this, __clearCD_name, clearCD_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool clearCD_async(com.XSanGo.Protocol.AMI_ArenaRank_clearCD cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_clearCD> result__;
                    try
                    {
                        checkTwowayOnly__(__clearCD_name);
                        result__ = begin_clearCD(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_clearCD>(this, __clearCD_name, clearCD_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> begin_endChallenge(string targetId, int resFlag, byte remainHero)
                {
                    return begin_endChallenge(targetId, resFlag, remainHero, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> begin_endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_endChallenge(targetId, resFlag, remainHero, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_endChallenge(string targetId, int resFlag, byte remainHero, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endChallenge(targetId, resFlag, remainHero, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endChallenge(targetId, resFlag, remainHero, ctx__, true, cb__, cookie__);
                }

                private const string __endChallenge_name = "endChallenge";

                public string end_endChallenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __endChallenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> begin_endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__endChallenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge>(this, __endChallenge_name, endChallenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__endChallenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(targetId);
                        os__.writeInt(resFlag);
                        os__.writeByte(remainHero);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void endChallenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_endChallenge cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_endChallenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool endChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__endChallenge_name);
                        result__ = begin_endChallenge(targetId, resFlag, remainHero);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge>(this, __endChallenge_name, endChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool endChallenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__endChallenge_name);
                        result__ = begin_endChallenge(targetId, resFlag, remainHero, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endChallenge>(this, __endChallenge_name, endChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> begin_endRevenge(string targetId, int resFlag, byte remainHero)
                {
                    return begin_endRevenge(targetId, resFlag, remainHero, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> begin_endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_endRevenge(targetId, resFlag, remainHero, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_endRevenge(string targetId, int resFlag, byte remainHero, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endRevenge(targetId, resFlag, remainHero, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endRevenge(targetId, resFlag, remainHero, ctx__, true, cb__, cookie__);
                }

                private const string __endRevenge_name = "endRevenge";

                public string end_endRevenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __endRevenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> begin_endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__endRevenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge>(this, __endRevenge_name, endRevenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__endRevenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(targetId);
                        os__.writeInt(resFlag);
                        os__.writeByte(remainHero);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void endRevenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_endRevenge cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_endRevenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool endRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> result__;
                    try
                    {
                        checkTwowayOnly__(__endRevenge_name);
                        result__ = begin_endRevenge(targetId, resFlag, remainHero);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge>(this, __endRevenge_name, endRevenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool endRevenge_async(com.XSanGo.Protocol.AMI_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge> result__;
                    try
                    {
                        checkTwowayOnly__(__endRevenge_name);
                        result__ = begin_endRevenge(targetId, resFlag, remainHero, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_endRevenge>(this, __endRevenge_name, endRevenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> begin_exchangeItem(int storId)
                {
                    return begin_exchangeItem(storId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> begin_exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_exchangeItem(storId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_exchangeItem(int storId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_exchangeItem(storId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_exchangeItem(storId, ctx__, true, cb__, cookie__);
                }

                private const string __exchangeItem_name = "exchangeItem";

                public string end_exchangeItem(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __exchangeItem_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> begin_exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__exchangeItem_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem>(this, __exchangeItem_name, exchangeItem_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__exchangeItem_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(storId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void exchangeItem_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_exchangeItem(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool exchangeItem_async(com.XSanGo.Protocol.AMI_ArenaRank_exchangeItem cb__, int storId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> result__;
                    try
                    {
                        checkTwowayOnly__(__exchangeItem_name);
                        result__ = begin_exchangeItem(storId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem>(this, __exchangeItem_name, exchangeItem_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool exchangeItem_async(com.XSanGo.Protocol.AMI_ArenaRank_exchangeItem cb__, int storId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem> result__;
                    try
                    {
                        checkTwowayOnly__(__exchangeItem_name);
                        result__ = begin_exchangeItem(storId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_exchangeItem>(this, __exchangeItem_name, exchangeItem_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> begin_getFightMovie(string id)
                {
                    return begin_getFightMovie(id, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> begin_getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getFightMovie(id, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getFightMovie(string id, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getFightMovie(id, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getFightMovie(id, ctx__, true, cb__, cookie__);
                }

                private const string __getFightMovie_name = "getFightMovie";

                public com.XSanGo.Protocol.FightMovieView end_getFightMovie(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getFightMovie_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.FightMovieView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.FightMovieView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> begin_getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getFightMovie_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie>(this, __getFightMovie_name, getFightMovie_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getFightMovie_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(id);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getFightMovie_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.FightMovieView ret__;
                    try
                    {
                        ret__ = end_getFightMovie(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_getFightMovie cb__, string id)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> result__;
                    try
                    {
                        checkTwowayOnly__(__getFightMovie_name);
                        result__ = begin_getFightMovie(id);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie>(this, __getFightMovie_name, getFightMovie_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_getFightMovie cb__, string id, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie> result__;
                    try
                    {
                        checkTwowayOnly__(__getFightMovie_name);
                        result__ = begin_getFightMovie(id, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_getFightMovie>(this, __getFightMovie_name, getFightMovie_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> begin_refMallList()
                {
                    return begin_refMallList(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> begin_refMallList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_refMallList(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_refMallList(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_refMallList(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_refMallList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_refMallList(ctx__, true, cb__, cookie__);
                }

                private const string __refMallList_name = "refMallList";

                public string end_refMallList(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __refMallList_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> begin_refMallList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__refMallList_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_refMallList>(this, __refMallList_name, refMallList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__refMallList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void refMallList_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_refMallList cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_refMallList(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool refMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_refMallList cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> result__;
                    try
                    {
                        checkTwowayOnly__(__refMallList_name);
                        result__ = begin_refMallList();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_refMallList>(this, __refMallList_name, refMallList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool refMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_refMallList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_refMallList> result__;
                    try
                    {
                        checkTwowayOnly__(__refMallList_name);
                        result__ = begin_refMallList(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_refMallList>(this, __refMallList_name, refMallList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> begin_robFightReport()
                {
                    return begin_robFightReport(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> begin_robFightReport(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_robFightReport(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_robFightReport(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_robFightReport(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_robFightReport(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_robFightReport(ctx__, true, cb__, cookie__);
                }

                private const string __robFightReport_name = "robFightReport";

                public string end_robFightReport(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __robFightReport_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> begin_robFightReport(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__robFightReport_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport>(this, __robFightReport_name, robFightReport_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__robFightReport_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void robFightReport_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_robFightReport cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_robFightReport(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool robFightReport_async(com.XSanGo.Protocol.AMI_ArenaRank_robFightReport cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> result__;
                    try
                    {
                        checkTwowayOnly__(__robFightReport_name);
                        result__ = begin_robFightReport();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport>(this, __robFightReport_name, robFightReport_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool robFightReport_async(com.XSanGo.Protocol.AMI_ArenaRank_robFightReport cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport> result__;
                    try
                    {
                        checkTwowayOnly__(__robFightReport_name);
                        result__ = begin_robFightReport(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_robFightReport>(this, __robFightReport_name, robFightReport_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> begin_saveGuard(string guardId)
                {
                    return begin_saveGuard(guardId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> begin_saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_saveGuard(guardId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_saveGuard(string guardId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_saveGuard(guardId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_saveGuard(guardId, ctx__, true, cb__, cookie__);
                }

                private const string __saveGuard_name = "saveGuard";

                public void end_saveGuard(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __saveGuard_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> begin_saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__saveGuard_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard>(this, __saveGuard_name, saveGuard_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__saveGuard_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(guardId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void saveGuard_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_saveGuard cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_saveGuard(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool saveGuard_async(com.XSanGo.Protocol.AMI_ArenaRank_saveGuard cb__, string guardId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> result__;
                    try
                    {
                        checkTwowayOnly__(__saveGuard_name);
                        result__ = begin_saveGuard(guardId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard>(this, __saveGuard_name, saveGuard_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool saveGuard_async(com.XSanGo.Protocol.AMI_ArenaRank_saveGuard cb__, string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard> result__;
                    try
                    {
                        checkTwowayOnly__(__saveGuard_name);
                        result__ = begin_saveGuard(guardId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_saveGuard>(this, __saveGuard_name, saveGuard_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> begin_selHundredRank()
                {
                    return begin_selHundredRank(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> begin_selHundredRank(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_selHundredRank(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_selHundredRank(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selHundredRank(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_selHundredRank(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selHundredRank(ctx__, true, cb__, cookie__);
                }

                private const string __selHundredRank_name = "selHundredRank";

                public string end_selHundredRank(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __selHundredRank_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> begin_selHundredRank(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__selHundredRank_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank>(this, __selHundredRank_name, selHundredRank_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__selHundredRank_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void selHundredRank_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_selHundredRank(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool selHundredRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selHundredRank cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> result__;
                    try
                    {
                        checkTwowayOnly__(__selHundredRank_name);
                        result__ = begin_selHundredRank();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank>(this, __selHundredRank_name, selHundredRank_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool selHundredRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selHundredRank cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank> result__;
                    try
                    {
                        checkTwowayOnly__(__selHundredRank_name);
                        result__ = begin_selHundredRank(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selHundredRank>(this, __selHundredRank_name, selHundredRank_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> begin_selMallList()
                {
                    return begin_selMallList(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> begin_selMallList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_selMallList(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_selMallList(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selMallList(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_selMallList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selMallList(ctx__, true, cb__, cookie__);
                }

                private const string __selMallList_name = "selMallList";

                public string end_selMallList(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __selMallList_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> begin_selMallList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__selMallList_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selMallList>(this, __selMallList_name, selMallList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__selMallList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void selMallList_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_selMallList cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_selMallList(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool selMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_selMallList cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> result__;
                    try
                    {
                        checkTwowayOnly__(__selMallList_name);
                        result__ = begin_selMallList();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selMallList>(this, __selMallList_name, selMallList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool selMallList_async(com.XSanGo.Protocol.AMI_ArenaRank_selMallList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selMallList> result__;
                    try
                    {
                        checkTwowayOnly__(__selMallList_name);
                        result__ = begin_selMallList(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selMallList>(this, __selMallList_name, selMallList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> begin_selectRank()
                {
                    return begin_selectRank(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> begin_selectRank(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_selectRank(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_selectRank(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selectRank(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_selectRank(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selectRank(ctx__, true, cb__, cookie__);
                }

                private const string __selectRank_name = "selectRank";

                public string end_selectRank(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __selectRank_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> begin_selectRank(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__selectRank_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRank>(this, __selectRank_name, selectRank_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__selectRank_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void selectRank_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_selectRank cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_selectRank(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool selectRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRank cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> result__;
                    try
                    {
                        checkTwowayOnly__(__selectRank_name);
                        result__ = begin_selectRank();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRank>(this, __selectRank_name, selectRank_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool selectRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRank cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRank> result__;
                    try
                    {
                        checkTwowayOnly__(__selectRank_name);
                        result__ = begin_selectRank(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRank>(this, __selectRank_name, selectRank_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> begin_selectRivalRank()
                {
                    return begin_selectRivalRank(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> begin_selectRivalRank(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_selectRivalRank(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_selectRivalRank(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selectRivalRank(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_selectRivalRank(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selectRivalRank(ctx__, true, cb__, cookie__);
                }

                private const string __selectRivalRank_name = "selectRivalRank";

                public string end_selectRivalRank(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __selectRivalRank_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> begin_selectRivalRank(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__selectRivalRank_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank>(this, __selectRivalRank_name, selectRivalRank_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__selectRivalRank_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void selectRivalRank_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_selectRivalRank(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool selectRivalRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRivalRank cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> result__;
                    try
                    {
                        checkTwowayOnly__(__selectRivalRank_name);
                        result__ = begin_selectRivalRank();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank>(this, __selectRivalRank_name, selectRivalRank_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool selectRivalRank_async(com.XSanGo.Protocol.AMI_ArenaRank_selectRivalRank cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank> result__;
                    try
                    {
                        checkTwowayOnly__(__selectRivalRank_name);
                        result__ = begin_selectRivalRank(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_selectRivalRank>(this, __selectRivalRank_name, selectRivalRank_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> begin_setSneer(int sneerId, string sneerStr)
                {
                    return begin_setSneer(sneerId, sneerStr, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> begin_setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setSneer(sneerId, sneerStr, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setSneer(int sneerId, string sneerStr, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setSneer(sneerId, sneerStr, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setSneer(sneerId, sneerStr, ctx__, true, cb__, cookie__);
                }

                private const string __setSneer_name = "setSneer";

                public void end_setSneer(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __setSneer_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> begin_setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__setSneer_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_setSneer>(this, __setSneer_name, setSneer_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setSneer_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(sneerId);
                        os__.writeString(sneerStr);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setSneer_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_setSneer cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_setSneer(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool setSneer_async(com.XSanGo.Protocol.AMI_ArenaRank_setSneer cb__, int sneerId, string sneerStr)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> result__;
                    try
                    {
                        checkTwowayOnly__(__setSneer_name);
                        result__ = begin_setSneer(sneerId, sneerStr);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_setSneer>(this, __setSneer_name, setSneer_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setSneer_async(com.XSanGo.Protocol.AMI_ArenaRank_setSneer cb__, int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_setSneer> result__;
                    try
                    {
                        checkTwowayOnly__(__setSneer_name);
                        result__ = begin_setSneer(sneerId, sneerStr, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_setSneer>(this, __setSneer_name, setSneer_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> begin_strutReport(string reportId, int channelType, string targetId, string content)
                {
                    return begin_strutReport(reportId, channelType, targetId, content, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> begin_strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_strutReport(reportId, channelType, targetId, content, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_strutReport(string reportId, int channelType, string targetId, string content, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_strutReport(reportId, channelType, targetId, content, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_strutReport(reportId, channelType, targetId, content, ctx__, true, cb__, cookie__);
                }

                private const string __strutReport_name = "strutReport";

                public void end_strutReport(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __strutReport_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoFactionException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoGroupException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> begin_strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__strutReport_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_strutReport>(this, __strutReport_name, strutReport_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__strutReport_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(reportId);
                        os__.writeInt(channelType);
                        os__.writeString(targetId);
                        os__.writeString(content);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void strutReport_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_strutReport cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_strutReport(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool strutReport_async(com.XSanGo.Protocol.AMI_ArenaRank_strutReport cb__, string reportId, int channelType, string targetId, string content)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> result__;
                    try
                    {
                        checkTwowayOnly__(__strutReport_name);
                        result__ = begin_strutReport(reportId, channelType, targetId, content);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_strutReport>(this, __strutReport_name, strutReport_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool strutReport_async(com.XSanGo.Protocol.AMI_ArenaRank_strutReport cb__, string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_strutReport> result__;
                    try
                    {
                        checkTwowayOnly__(__strutReport_name);
                        result__ = begin_strutReport(reportId, channelType, targetId, content, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_strutReport>(this, __strutReport_name, strutReport_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie)
                {
                    return begin_uploadFightMovie(id, movie, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_uploadFightMovie(id, movie, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_uploadFightMovie(id, movie, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_uploadFightMovie(id, movie, ctx__, true, cb__, cookie__);
                }

                private const string __uploadFightMovie_name = "uploadFightMovie";

                public void end_uploadFightMovie(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __uploadFightMovie_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> begin_uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__uploadFightMovie_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie>(this, __uploadFightMovie_name, uploadFightMovie_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__uploadFightMovie_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(id);
                        if(movie == null)
                        {
                            com.XSanGo.Protocol.FightMovieView tmp__ = new com.XSanGo.Protocol.FightMovieView();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            movie.write__(os__);
                        }
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void uploadFightMovie_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_uploadFightMovie(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool uploadFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_uploadFightMovie cb__, string id, com.XSanGo.Protocol.FightMovieView movie)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> result__;
                    try
                    {
                        checkTwowayOnly__(__uploadFightMovie_name);
                        result__ = begin_uploadFightMovie(id, movie);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie>(this, __uploadFightMovie_name, uploadFightMovie_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool uploadFightMovie_async(com.XSanGo.Protocol.AMI_ArenaRank_uploadFightMovie cb__, string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie> result__;
                    try
                    {
                        checkTwowayOnly__(__uploadFightMovie_name);
                        result__ = begin_uploadFightMovie(id, movie, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_ArenaRank_uploadFightMovie>(this, __uploadFightMovie_name, uploadFightMovie_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static ArenaRankPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    ArenaRankPrx r = b as ArenaRankPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        ArenaRankPrxHelper h = new ArenaRankPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static ArenaRankPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    ArenaRankPrx r = b as ArenaRankPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        ArenaRankPrxHelper h = new ArenaRankPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static ArenaRankPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            ArenaRankPrxHelper h = new ArenaRankPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static ArenaRankPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            ArenaRankPrxHelper h = new ArenaRankPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static ArenaRankPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    ArenaRankPrx r = b as ArenaRankPrx;
                    if(r == null)
                    {
                        ArenaRankPrxHelper h = new ArenaRankPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static ArenaRankPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    ArenaRankPrxHelper h = new ArenaRankPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::ArenaRank"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new ArenaRankDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new ArenaRankDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, ArenaRankPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static ArenaRankPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        ArenaRankPrxHelper result = new ArenaRankPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ArenaRankDel_ : Ice.ObjectDel_
            {
                string selectRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string selectRivalRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string selHundredRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string selMallList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string refMallList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string robFightReport(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void clearCD(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.FightMovieView getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ArenaRankDelM_ : Ice.ObjectDelM_, ArenaRankDel_
            {
                public com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("beginChallenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(targetId);
                            os__.writeString(formationId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.PvpOpponentFormationView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("beginRevenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(targetId);
                            os__.writeString(formationId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.PvpOpponentFormationView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buyChallenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void clearCD(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("clearCD", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("endChallenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(targetId);
                            os__.writeInt(resFlag);
                            os__.writeByte(remainHero);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("endRevenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(targetId);
                            os__.writeInt(resFlag);
                            os__.writeByte(remainHero);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("exchangeItem", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(storId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.FightMovieView getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getFightMovie", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(id);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.FightMovieView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.FightMovieView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string refMallList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("refMallList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string robFightReport(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("robFightReport", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("saveGuard", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(guardId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string selHundredRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("selHundredRank", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string selMallList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("selMallList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string selectRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("selectRank", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string selectRivalRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("selectRivalRank", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setSneer", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(sneerId);
                            os__.writeString(sneerStr);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("strutReport", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(reportId);
                            os__.writeInt(channelType);
                            os__.writeString(targetId);
                            os__.writeString(content);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoFactionException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoGroupException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("uploadFightMovie", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(id);
                            if(movie == null)
                            {
                                com.XSanGo.Protocol.FightMovieView tmp__ = new com.XSanGo.Protocol.FightMovieView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                movie.write__(os__);
                            }
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ArenaRankDelD_ : Ice.ObjectDelD_, ArenaRankDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.PvpOpponentFormationView beginChallenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.PvpOpponentFormationView beginRevenge(string targetId, string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buyChallenge", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.buyChallenge(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void clearCD(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "clearCD", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.clearCD(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string endChallenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string endRevenge(string targetId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string exchangeItem(int storId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "exchangeItem", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.exchangeItem(storId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.FightMovieView getFightMovie(string id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string refMallList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "refMallList", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.refMallList(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string robFightReport(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void saveGuard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "saveGuard", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.saveGuard(guardId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string selHundredRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string selMallList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "selMallList", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.selMallList(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string selectRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string selectRivalRank(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void setSneer(int sneerId, string sneerStr, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "setSneer", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.setSneer(sneerId, sneerStr, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void strutReport(string reportId, int channelType, string targetId, string content, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "strutReport", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.strutReport(reportId, channelType, targetId, content, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoFactionException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoGroupException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "uploadFightMovie", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        ArenaRank servant__ = null;
                        try
                        {
                            servant__ = (ArenaRank)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.uploadFightMovie(id, movie, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class ArenaRankDisp_ : Ice.ObjectImpl, ArenaRank
            {
                #region Slice operations

                public void selectRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRank cb__)
                {
                    selectRank_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void selectRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRank cb__, Ice.Current current__);

                public void selectRivalRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRivalRank cb__)
                {
                    selectRivalRank_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void selectRivalRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selectRivalRank cb__, Ice.Current current__);

                public void saveGuard(string guardId)
                {
                    saveGuard(guardId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void saveGuard(string guardId, Ice.Current current__);

                public void setSneer(int sneerId, string sneerStr)
                {
                    setSneer(sneerId, sneerStr, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void setSneer(int sneerId, string sneerStr, Ice.Current current__);

                public void buyChallenge()
                {
                    buyChallenge(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void buyChallenge(Ice.Current current__);

                public void selHundredRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selHundredRank cb__)
                {
                    selHundredRank_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void selHundredRank_async(com.XSanGo.Protocol.AMD_ArenaRank_selHundredRank cb__, Ice.Current current__);

                public string selMallList()
                {
                    return selMallList(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string selMallList(Ice.Current current__);

                public string refMallList()
                {
                    return refMallList(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string refMallList(Ice.Current current__);

                public string exchangeItem(int storId)
                {
                    return exchangeItem(storId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string exchangeItem(int storId, Ice.Current current__);

                public void robFightReport_async(com.XSanGo.Protocol.AMD_ArenaRank_robFightReport cb__)
                {
                    robFightReport_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void robFightReport_async(com.XSanGo.Protocol.AMD_ArenaRank_robFightReport cb__, Ice.Current current__);

                public void beginRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginRevenge cb__, string targetId, string formationId)
                {
                    beginRevenge_async(cb__, targetId, formationId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void beginRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginRevenge cb__, string targetId, string formationId, Ice.Current current__);

                public void endRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero)
                {
                    endRevenge_async(cb__, targetId, resFlag, remainHero, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void endRevenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endRevenge cb__, string targetId, int resFlag, byte remainHero, Ice.Current current__);

                public void strutReport(string reportId, int channelType, string targetId, string content)
                {
                    strutReport(reportId, channelType, targetId, content, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void strutReport(string reportId, int channelType, string targetId, string content, Ice.Current current__);

                public void beginChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginChallenge cb__, string targetId, string formationId)
                {
                    beginChallenge_async(cb__, targetId, formationId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void beginChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_beginChallenge cb__, string targetId, string formationId, Ice.Current current__);

                public void endChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero)
                {
                    endChallenge_async(cb__, targetId, resFlag, remainHero, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void endChallenge_async(com.XSanGo.Protocol.AMD_ArenaRank_endChallenge cb__, string targetId, int resFlag, byte remainHero, Ice.Current current__);

                public void clearCD()
                {
                    clearCD(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void clearCD(Ice.Current current__);

                public void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie)
                {
                    uploadFightMovie(id, movie, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void uploadFightMovie(string id, com.XSanGo.Protocol.FightMovieView movie, Ice.Current current__);

                public void getFightMovie_async(com.XSanGo.Protocol.AMD_ArenaRank_getFightMovie cb__, string id)
                {
                    getFightMovie_async(cb__, id, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void getFightMovie_async(com.XSanGo.Protocol.AMD_ArenaRank_getFightMovie cb__, string id, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::ArenaRank"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus selectRank___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_ArenaRank_selectRank cb__ = new _AMD_ArenaRank_selectRank(inS__);
                    try
                    {
                        obj__.selectRank_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus selectRivalRank___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_ArenaRank_selectRivalRank cb__ = new _AMD_ArenaRank_selectRivalRank(inS__);
                    try
                    {
                        obj__.selectRivalRank_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus saveGuard___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string guardId;
                    guardId = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.saveGuard(guardId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setSneer___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int sneerId;
                    string sneerStr;
                    sneerId = is__.readInt();
                    sneerStr = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.setSneer(sneerId, sneerStr, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buyChallenge___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.buyChallenge(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus selHundredRank___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_ArenaRank_selHundredRank cb__ = new _AMD_ArenaRank_selHundredRank(inS__);
                    try
                    {
                        obj__.selHundredRank_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus selMallList___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        string ret__ = obj__.selMallList(current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus refMallList___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        string ret__ = obj__.refMallList(current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus exchangeItem___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int storId;
                    storId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        string ret__ = obj__.exchangeItem(storId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus robFightReport___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_ArenaRank_robFightReport cb__ = new _AMD_ArenaRank_robFightReport(inS__);
                    try
                    {
                        obj__.robFightReport_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus beginRevenge___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string targetId;
                    string formationId;
                    targetId = is__.readString();
                    formationId = is__.readString();
                    inS__.endReadParams();
                    AMD_ArenaRank_beginRevenge cb__ = new _AMD_ArenaRank_beginRevenge(inS__);
                    try
                    {
                        obj__.beginRevenge_async(cb__, targetId, formationId, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus endRevenge___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string targetId;
                    int resFlag;
                    byte remainHero;
                    targetId = is__.readString();
                    resFlag = is__.readInt();
                    remainHero = is__.readByte();
                    inS__.endReadParams();
                    AMD_ArenaRank_endRevenge cb__ = new _AMD_ArenaRank_endRevenge(inS__);
                    try
                    {
                        obj__.endRevenge_async(cb__, targetId, resFlag, remainHero, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus strutReport___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string reportId;
                    int channelType;
                    string targetId;
                    string content;
                    reportId = is__.readString();
                    channelType = is__.readInt();
                    targetId = is__.readString();
                    content = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.strutReport(reportId, channelType, targetId, content, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoFactionException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoGroupException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus beginChallenge___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string targetId;
                    string formationId;
                    targetId = is__.readString();
                    formationId = is__.readString();
                    inS__.endReadParams();
                    AMD_ArenaRank_beginChallenge cb__ = new _AMD_ArenaRank_beginChallenge(inS__);
                    try
                    {
                        obj__.beginChallenge_async(cb__, targetId, formationId, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus endChallenge___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string targetId;
                    int resFlag;
                    byte remainHero;
                    targetId = is__.readString();
                    resFlag = is__.readInt();
                    remainHero = is__.readByte();
                    inS__.endReadParams();
                    AMD_ArenaRank_endChallenge cb__ = new _AMD_ArenaRank_endChallenge(inS__);
                    try
                    {
                        obj__.endChallenge_async(cb__, targetId, resFlag, remainHero, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus clearCD___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.clearCD(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus uploadFightMovie___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string id;
                    com.XSanGo.Protocol.FightMovieView movie;
                    movie = null;
                    id = is__.readString();
                    if(movie == null)
                    {
                        movie = new com.XSanGo.Protocol.FightMovieView();
                    }
                    movie.read__(is__);
                    inS__.endReadParams();
                    try
                    {
                        obj__.uploadFightMovie(id, movie, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getFightMovie___(ArenaRank obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string id;
                    id = is__.readString();
                    inS__.endReadParams();
                    AMD_ArenaRank_getFightMovie cb__ = new _AMD_ArenaRank_getFightMovie(inS__);
                    try
                    {
                        obj__.getFightMovie_async(cb__, id, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                private static string[] all__ =
                {
                    "beginChallenge",
                    "beginRevenge",
                    "buyChallenge",
                    "clearCD",
                    "endChallenge",
                    "endRevenge",
                    "exchangeItem",
                    "getFightMovie",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "refMallList",
                    "robFightReport",
                    "saveGuard",
                    "selHundredRank",
                    "selMallList",
                    "selectRank",
                    "selectRivalRank",
                    "setSneer",
                    "strutReport",
                    "uploadFightMovie"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return beginChallenge___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return beginRevenge___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return buyChallenge___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return clearCD___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return endChallenge___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return endRevenge___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return exchangeItem___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return getFightMovie___(this, inS__, current__);
                        }
                        case 8:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 9:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 10:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 11:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 12:
                        {
                            return refMallList___(this, inS__, current__);
                        }
                        case 13:
                        {
                            return robFightReport___(this, inS__, current__);
                        }
                        case 14:
                        {
                            return saveGuard___(this, inS__, current__);
                        }
                        case 15:
                        {
                            return selHundredRank___(this, inS__, current__);
                        }
                        case 16:
                        {
                            return selMallList___(this, inS__, current__);
                        }
                        case 17:
                        {
                            return selectRank___(this, inS__, current__);
                        }
                        case 18:
                        {
                            return selectRivalRank___(this, inS__, current__);
                        }
                        case 19:
                        {
                            return setSneer___(this, inS__, current__);
                        }
                        case 20:
                        {
                            return strutReport___(this, inS__, current__);
                        }
                        case 21:
                        {
                            return uploadFightMovie___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_selectRank : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_selectRank : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_selectRank : IceInternal.IncomingAsync, AMD_ArenaRank_selectRank
            {
                public _AMD_ArenaRank_selectRank(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_selectRivalRank : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_selectRivalRank : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_selectRivalRank : IceInternal.IncomingAsync, AMD_ArenaRank_selectRivalRank
            {
                public _AMD_ArenaRank_selectRivalRank(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_saveGuard : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_setSneer : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_buyChallenge : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_selHundredRank : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_selHundredRank : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_selHundredRank : IceInternal.IncomingAsync, AMD_ArenaRank_selHundredRank
            {
                public _AMD_ArenaRank_selHundredRank(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_selMallList : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_refMallList : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_exchangeItem : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_robFightReport : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_robFightReport : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_robFightReport : IceInternal.IncomingAsync, AMD_ArenaRank_robFightReport
            {
                public _AMD_ArenaRank_robFightReport(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_beginRevenge : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.PvpOpponentFormationView ret__);

                public void response__(com.XSanGo.Protocol.PvpOpponentFormationView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_beginRevenge : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.PvpOpponentFormationView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_beginRevenge : IceInternal.IncomingAsync, AMD_ArenaRank_beginRevenge
            {
                public _AMD_ArenaRank_beginRevenge(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.PvpOpponentFormationView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.PvpOpponentFormationView tmp__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_endRevenge : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_endRevenge : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_endRevenge : IceInternal.IncomingAsync, AMD_ArenaRank_endRevenge
            {
                public _AMD_ArenaRank_endRevenge(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_strutReport : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_beginChallenge : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.PvpOpponentFormationView ret__);

                public void response__(com.XSanGo.Protocol.PvpOpponentFormationView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_beginChallenge : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.PvpOpponentFormationView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_beginChallenge : IceInternal.IncomingAsync, AMD_ArenaRank_beginChallenge
            {
                public _AMD_ArenaRank_beginChallenge(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.PvpOpponentFormationView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.PvpOpponentFormationView tmp__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_endChallenge : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_endChallenge : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_endChallenge : IceInternal.IncomingAsync, AMD_ArenaRank_endChallenge
            {
                public _AMD_ArenaRank_endChallenge(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_clearCD : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_uploadFightMovie : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_ArenaRank_getFightMovie : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.FightMovieView ret__);

                public void response__(com.XSanGo.Protocol.FightMovieView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_ArenaRank_getFightMovie : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.FightMovieView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_ArenaRank_getFightMovie : IceInternal.IncomingAsync, AMD_ArenaRank_getFightMovie
            {
                public _AMD_ArenaRank_getFightMovie(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.FightMovieView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.FightMovieView tmp__ = new com.XSanGo.Protocol.FightMovieView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }
        }
    }
}
