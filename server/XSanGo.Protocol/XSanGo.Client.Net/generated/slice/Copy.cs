// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Copy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class SmallCopyView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public short challengeTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public short maxTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int clearTokenCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool hasAllStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string firstAllStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int firstAllStarLvl;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int resetCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string refreshTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int needMilitaryOrder;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public SmallCopyView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public SmallCopyView(short challengeTime, short maxTime, int clearTokenCount, bool hasAllStar, string firstAllStar, int firstAllStarLvl, int resetCount, string refreshTime, int needMilitaryOrder)
                {
                    this.challengeTime = challengeTime;
                    this.maxTime = maxTime;
                    this.clearTokenCount = clearTokenCount;
                    this.hasAllStar = hasAllStar;
                    this.firstAllStar = firstAllStar;
                    this.firstAllStarLvl = firstAllStarLvl;
                    this.resetCount = resetCount;
                    this.refreshTime = refreshTime;
                    this.needMilitaryOrder = needMilitaryOrder;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::SmallCopyView");
                    IceInternal.HashUtil.hashAdd(ref h__, challengeTime);
                    IceInternal.HashUtil.hashAdd(ref h__, maxTime);
                    IceInternal.HashUtil.hashAdd(ref h__, clearTokenCount);
                    IceInternal.HashUtil.hashAdd(ref h__, hasAllStar);
                    IceInternal.HashUtil.hashAdd(ref h__, firstAllStar);
                    IceInternal.HashUtil.hashAdd(ref h__, firstAllStarLvl);
                    IceInternal.HashUtil.hashAdd(ref h__, resetCount);
                    IceInternal.HashUtil.hashAdd(ref h__, refreshTime);
                    IceInternal.HashUtil.hashAdd(ref h__, needMilitaryOrder);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    SmallCopyView o__ = (SmallCopyView)other__;
                    if(!challengeTime.Equals(o__.challengeTime))
                    {
                        return false;
                    }
                    if(!maxTime.Equals(o__.maxTime))
                    {
                        return false;
                    }
                    if(!clearTokenCount.Equals(o__.clearTokenCount))
                    {
                        return false;
                    }
                    if(!hasAllStar.Equals(o__.hasAllStar))
                    {
                        return false;
                    }
                    if(firstAllStar == null)
                    {
                        if(o__.firstAllStar != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!firstAllStar.Equals(o__.firstAllStar))
                        {
                            return false;
                        }
                    }
                    if(!firstAllStarLvl.Equals(o__.firstAllStarLvl))
                    {
                        return false;
                    }
                    if(!resetCount.Equals(o__.resetCount))
                    {
                        return false;
                    }
                    if(refreshTime == null)
                    {
                        if(o__.refreshTime != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!refreshTime.Equals(o__.refreshTime))
                        {
                            return false;
                        }
                    }
                    if(!needMilitaryOrder.Equals(o__.needMilitaryOrder))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(SmallCopyView lhs__, SmallCopyView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(SmallCopyView lhs__, SmallCopyView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeShort(challengeTime);
                    os__.writeShort(maxTime);
                    os__.writeInt(clearTokenCount);
                    os__.writeBool(hasAllStar);
                    os__.writeString(firstAllStar);
                    os__.writeInt(firstAllStarLvl);
                    os__.writeInt(resetCount);
                    os__.writeString(refreshTime);
                    os__.writeInt(needMilitaryOrder);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    challengeTime = is__.readShort();
                    maxTime = is__.readShort();
                    clearTokenCount = is__.readInt();
                    hasAllStar = is__.readBool();
                    firstAllStar = is__.readString();
                    firstAllStarLvl = is__.readInt();
                    resetCount = is__.readInt();
                    refreshTime = is__.readString();
                    needMilitaryOrder = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class CopyDetail : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int copyId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int star;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.SmallCopyView smallView;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopyDetail()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopyDetail(int copyId, int star, com.XSanGo.Protocol.SmallCopyView smallView)
                {
                    this.copyId = copyId;
                    this.star = star;
                    this.smallView = smallView;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::CopyDetail");
                    IceInternal.HashUtil.hashAdd(ref h__, copyId);
                    IceInternal.HashUtil.hashAdd(ref h__, star);
                    IceInternal.HashUtil.hashAdd(ref h__, smallView);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    CopyDetail o__ = (CopyDetail)other__;
                    if(!copyId.Equals(o__.copyId))
                    {
                        return false;
                    }
                    if(!star.Equals(o__.star))
                    {
                        return false;
                    }
                    if(smallView == null)
                    {
                        if(o__.smallView != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!smallView.Equals(o__.smallView))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(CopyDetail lhs__, CopyDetail rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(CopyDetail lhs__, CopyDetail rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(copyId);
                    os__.writeInt(star);
                    if(smallView == null)
                    {
                        com.XSanGo.Protocol.SmallCopyView tmp__ = new com.XSanGo.Protocol.SmallCopyView();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        smallView.write__(os__);
                    }
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    copyId = is__.readInt();
                    star = is__.readInt();
                    if(smallView == null)
                    {
                        smallView = new com.XSanGo.Protocol.SmallCopyView();
                    }
                    smallView.read__(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class BigCopyView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.CopyDetail[] copyJunior;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.CopyDetail[] copySenior;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.CopyDetail[] copyTop;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public BigCopyView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public BigCopyView(com.XSanGo.Protocol.CopyDetail[] copyJunior, com.XSanGo.Protocol.CopyDetail[] copySenior, com.XSanGo.Protocol.CopyDetail[] copyTop)
                {
                    this.copyJunior = copyJunior;
                    this.copySenior = copySenior;
                    this.copyTop = copyTop;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::BigCopyView");
                    IceInternal.HashUtil.hashAdd(ref h__, copyJunior);
                    IceInternal.HashUtil.hashAdd(ref h__, copySenior);
                    IceInternal.HashUtil.hashAdd(ref h__, copyTop);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    BigCopyView o__ = (BigCopyView)other__;
                    if(copyJunior == null)
                    {
                        if(o__.copyJunior != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(copyJunior, o__.copyJunior))
                        {
                            return false;
                        }
                    }
                    if(copySenior == null)
                    {
                        if(o__.copySenior != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(copySenior, o__.copySenior))
                        {
                            return false;
                        }
                    }
                    if(copyTop == null)
                    {
                        if(o__.copyTop != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(copyTop, o__.copyTop))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(BigCopyView lhs__, BigCopyView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(BigCopyView lhs__, BigCopyView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    com.XSanGo.Protocol.CopyDetailSeqHelper.write(os__, copyJunior);
                    com.XSanGo.Protocol.CopyDetailSeqHelper.write(os__, copySenior);
                    com.XSanGo.Protocol.CopyDetailSeqHelper.write(os__, copyTop);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    copyJunior = com.XSanGo.Protocol.CopyDetailSeqHelper.read(is__);
                    copySenior = com.XSanGo.Protocol.CopyDetailSeqHelper.read(is__);
                    copyTop = com.XSanGo.Protocol.CopyDetailSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class CaptureView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int catchHeroId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int releaseExp;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ItemView[] killItems;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string releaseMsg;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string killMsg;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool handle;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int employTime;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CaptureView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CaptureView(int catchHeroId, int releaseExp, com.XSanGo.Protocol.ItemView[] killItems, string releaseMsg, string killMsg, bool handle, int employTime)
                {
                    this.catchHeroId = catchHeroId;
                    this.releaseExp = releaseExp;
                    this.killItems = killItems;
                    this.releaseMsg = releaseMsg;
                    this.killMsg = killMsg;
                    this.handle = handle;
                    this.employTime = employTime;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::CaptureView");
                    IceInternal.HashUtil.hashAdd(ref h__, catchHeroId);
                    IceInternal.HashUtil.hashAdd(ref h__, releaseExp);
                    IceInternal.HashUtil.hashAdd(ref h__, killItems);
                    IceInternal.HashUtil.hashAdd(ref h__, releaseMsg);
                    IceInternal.HashUtil.hashAdd(ref h__, killMsg);
                    IceInternal.HashUtil.hashAdd(ref h__, handle);
                    IceInternal.HashUtil.hashAdd(ref h__, employTime);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    CaptureView o__ = (CaptureView)other__;
                    if(!catchHeroId.Equals(o__.catchHeroId))
                    {
                        return false;
                    }
                    if(!releaseExp.Equals(o__.releaseExp))
                    {
                        return false;
                    }
                    if(killItems == null)
                    {
                        if(o__.killItems != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(killItems, o__.killItems))
                        {
                            return false;
                        }
                    }
                    if(releaseMsg == null)
                    {
                        if(o__.releaseMsg != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!releaseMsg.Equals(o__.releaseMsg))
                        {
                            return false;
                        }
                    }
                    if(killMsg == null)
                    {
                        if(o__.killMsg != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!killMsg.Equals(o__.killMsg))
                        {
                            return false;
                        }
                    }
                    if(!handle.Equals(o__.handle))
                    {
                        return false;
                    }
                    if(!employTime.Equals(o__.employTime))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(CaptureView lhs__, CaptureView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(CaptureView lhs__, CaptureView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(catchHeroId);
                    os__.writeInt(releaseExp);
                    com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, killItems);
                    os__.writeString(releaseMsg);
                    os__.writeString(killMsg);
                    os__.writeBool(handle);
                    os__.writeInt(employTime);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    catchHeroId = is__.readInt();
                    releaseExp = is__.readInt();
                    killItems = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                    releaseMsg = is__.readString();
                    killMsg = is__.readString();
                    handle = is__.readBool();
                    employTime = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class CopyChallengeResultView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.Property[] heroExps;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ItemView[] items;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.DuelUnitView[] duelCandidate;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.SceneDuelView[] reports;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.CaptureView[] capture;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopyChallengeResultView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopyChallengeResultView(com.XSanGo.Protocol.Property[] heroExps, com.XSanGo.Protocol.ItemView[] items, com.XSanGo.Protocol.DuelUnitView[] duelCandidate, com.XSanGo.Protocol.SceneDuelView[] reports, com.XSanGo.Protocol.CaptureView[] capture)
                {
                    this.heroExps = heroExps;
                    this.items = items;
                    this.duelCandidate = duelCandidate;
                    this.reports = reports;
                    this.capture = capture;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::CopyChallengeResultView");
                    IceInternal.HashUtil.hashAdd(ref h__, heroExps);
                    IceInternal.HashUtil.hashAdd(ref h__, items);
                    IceInternal.HashUtil.hashAdd(ref h__, duelCandidate);
                    IceInternal.HashUtil.hashAdd(ref h__, reports);
                    IceInternal.HashUtil.hashAdd(ref h__, capture);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    CopyChallengeResultView o__ = (CopyChallengeResultView)other__;
                    if(heroExps == null)
                    {
                        if(o__.heroExps != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(heroExps, o__.heroExps))
                        {
                            return false;
                        }
                    }
                    if(items == null)
                    {
                        if(o__.items != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(items, o__.items))
                        {
                            return false;
                        }
                    }
                    if(duelCandidate == null)
                    {
                        if(o__.duelCandidate != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(duelCandidate, o__.duelCandidate))
                        {
                            return false;
                        }
                    }
                    if(reports == null)
                    {
                        if(o__.reports != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(reports, o__.reports))
                        {
                            return false;
                        }
                    }
                    if(capture == null)
                    {
                        if(o__.capture != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(capture, o__.capture))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(CopyChallengeResultView lhs__, CopyChallengeResultView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(CopyChallengeResultView lhs__, CopyChallengeResultView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    com.XSanGo.Protocol.PropertySeqHelper.write(os__, heroExps);
                    com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                    com.XSanGo.Protocol.DuelUnitViewSeqHelper.write(os__, duelCandidate);
                    com.XSanGo.Protocol.SceneDuelViewSeqHelper.write(os__, reports);
                    com.XSanGo.Protocol.CaptureViewSeqHelper.write(os__, capture);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    heroExps = com.XSanGo.Protocol.PropertySeqHelper.read(is__);
                    items = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                    duelCandidate = com.XSanGo.Protocol.DuelUnitViewSeqHelper.read(is__);
                    reports = com.XSanGo.Protocol.SceneDuelViewSeqHelper.read(is__);
                    capture = com.XSanGo.Protocol.CaptureViewSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class CopyClearResultView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int copyId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ItemView[] items;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ItemView[] additionItems;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopyClearResultView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopyClearResultView(int copyId, com.XSanGo.Protocol.ItemView[] items, com.XSanGo.Protocol.ItemView[] additionItems)
                {
                    this.copyId = copyId;
                    this.items = items;
                    this.additionItems = additionItems;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::CopyClearResultView");
                    IceInternal.HashUtil.hashAdd(ref h__, copyId);
                    IceInternal.HashUtil.hashAdd(ref h__, items);
                    IceInternal.HashUtil.hashAdd(ref h__, additionItems);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    CopyClearResultView o__ = (CopyClearResultView)other__;
                    if(!copyId.Equals(o__.copyId))
                    {
                        return false;
                    }
                    if(items == null)
                    {
                        if(o__.items != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(items, o__.items))
                        {
                            return false;
                        }
                    }
                    if(additionItems == null)
                    {
                        if(o__.additionItems != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(additionItems, o__.additionItems))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(CopyClearResultView lhs__, CopyClearResultView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(CopyClearResultView lhs__, CopyClearResultView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(copyId);
                    com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                    com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, additionItems);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    copyId = is__.readInt();
                    items = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                    additionItems = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial struct ChapterReward
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool canReceive;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool hasReceived;

                #endregion

                #region Constructor

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChapterReward(int level, bool canReceive, bool hasReceived)
                {
                    this.level = level;
                    this.canReceive = canReceive;
                    this.hasReceived = hasReceived;
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ChapterReward");
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, canReceive);
                    IceInternal.HashUtil.hashAdd(ref h__, hasReceived);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(!(other__ is ChapterReward))
                    {
                        return false;
                    }
                    ChapterReward o__ = (ChapterReward)other__;
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(!canReceive.Equals(o__.canReceive))
                    {
                        return false;
                    }
                    if(!hasReceived.Equals(o__.hasReceived))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ChapterReward lhs__, ChapterReward rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ChapterReward lhs__, ChapterReward rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(level);
                    os__.writeBool(canReceive);
                    os__.writeBool(hasReceived);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    level = is__.readInt();
                    canReceive = is__.readBool();
                    hasReceived = is__.readBool();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ChapterRewardView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int totalStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ChapterReward[] rewardList;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChapterRewardView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChapterRewardView(int totalStar, com.XSanGo.Protocol.ChapterReward[] rewardList)
                {
                    this.totalStar = totalStar;
                    this.rewardList = rewardList;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ChapterRewardView");
                    IceInternal.HashUtil.hashAdd(ref h__, totalStar);
                    IceInternal.HashUtil.hashAdd(ref h__, rewardList);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ChapterRewardView o__ = (ChapterRewardView)other__;
                    if(!totalStar.Equals(o__.totalStar))
                    {
                        return false;
                    }
                    if(rewardList == null)
                    {
                        if(o__.rewardList != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(rewardList, o__.rewardList))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ChapterRewardView lhs__, ChapterRewardView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ChapterRewardView lhs__, ChapterRewardView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(totalStar);
                    com.XSanGo.Protocol.ChapterRewardSeqHelper.write(os__, rewardList);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    totalStar = is__.readInt();
                    rewardList = com.XSanGo.Protocol.ChapterRewardSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class EmployCaptureResult : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool success;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string msg;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string soulId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int soulCount;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public EmployCaptureResult()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public EmployCaptureResult(bool success, string msg, string soulId, int soulCount)
                {
                    this.success = success;
                    this.msg = msg;
                    this.soulId = soulId;
                    this.soulCount = soulCount;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::EmployCaptureResult");
                    IceInternal.HashUtil.hashAdd(ref h__, success);
                    IceInternal.HashUtil.hashAdd(ref h__, msg);
                    IceInternal.HashUtil.hashAdd(ref h__, soulId);
                    IceInternal.HashUtil.hashAdd(ref h__, soulCount);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    EmployCaptureResult o__ = (EmployCaptureResult)other__;
                    if(!success.Equals(o__.success))
                    {
                        return false;
                    }
                    if(msg == null)
                    {
                        if(o__.msg != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!msg.Equals(o__.msg))
                        {
                            return false;
                        }
                    }
                    if(soulId == null)
                    {
                        if(o__.soulId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!soulId.Equals(o__.soulId))
                        {
                            return false;
                        }
                    }
                    if(!soulCount.Equals(o__.soulCount))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(EmployCaptureResult lhs__, EmployCaptureResult rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(EmployCaptureResult lhs__, EmployCaptureResult rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeBool(success);
                    os__.writeString(msg);
                    os__.writeString(soulId);
                    os__.writeInt(soulCount);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    success = is__.readBool();
                    msg = is__.readString();
                    soulId = is__.readString();
                    soulCount = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class HallOfFameView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int copyCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string headImg;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public short level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vip;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public HallOfFameView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public HallOfFameView(string roleId, string roleName, int copyCount, string headImg, short level, int vip)
                {
                    this.roleId = roleId;
                    this.roleName = roleName;
                    this.copyCount = copyCount;
                    this.headImg = headImg;
                    this.level = level;
                    this.vip = vip;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::HallOfFameView");
                    IceInternal.HashUtil.hashAdd(ref h__, roleId);
                    IceInternal.HashUtil.hashAdd(ref h__, roleName);
                    IceInternal.HashUtil.hashAdd(ref h__, copyCount);
                    IceInternal.HashUtil.hashAdd(ref h__, headImg);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, vip);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    HallOfFameView o__ = (HallOfFameView)other__;
                    if(roleId == null)
                    {
                        if(o__.roleId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleId.Equals(o__.roleId))
                        {
                            return false;
                        }
                    }
                    if(roleName == null)
                    {
                        if(o__.roleName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleName.Equals(o__.roleName))
                        {
                            return false;
                        }
                    }
                    if(!copyCount.Equals(o__.copyCount))
                    {
                        return false;
                    }
                    if(headImg == null)
                    {
                        if(o__.headImg != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!headImg.Equals(o__.headImg))
                        {
                            return false;
                        }
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(!vip.Equals(o__.vip))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(HallOfFameView lhs__, HallOfFameView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(HallOfFameView lhs__, HallOfFameView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(roleId);
                    os__.writeString(roleName);
                    os__.writeInt(copyCount);
                    os__.writeString(headImg);
                    os__.writeShort(level);
                    os__.writeInt(vip);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    roleId = is__.readString();
                    roleName = is__.readString();
                    copyCount = is__.readInt();
                    headImg = is__.readString();
                    level = is__.readShort();
                    vip = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial struct CopySummaryView
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int remainCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int maxCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool open;

                #endregion

                #region Constructor

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public CopySummaryView(int remainCount, int maxCount, bool open)
                {
                    this.remainCount = remainCount;
                    this.maxCount = maxCount;
                    this.open = open;
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::CopySummaryView");
                    IceInternal.HashUtil.hashAdd(ref h__, remainCount);
                    IceInternal.HashUtil.hashAdd(ref h__, maxCount);
                    IceInternal.HashUtil.hashAdd(ref h__, open);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(!(other__ is CopySummaryView))
                    {
                        return false;
                    }
                    CopySummaryView o__ = (CopySummaryView)other__;
                    if(!remainCount.Equals(o__.remainCount))
                    {
                        return false;
                    }
                    if(!maxCount.Equals(o__.maxCount))
                    {
                        return false;
                    }
                    if(!open.Equals(o__.open))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(CopySummaryView lhs__, CopySummaryView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(CopySummaryView lhs__, CopySummaryView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(remainCount);
                    os__.writeInt(maxCount);
                    os__.writeBool(open);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    remainCount = is__.readInt();
                    maxCount = is__.readInt();
                    open = is__.readBool();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ChallengeTaView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string headImg;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sex;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vip;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.PvpOpponentFormationView formationView;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChallengeTaView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChallengeTaView(string roleId, string roleName, string headImg, int sex, int vip, int level, com.XSanGo.Protocol.PvpOpponentFormationView formationView)
                {
                    this.roleId = roleId;
                    this.roleName = roleName;
                    this.headImg = headImg;
                    this.sex = sex;
                    this.vip = vip;
                    this.level = level;
                    this.formationView = formationView;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ChallengeTaView");
                    IceInternal.HashUtil.hashAdd(ref h__, roleId);
                    IceInternal.HashUtil.hashAdd(ref h__, roleName);
                    IceInternal.HashUtil.hashAdd(ref h__, headImg);
                    IceInternal.HashUtil.hashAdd(ref h__, sex);
                    IceInternal.HashUtil.hashAdd(ref h__, vip);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, formationView);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ChallengeTaView o__ = (ChallengeTaView)other__;
                    if(roleId == null)
                    {
                        if(o__.roleId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleId.Equals(o__.roleId))
                        {
                            return false;
                        }
                    }
                    if(roleName == null)
                    {
                        if(o__.roleName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleName.Equals(o__.roleName))
                        {
                            return false;
                        }
                    }
                    if(headImg == null)
                    {
                        if(o__.headImg != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!headImg.Equals(o__.headImg))
                        {
                            return false;
                        }
                    }
                    if(!sex.Equals(o__.sex))
                    {
                        return false;
                    }
                    if(!vip.Equals(o__.vip))
                    {
                        return false;
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(formationView == null)
                    {
                        if(o__.formationView != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!formationView.Equals(o__.formationView))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ChallengeTaView lhs__, ChallengeTaView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ChallengeTaView lhs__, ChallengeTaView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(roleId);
                    os__.writeString(roleName);
                    os__.writeString(headImg);
                    os__.writeInt(sex);
                    os__.writeInt(vip);
                    os__.writeInt(level);
                    if(formationView == null)
                    {
                        com.XSanGo.Protocol.PvpOpponentFormationView tmp__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        formationView.write__(os__);
                    }
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    roleId = is__.readString();
                    roleName = is__.readString();
                    headImg = is__.readString();
                    sex = is__.readInt();
                    vip = is__.readInt();
                    level = is__.readInt();
                    if(formationView == null)
                    {
                        formationView = new com.XSanGo.Protocol.PvpOpponentFormationView();
                    }
                    formationView.read__(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial struct HuDongView
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int hudongCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int maxHudongCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int buyHudongCount;

                #endregion

                #region Constructor

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public HuDongView(int hudongCount, int maxHudongCount, int buyHudongCount)
                {
                    this.hudongCount = hudongCount;
                    this.maxHudongCount = maxHudongCount;
                    this.buyHudongCount = buyHudongCount;
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::HuDongView");
                    IceInternal.HashUtil.hashAdd(ref h__, hudongCount);
                    IceInternal.HashUtil.hashAdd(ref h__, maxHudongCount);
                    IceInternal.HashUtil.hashAdd(ref h__, buyHudongCount);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(!(other__ is HuDongView))
                    {
                        return false;
                    }
                    HuDongView o__ = (HuDongView)other__;
                    if(!hudongCount.Equals(o__.hudongCount))
                    {
                        return false;
                    }
                    if(!maxHudongCount.Equals(o__.maxHudongCount))
                    {
                        return false;
                    }
                    if(!buyHudongCount.Equals(o__.buyHudongCount))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(HuDongView lhs__, HuDongView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(HuDongView lhs__, HuDongView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(hudongCount);
                    os__.writeInt(maxHudongCount);
                    os__.writeInt(buyHudongCount);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    hudongCount = is__.readInt();
                    maxHudongCount = is__.readInt();
                    buyHudongCount = is__.readInt();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ChallengeTaResult : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int flag;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string movieId;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChallengeTaResult()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ChallengeTaResult(int flag, string movieId)
                {
                    this.flag = flag;
                    this.movieId = movieId;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ChallengeTaResult");
                    IceInternal.HashUtil.hashAdd(ref h__, flag);
                    IceInternal.HashUtil.hashAdd(ref h__, movieId);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ChallengeTaResult o__ = (ChallengeTaResult)other__;
                    if(!flag.Equals(o__.flag))
                    {
                        return false;
                    }
                    if(movieId == null)
                    {
                        if(o__.movieId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!movieId.Equals(o__.movieId))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ChallengeTaResult lhs__, ChallengeTaResult rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ChallengeTaResult lhs__, ChallengeTaResult rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(flag);
                    os__.writeString(movieId);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    flag = is__.readInt();
                    movieId = is__.readString();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial struct BuyMilitaryOrderView
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int alreadyCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int maxCount;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int yuanbao;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int militaryOrder;

                #endregion

                #region Constructor

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public BuyMilitaryOrderView(int alreadyCount, int maxCount, int yuanbao, int militaryOrder)
                {
                    this.alreadyCount = alreadyCount;
                    this.maxCount = maxCount;
                    this.yuanbao = yuanbao;
                    this.militaryOrder = militaryOrder;
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::BuyMilitaryOrderView");
                    IceInternal.HashUtil.hashAdd(ref h__, alreadyCount);
                    IceInternal.HashUtil.hashAdd(ref h__, maxCount);
                    IceInternal.HashUtil.hashAdd(ref h__, yuanbao);
                    IceInternal.HashUtil.hashAdd(ref h__, militaryOrder);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(!(other__ is BuyMilitaryOrderView))
                    {
                        return false;
                    }
                    BuyMilitaryOrderView o__ = (BuyMilitaryOrderView)other__;
                    if(!alreadyCount.Equals(o__.alreadyCount))
                    {
                        return false;
                    }
                    if(!maxCount.Equals(o__.maxCount))
                    {
                        return false;
                    }
                    if(!yuanbao.Equals(o__.yuanbao))
                    {
                        return false;
                    }
                    if(!militaryOrder.Equals(o__.militaryOrder))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(BuyMilitaryOrderView lhs__, BuyMilitaryOrderView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(BuyMilitaryOrderView lhs__, BuyMilitaryOrderView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(alreadyCount);
                    os__.writeInt(maxCount);
                    os__.writeInt(yuanbao);
                    os__.writeInt(militaryOrder);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    alreadyCount = is__.readInt();
                    maxCount = is__.readInt();
                    yuanbao = is__.readInt();
                    militaryOrder = is__.readInt();
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface Copy : Ice.Object, CopyOperations_, CopyOperationsNC_
            {
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getBigCopyView(com.XSanGo.Protocol.BigCopyView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getSmallCopyView(com.XSanGo.Protocol.SmallCopyView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_beginChallenge(com.XSanGo.Protocol.CopyChallengeResultView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_calculateStar(int ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_endChallenge(com.XSanGo.Protocol.CopyDetail ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getYuanbaoPrice(int ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_buySuccess();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_buyChallengeChance();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_buyChapterChallengeChance(com.XSanGo.Protocol.IntIntPair[] ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_clear(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getChapterRewardView(com.XSanGo.Protocol.ChapterRewardView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_receiveChapterReward();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_releaseCaptured();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_killCaptured();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_employCaptured(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getCopyChallengeInfo(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_hallOfFameList(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getHuDongView(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_beginChallengeTa(com.XSanGo.Protocol.ChallengeTaView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_endChallengeTa(com.XSanGo.Protocol.ChallengeTaResult ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_worshipTa();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_buyHuDong();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getMyOccupy(com.XSanGo.Protocol.IntIntPair ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_getBuyMilitaryOrderView(com.XSanGo.Protocol.BuyMilitaryOrderView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Copy_buyMilitaryOrder();
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface CopyPrx : Ice.ObjectPrx
            {
                com.XSanGo.Protocol.BigCopyView getBigCopyView();
                com.XSanGo.Protocol.BigCopyView getBigCopyView(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> begin_getBigCopyView();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> begin_getBigCopyView(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getBigCopyView(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getBigCopyView(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.BigCopyView end_getBigCopyView(Ice.AsyncResult r__);

                bool getBigCopyView_async(com.XSanGo.Protocol.AMI_Copy_getBigCopyView cb__);
                bool getBigCopyView_async(com.XSanGo.Protocol.AMI_Copy_getBigCopyView cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId);
                com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> begin_getSmallCopyView(int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> begin_getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getSmallCopyView(int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.SmallCopyView end_getSmallCopyView(Ice.AsyncResult r__);

                bool getSmallCopyView_async(com.XSanGo.Protocol.AMI_Copy_getSmallCopyView cb__, int copyId);
                bool getSmallCopyView_async(com.XSanGo.Protocol.AMI_Copy_getSmallCopyView cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId);
                com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> begin_beginChallenge(string formationId, int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> begin_beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_beginChallenge(string formationId, int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.CopyChallengeResultView end_beginChallenge(Ice.AsyncResult r__);

                bool beginChallenge_async(com.XSanGo.Protocol.AMI_Copy_beginChallenge cb__, string formationId, int copyId);
                bool beginChallenge_async(com.XSanGo.Protocol.AMI_Copy_beginChallenge cb__, string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                int calculateStar(byte remainHero);
                int calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> begin_calculateStar(byte remainHero);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> begin_calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_calculateStar(byte remainHero, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                int end_calculateStar(Ice.AsyncResult r__);

                bool calculateStar_async(com.XSanGo.Protocol.AMI_Copy_calculateStar cb__, byte remainHero);
                bool calculateStar_async(com.XSanGo.Protocol.AMI_Copy_calculateStar cb__, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.CopyDetail endChallenge();
                com.XSanGo.Protocol.CopyDetail endChallenge(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> begin_endChallenge();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> begin_endChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_endChallenge(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_endChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.CopyDetail end_endChallenge(Ice.AsyncResult r__);

                bool endChallenge_async(com.XSanGo.Protocol.AMI_Copy_endChallenge cb__);
                bool endChallenge_async(com.XSanGo.Protocol.AMI_Copy_endChallenge cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items);
                int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                int end_getYuanbaoPrice(Ice.AsyncResult r__);

                bool getYuanbaoPrice_async(com.XSanGo.Protocol.AMI_Copy_getYuanbaoPrice cb__, com.XSanGo.Protocol.ItemView[] items);
                bool getYuanbaoPrice_async(com.XSanGo.Protocol.AMI_Copy_getYuanbaoPrice cb__, com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void buySuccess(com.XSanGo.Protocol.ItemView[] items);
                void buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> begin_buySuccess(com.XSanGo.Protocol.ItemView[] items);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_buySuccess(Ice.AsyncResult r__);

                bool buySuccess_async(com.XSanGo.Protocol.AMI_Copy_buySuccess cb__, com.XSanGo.Protocol.ItemView[] items);
                bool buySuccess_async(com.XSanGo.Protocol.AMI_Copy_buySuccess cb__, com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void buyChallengeChance(int copyId);
                void buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> begin_buyChallengeChance(int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> begin_buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buyChallengeChance(int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_buyChallengeChance(Ice.AsyncResult r__);

                bool buyChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChallengeChance cb__, int copyId);
                bool buyChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChallengeChance cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId);
                com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> begin_buyChapterChallengeChance(int chapterId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> begin_buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buyChapterChallengeChance(int chapterId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.IntIntPair[] end_buyChapterChallengeChance(Ice.AsyncResult r__);

                bool buyChapterChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChapterChallengeChance cb__, int chapterId);
                bool buyChapterChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChapterChallengeChance cb__, int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string clear(int copyTemplateId, int count);
                string clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> begin_clear(int copyTemplateId, int count);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> begin_clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_clear(int copyTemplateId, int count, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_clear(Ice.AsyncResult r__);

                bool clear_async(com.XSanGo.Protocol.AMI_Copy_clear cb__, int copyTemplateId, int count);
                bool clear_async(com.XSanGo.Protocol.AMI_Copy_clear cb__, int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId);
                com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> begin_getChapterRewardView(int chapterId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> begin_getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getChapterRewardView(int chapterId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.ChapterRewardView end_getChapterRewardView(Ice.AsyncResult r__);

                bool getChapterRewardView_async(com.XSanGo.Protocol.AMI_Copy_getChapterRewardView cb__, int chapterId);
                bool getChapterRewardView_async(com.XSanGo.Protocol.AMI_Copy_getChapterRewardView cb__, int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void receiveChapterReward(int chapterId, int level);
                void receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> begin_receiveChapterReward(int chapterId, int level);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> begin_receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_receiveChapterReward(int chapterId, int level, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_receiveChapterReward(Ice.AsyncResult r__);

                bool receiveChapterReward_async(com.XSanGo.Protocol.AMI_Copy_receiveChapterReward cb__, int chapterId, int level);
                bool receiveChapterReward_async(com.XSanGo.Protocol.AMI_Copy_receiveChapterReward cb__, int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void releaseCaptured();
                void releaseCaptured(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> begin_releaseCaptured();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> begin_releaseCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_releaseCaptured(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_releaseCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_releaseCaptured(Ice.AsyncResult r__);

                bool releaseCaptured_async(com.XSanGo.Protocol.AMI_Copy_releaseCaptured cb__);
                bool releaseCaptured_async(com.XSanGo.Protocol.AMI_Copy_releaseCaptured cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void killCaptured();
                void killCaptured(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> begin_killCaptured();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> begin_killCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_killCaptured(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_killCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_killCaptured(Ice.AsyncResult r__);

                bool killCaptured_async(com.XSanGo.Protocol.AMI_Copy_killCaptured cb__);
                bool killCaptured_async(com.XSanGo.Protocol.AMI_Copy_killCaptured cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string employCaptured();
                string employCaptured(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> begin_employCaptured();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> begin_employCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_employCaptured(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_employCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_employCaptured(Ice.AsyncResult r__);

                bool employCaptured_async(com.XSanGo.Protocol.AMI_Copy_employCaptured cb__);
                bool employCaptured_async(com.XSanGo.Protocol.AMI_Copy_employCaptured cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string getCopyChallengeInfo(string idStr);
                string getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> begin_getCopyChallengeInfo(string idStr);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> begin_getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getCopyChallengeInfo(string idStr, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_getCopyChallengeInfo(Ice.AsyncResult r__);

                bool getCopyChallengeInfo_async(com.XSanGo.Protocol.AMI_Copy_getCopyChallengeInfo cb__, string idStr);
                bool getCopyChallengeInfo_async(com.XSanGo.Protocol.AMI_Copy_getCopyChallengeInfo cb__, string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string hallOfFameList();
                string hallOfFameList(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> begin_hallOfFameList();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> begin_hallOfFameList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_hallOfFameList(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_hallOfFameList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_hallOfFameList(Ice.AsyncResult r__);

                bool hallOfFameList_async(com.XSanGo.Protocol.AMI_Copy_hallOfFameList cb__);
                bool hallOfFameList_async(com.XSanGo.Protocol.AMI_Copy_hallOfFameList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string getHuDongView(int copyId);
                string getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> begin_getHuDongView(int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> begin_getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getHuDongView(int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_getHuDongView(Ice.AsyncResult r__);

                bool getHuDongView_async(com.XSanGo.Protocol.AMI_Copy_getHuDongView cb__, int copyId);
                bool getHuDongView_async(com.XSanGo.Protocol.AMI_Copy_getHuDongView cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId);
                com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> begin_beginChallengeTa(int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> begin_beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_beginChallengeTa(int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.ChallengeTaView end_beginChallengeTa(Ice.AsyncResult r__);

                bool beginChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_beginChallengeTa cb__, int copyId);
                bool beginChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_beginChallengeTa cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag);
                com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> begin_endChallengeTa(int resFlag);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> begin_endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_endChallengeTa(int resFlag, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.ChallengeTaResult end_endChallengeTa(Ice.AsyncResult r__);

                bool endChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_endChallengeTa cb__, int resFlag);
                bool endChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_endChallengeTa cb__, int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void worshipTa(int copyId);
                void worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> begin_worshipTa(int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> begin_worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_worshipTa(int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_worshipTa(Ice.AsyncResult r__);

                bool worshipTa_async(com.XSanGo.Protocol.AMI_Copy_worshipTa cb__, int copyId);
                bool worshipTa_async(com.XSanGo.Protocol.AMI_Copy_worshipTa cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void buyHuDong(int copyId);
                void buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> begin_buyHuDong(int copyId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> begin_buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buyHuDong(int copyId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_buyHuDong(Ice.AsyncResult r__);

                bool buyHuDong_async(com.XSanGo.Protocol.AMI_Copy_buyHuDong cb__, int copyId);
                bool buyHuDong_async(com.XSanGo.Protocol.AMI_Copy_buyHuDong cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.IntIntPair getMyOccupy();
                com.XSanGo.Protocol.IntIntPair getMyOccupy(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> begin_getMyOccupy();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> begin_getMyOccupy(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getMyOccupy(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getMyOccupy(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.IntIntPair end_getMyOccupy(Ice.AsyncResult r__);

                bool getMyOccupy_async(com.XSanGo.Protocol.AMI_Copy_getMyOccupy cb__);
                bool getMyOccupy_async(com.XSanGo.Protocol.AMI_Copy_getMyOccupy cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView();
                com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> begin_getBuyMilitaryOrderView();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> begin_getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getBuyMilitaryOrderView(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.BuyMilitaryOrderView end_getBuyMilitaryOrderView(Ice.AsyncResult r__);

                bool getBuyMilitaryOrderView_async(com.XSanGo.Protocol.AMI_Copy_getBuyMilitaryOrderView cb__);
                bool getBuyMilitaryOrderView_async(com.XSanGo.Protocol.AMI_Copy_getBuyMilitaryOrderView cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void buyMilitaryOrder();
                void buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> begin_buyMilitaryOrder();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> begin_buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buyMilitaryOrder(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_buyMilitaryOrder(Ice.AsyncResult r__);

                bool buyMilitaryOrder_async(com.XSanGo.Protocol.AMI_Copy_buyMilitaryOrder cb__);
                bool buyMilitaryOrder_async(com.XSanGo.Protocol.AMI_Copy_buyMilitaryOrder cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface CopyOperations_
            {
                void getBigCopyView_async(com.XSanGo.Protocol.AMD_Copy_getBigCopyView cb__, Ice.Current current__);

                void getSmallCopyView_async(com.XSanGo.Protocol.AMD_Copy_getSmallCopyView cb__, int copyId, Ice.Current current__);

                com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, Ice.Current current__);

                int calculateStar(byte remainHero, Ice.Current current__);

                void endChallenge_async(com.XSanGo.Protocol.AMD_Copy_endChallenge cb__, Ice.Current current__);

                int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, Ice.Current current__);

                void buySuccess(com.XSanGo.Protocol.ItemView[] items, Ice.Current current__);

                void buyChallengeChance(int copyId, Ice.Current current__);

                com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, Ice.Current current__);

                string clear(int copyTemplateId, int count, Ice.Current current__);

                com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, Ice.Current current__);

                void receiveChapterReward(int chapterId, int level, Ice.Current current__);

                void releaseCaptured(Ice.Current current__);

                void killCaptured(Ice.Current current__);

                string employCaptured(Ice.Current current__);

                string getCopyChallengeInfo(string idStr, Ice.Current current__);

                void hallOfFameList_async(com.XSanGo.Protocol.AMD_Copy_hallOfFameList cb__, Ice.Current current__);

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                /// <param name="current__">The Current object for the invocation.</param>
                
                string getHuDongView(int copyId, Ice.Current current__);

                /// <summary>
                /// 挑战TA
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                /// <param name="current__">The Current object for the invocation.</param>
                void beginChallengeTa_async(com.XSanGo.Protocol.AMD_Copy_beginChallengeTa cb__, int copyId, Ice.Current current__);

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                /// <param name="current__">The Current object for the invocation.</param>
                
                com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, Ice.Current current__);

                /// <summary>
                /// 膜拜TA
                /// </summary>
                /// <param name="current__">The Current object for the invocation.</param>
                
                void worshipTa(int copyId, Ice.Current current__);

                /// <summary>
                /// 购买互动次数
                /// </summary>
                /// <param name="current__">The Current object for the invocation.</param>
                
                void buyHuDong(int copyId, Ice.Current current__);

                com.XSanGo.Protocol.IntIntPair getMyOccupy(Ice.Current current__);

                com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(Ice.Current current__);

                void buyMilitaryOrder(Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface CopyOperationsNC_
            {
                void getBigCopyView_async(com.XSanGo.Protocol.AMD_Copy_getBigCopyView cb__);

                void getSmallCopyView_async(com.XSanGo.Protocol.AMD_Copy_getSmallCopyView cb__, int copyId);

                com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId);

                int calculateStar(byte remainHero);

                void endChallenge_async(com.XSanGo.Protocol.AMD_Copy_endChallenge cb__);

                int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items);

                void buySuccess(com.XSanGo.Protocol.ItemView[] items);

                void buyChallengeChance(int copyId);

                com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId);

                string clear(int copyTemplateId, int count);

                com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId);

                void receiveChapterReward(int chapterId, int level);

                void releaseCaptured();

                void killCaptured();

                string employCaptured();

                string getCopyChallengeInfo(string idStr);

                void hallOfFameList_async(com.XSanGo.Protocol.AMD_Copy_hallOfFameList cb__);

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                
                string getHuDongView(int copyId);

                /// <summary>
                /// 挑战TA
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                void beginChallengeTa_async(com.XSanGo.Protocol.AMD_Copy_beginChallengeTa cb__, int copyId);

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                
                com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag);

                /// <summary>
                /// 膜拜TA
                /// </summary>
                
                void worshipTa(int copyId);

                /// <summary>
                /// 购买互动次数
                /// </summary>
                
                void buyHuDong(int copyId);

                com.XSanGo.Protocol.IntIntPair getMyOccupy();

                com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView();

                void buyMilitaryOrder();
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class CopyDetailSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.CopyDetail[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.CopyDetail() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.CopyDetail[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.CopyDetail[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(31);
                        v__ = new com.XSanGo.Protocol.CopyDetail[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.CopyDetail();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class CaptureViewSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.CaptureView[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.CaptureView() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.CaptureView[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.CaptureView[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(16);
                        v__ = new com.XSanGo.Protocol.CaptureView[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.CaptureView();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ChapterRewardSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.ChapterReward[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            v__[ix__].write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.ChapterReward[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.ChapterReward[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(6);
                        v__ = new com.XSanGo.Protocol.ChapterReward[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class HallOfFameViewSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.HallOfFameView[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.HallOfFameView() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.HallOfFameView[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.HallOfFameView[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(13);
                        v__ = new com.XSanGo.Protocol.HallOfFameView[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.HallOfFameView();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class CopySummaryViewSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.CopySummaryView[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            v__[ix__].write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.CopySummaryView[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.CopySummaryView[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(9);
                        v__ = new com.XSanGo.Protocol.CopySummaryView[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class CopyPrxHelper : Ice.ObjectPrxHelperBase, CopyPrx
            {
                #region Synchronous operations

                public com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId)
                {
                    return beginChallenge(formationId, copyId, null, false);
                }

                public com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return beginChallenge(formationId, copyId, context__, true);
                }

                private com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __beginChallenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__beginChallenge_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.beginChallenge(formationId, copyId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                /// <summary>
                /// 挑战TA
                /// </summary>
                
                public com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId)
                {
                    return beginChallengeTa(copyId, null, false);
                }

                /// <summary>
                /// 挑战TA
                /// </summary>
                /// <param name="context__">The Context map to send with the invocation.</param>
                
                public com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return beginChallengeTa(copyId, context__, true);
                }

                private com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __beginChallengeTa_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__beginChallengeTa_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.beginChallengeTa(copyId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void buyChallengeChance(int copyId)
                {
                    buyChallengeChance(copyId, null, false);
                }

                public void buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    buyChallengeChance(copyId, context__, true);
                }

                private void buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buyChallengeChance_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buyChallengeChance_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.buyChallengeChance(copyId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId)
                {
                    return buyChapterChallengeChance(chapterId, null, false);
                }

                public com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return buyChapterChallengeChance(chapterId, context__, true);
                }

                private com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buyChapterChallengeChance_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buyChapterChallengeChance_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.buyChapterChallengeChance(chapterId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                /// <summary>
                /// 购买互动次数
                /// </summary>
                
                public void buyHuDong(int copyId)
                {
                    buyHuDong(copyId, null, false);
                }

                /// <summary>
                /// 购买互动次数
                /// </summary>
                /// <param name="context__">The Context map to send with the invocation.</param>
                
                public void buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    buyHuDong(copyId, context__, true);
                }

                private void buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buyHuDong_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buyHuDong_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.buyHuDong(copyId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void buyMilitaryOrder()
                {
                    buyMilitaryOrder(null, false);
                }

                public void buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    buyMilitaryOrder(context__, true);
                }

                private void buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buyMilitaryOrder_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buyMilitaryOrder_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.buyMilitaryOrder(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void buySuccess(com.XSanGo.Protocol.ItemView[] items)
                {
                    buySuccess(items, null, false);
                }

                public void buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    buySuccess(items, context__, true);
                }

                private void buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buySuccess_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buySuccess_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.buySuccess(items, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public int calculateStar(byte remainHero)
                {
                    return calculateStar(remainHero, null, false);
                }

                public int calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return calculateStar(remainHero, context__, true);
                }

                private int calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __calculateStar_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__calculateStar_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.calculateStar(remainHero, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string clear(int copyTemplateId, int count)
                {
                    return clear(copyTemplateId, count, null, false);
                }

                public string clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return clear(copyTemplateId, count, context__, true);
                }

                private string clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __clear_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__clear_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.clear(copyTemplateId, count, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string employCaptured()
                {
                    return employCaptured(null, false);
                }

                public string employCaptured(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return employCaptured(context__, true);
                }

                private string employCaptured(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __employCaptured_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__employCaptured_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.employCaptured(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.CopyDetail endChallenge()
                {
                    return endChallenge(null, false);
                }

                public com.XSanGo.Protocol.CopyDetail endChallenge(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return endChallenge(context__, true);
                }

                private com.XSanGo.Protocol.CopyDetail endChallenge(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __endChallenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__endChallenge_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.endChallenge(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                
                public com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag)
                {
                    return endChallengeTa(resFlag, null, false);
                }

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                /// <param name="context__">The Context map to send with the invocation.</param>
                
                public com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return endChallengeTa(resFlag, context__, true);
                }

                private com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __endChallengeTa_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__endChallengeTa_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.endChallengeTa(resFlag, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.BigCopyView getBigCopyView()
                {
                    return getBigCopyView(null, false);
                }

                public com.XSanGo.Protocol.BigCopyView getBigCopyView(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getBigCopyView(context__, true);
                }

                private com.XSanGo.Protocol.BigCopyView getBigCopyView(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getBigCopyView_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getBigCopyView_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getBigCopyView(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView()
                {
                    return getBuyMilitaryOrderView(null, false);
                }

                public com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getBuyMilitaryOrderView(context__, true);
                }

                private com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getBuyMilitaryOrderView_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getBuyMilitaryOrderView_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getBuyMilitaryOrderView(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId)
                {
                    return getChapterRewardView(chapterId, null, false);
                }

                public com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getChapterRewardView(chapterId, context__, true);
                }

                private com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getChapterRewardView_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getChapterRewardView_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getChapterRewardView(chapterId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string getCopyChallengeInfo(string idStr)
                {
                    return getCopyChallengeInfo(idStr, null, false);
                }

                public string getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getCopyChallengeInfo(idStr, context__, true);
                }

                private string getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getCopyChallengeInfo_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getCopyChallengeInfo_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getCopyChallengeInfo(idStr, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                
                public string getHuDongView(int copyId)
                {
                    return getHuDongView(copyId, null, false);
                }

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                /// <param name="context__">The Context map to send with the invocation.</param>
                
                public string getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getHuDongView(copyId, context__, true);
                }

                private string getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getHuDongView_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getHuDongView_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getHuDongView(copyId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.IntIntPair getMyOccupy()
                {
                    return getMyOccupy(null, false);
                }

                public com.XSanGo.Protocol.IntIntPair getMyOccupy(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getMyOccupy(context__, true);
                }

                private com.XSanGo.Protocol.IntIntPair getMyOccupy(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getMyOccupy_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getMyOccupy_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getMyOccupy(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId)
                {
                    return getSmallCopyView(copyId, null, false);
                }

                public com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getSmallCopyView(copyId, context__, true);
                }

                private com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getSmallCopyView_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getSmallCopyView_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getSmallCopyView(copyId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items)
                {
                    return getYuanbaoPrice(items, null, false);
                }

                public int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getYuanbaoPrice(items, context__, true);
                }

                private int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getYuanbaoPrice_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getYuanbaoPrice_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.getYuanbaoPrice(items, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string hallOfFameList()
                {
                    return hallOfFameList(null, false);
                }

                public string hallOfFameList(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return hallOfFameList(context__, true);
                }

                private string hallOfFameList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __hallOfFameList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__hallOfFameList_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                return del__.hallOfFameList(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void killCaptured()
                {
                    killCaptured(null, false);
                }

                public void killCaptured(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    killCaptured(context__, true);
                }

                private void killCaptured(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __killCaptured_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.killCaptured(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void receiveChapterReward(int chapterId, int level)
                {
                    receiveChapterReward(chapterId, level, null, false);
                }

                public void receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    receiveChapterReward(chapterId, level, context__, true);
                }

                private void receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __receiveChapterReward_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__receiveChapterReward_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.receiveChapterReward(chapterId, level, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void releaseCaptured()
                {
                    releaseCaptured(null, false);
                }

                public void releaseCaptured(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    releaseCaptured(context__, true);
                }

                private void releaseCaptured(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __releaseCaptured_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.releaseCaptured(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                /// <summary>
                /// 膜拜TA
                /// </summary>
                
                public void worshipTa(int copyId)
                {
                    worshipTa(copyId, null, false);
                }

                /// <summary>
                /// 膜拜TA
                /// </summary>
                /// <param name="context__">The Context map to send with the invocation.</param>
                
                public void worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    worshipTa(copyId, context__, true);
                }

                private void worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __worshipTa_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__worshipTa_name);
                                delBase__ = getDelegate__(false);
                                CopyDel_ del__ = (CopyDel_)delBase__;
                                del__.worshipTa(copyId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> begin_beginChallenge(string formationId, int copyId)
                {
                    return begin_beginChallenge(formationId, copyId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> begin_beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_beginChallenge(formationId, copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_beginChallenge(string formationId, int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginChallenge(formationId, copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginChallenge(formationId, copyId, ctx__, true, cb__, cookie__);
                }

                private const string __beginChallenge_name = "beginChallenge";

                public com.XSanGo.Protocol.CopyChallengeResultView end_beginChallenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __beginChallenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.CopyChallengeResultView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.CopyChallengeResultView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> begin_beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__beginChallenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallenge>(this, __beginChallenge_name, beginChallenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__beginChallenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(formationId);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void beginChallenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_beginChallenge cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.CopyChallengeResultView ret__;
                    try
                    {
                        ret__ = end_beginChallenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool beginChallenge_async(com.XSanGo.Protocol.AMI_Copy_beginChallenge cb__, string formationId, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__beginChallenge_name);
                        result__ = begin_beginChallenge(formationId, copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallenge>(this, __beginChallenge_name, beginChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool beginChallenge_async(com.XSanGo.Protocol.AMI_Copy_beginChallenge cb__, string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__beginChallenge_name);
                        result__ = begin_beginChallenge(formationId, copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallenge>(this, __beginChallenge_name, beginChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> begin_beginChallengeTa(int copyId)
                {
                    return begin_beginChallengeTa(copyId, null, false, null, null);
                }

                /// <summary>
                /// 挑战TA
                /// </summary>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> begin_beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_beginChallengeTa(copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_beginChallengeTa(int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginChallengeTa(copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginChallengeTa(copyId, ctx__, true, cb__, cookie__);
                }

                private const string __beginChallengeTa_name = "beginChallengeTa";

                public com.XSanGo.Protocol.ChallengeTaView end_beginChallengeTa(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __beginChallengeTa_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.ChallengeTaView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.ChallengeTaView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> begin_beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__beginChallengeTa_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa>(this, __beginChallengeTa_name, beginChallengeTa_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__beginChallengeTa_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void beginChallengeTa_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_beginChallengeTa cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.ChallengeTaView ret__;
                    try
                    {
                        ret__ = end_beginChallengeTa(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                /// <summary>
                /// 挑战TA
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                public bool beginChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_beginChallengeTa cb__, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> result__;
                    try
                    {
                        checkTwowayOnly__(__beginChallengeTa_name);
                        result__ = begin_beginChallengeTa(copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa>(this, __beginChallengeTa_name, beginChallengeTa_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                /// <summary>
                /// 挑战TA
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public bool beginChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_beginChallengeTa cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa> result__;
                    try
                    {
                        checkTwowayOnly__(__beginChallengeTa_name);
                        result__ = begin_beginChallengeTa(copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_beginChallengeTa>(this, __beginChallengeTa_name, beginChallengeTa_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> begin_buyChallengeChance(int copyId)
                {
                    return begin_buyChallengeChance(copyId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> begin_buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buyChallengeChance(copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buyChallengeChance(int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChallengeChance(copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChallengeChance(copyId, ctx__, true, cb__, cookie__);
                }

                private const string __buyChallengeChance_name = "buyChallengeChance";

                public void end_buyChallengeChance(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buyChallengeChance_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> begin_buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buyChallengeChance_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance>(this, __buyChallengeChance_name, buyChallengeChance_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buyChallengeChance_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buyChallengeChance_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_buyChallengeChance cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_buyChallengeChance(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool buyChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChallengeChance cb__, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChallengeChance_name);
                        result__ = begin_buyChallengeChance(copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance>(this, __buyChallengeChance_name, buyChallengeChance_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool buyChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChallengeChance cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChallengeChance_name);
                        result__ = begin_buyChallengeChance(copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChallengeChance>(this, __buyChallengeChance_name, buyChallengeChance_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> begin_buyChapterChallengeChance(int chapterId)
                {
                    return begin_buyChapterChallengeChance(chapterId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> begin_buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buyChapterChallengeChance(chapterId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buyChapterChallengeChance(int chapterId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChapterChallengeChance(chapterId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChapterChallengeChance(chapterId, ctx__, true, cb__, cookie__);
                }

                private const string __buyChapterChallengeChance_name = "buyChapterChallengeChance";

                public com.XSanGo.Protocol.IntIntPair[] end_buyChapterChallengeChance(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buyChapterChallengeChance_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.IntIntPair[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.IntIntPairSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> begin_buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buyChapterChallengeChance_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance>(this, __buyChapterChallengeChance_name, buyChapterChallengeChance_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buyChapterChallengeChance_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(chapterId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buyChapterChallengeChance_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.IntIntPair[] ret__;
                    try
                    {
                        ret__ = end_buyChapterChallengeChance(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool buyChapterChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChapterChallengeChance cb__, int chapterId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChapterChallengeChance_name);
                        result__ = begin_buyChapterChallengeChance(chapterId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance>(this, __buyChapterChallengeChance_name, buyChapterChallengeChance_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool buyChapterChallengeChance_async(com.XSanGo.Protocol.AMI_Copy_buyChapterChallengeChance cb__, int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChapterChallengeChance_name);
                        result__ = begin_buyChapterChallengeChance(chapterId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyChapterChallengeChance>(this, __buyChapterChallengeChance_name, buyChapterChallengeChance_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> begin_buyHuDong(int copyId)
                {
                    return begin_buyHuDong(copyId, null, false, null, null);
                }

                /// <summary>
                /// 购买互动次数
                /// </summary>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> begin_buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buyHuDong(copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buyHuDong(int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyHuDong(copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyHuDong(copyId, ctx__, true, cb__, cookie__);
                }

                private const string __buyHuDong_name = "buyHuDong";

                public void end_buyHuDong(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buyHuDong_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> begin_buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buyHuDong_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyHuDong> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyHuDong>(this, __buyHuDong_name, buyHuDong_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buyHuDong_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buyHuDong_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_buyHuDong cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_buyHuDong(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                /// <summary>
                /// 购买互动次数
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                public bool buyHuDong_async(com.XSanGo.Protocol.AMI_Copy_buyHuDong cb__, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> result__;
                    try
                    {
                        checkTwowayOnly__(__buyHuDong_name);
                        result__ = begin_buyHuDong(copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyHuDong>(this, __buyHuDong_name, buyHuDong_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                /// <summary>
                /// 购买互动次数
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public bool buyHuDong_async(com.XSanGo.Protocol.AMI_Copy_buyHuDong cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyHuDong> result__;
                    try
                    {
                        checkTwowayOnly__(__buyHuDong_name);
                        result__ = begin_buyHuDong(copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyHuDong>(this, __buyHuDong_name, buyHuDong_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> begin_buyMilitaryOrder()
                {
                    return begin_buyMilitaryOrder(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> begin_buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buyMilitaryOrder(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buyMilitaryOrder(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyMilitaryOrder(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyMilitaryOrder(ctx__, true, cb__, cookie__);
                }

                private const string __buyMilitaryOrder_name = "buyMilitaryOrder";

                public void end_buyMilitaryOrder(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buyMilitaryOrder_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> begin_buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buyMilitaryOrder_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder>(this, __buyMilitaryOrder_name, buyMilitaryOrder_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buyMilitaryOrder_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buyMilitaryOrder_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_buyMilitaryOrder(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool buyMilitaryOrder_async(com.XSanGo.Protocol.AMI_Copy_buyMilitaryOrder cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> result__;
                    try
                    {
                        checkTwowayOnly__(__buyMilitaryOrder_name);
                        result__ = begin_buyMilitaryOrder();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder>(this, __buyMilitaryOrder_name, buyMilitaryOrder_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool buyMilitaryOrder_async(com.XSanGo.Protocol.AMI_Copy_buyMilitaryOrder cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder> result__;
                    try
                    {
                        checkTwowayOnly__(__buyMilitaryOrder_name);
                        result__ = begin_buyMilitaryOrder(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buyMilitaryOrder>(this, __buyMilitaryOrder_name, buyMilitaryOrder_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> begin_buySuccess(com.XSanGo.Protocol.ItemView[] items)
                {
                    return begin_buySuccess(items, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buySuccess(items, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buySuccess(items, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buySuccess(items, ctx__, true, cb__, cookie__);
                }

                private const string __buySuccess_name = "buySuccess";

                public void end_buySuccess(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buySuccess_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> begin_buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buySuccess_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buySuccess> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buySuccess>(this, __buySuccess_name, buySuccess_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buySuccess_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buySuccess_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_buySuccess cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_buySuccess(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool buySuccess_async(com.XSanGo.Protocol.AMI_Copy_buySuccess cb__, com.XSanGo.Protocol.ItemView[] items)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> result__;
                    try
                    {
                        checkTwowayOnly__(__buySuccess_name);
                        result__ = begin_buySuccess(items);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buySuccess>(this, __buySuccess_name, buySuccess_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool buySuccess_async(com.XSanGo.Protocol.AMI_Copy_buySuccess cb__, com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_buySuccess> result__;
                    try
                    {
                        checkTwowayOnly__(__buySuccess_name);
                        result__ = begin_buySuccess(items, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_buySuccess>(this, __buySuccess_name, buySuccess_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> begin_calculateStar(byte remainHero)
                {
                    return begin_calculateStar(remainHero, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> begin_calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_calculateStar(remainHero, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_calculateStar(byte remainHero, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_calculateStar(remainHero, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_calculateStar(remainHero, ctx__, true, cb__, cookie__);
                }

                private const string __calculateStar_name = "calculateStar";

                public int end_calculateStar(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __calculateStar_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        int ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readInt();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> begin_calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__calculateStar_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_calculateStar> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_calculateStar>(this, __calculateStar_name, calculateStar_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__calculateStar_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeByte(remainHero);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void calculateStar_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_calculateStar cb__, Ice.ExceptionCallback excb__)
                {
                    int ret__;
                    try
                    {
                        ret__ = end_calculateStar(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool calculateStar_async(com.XSanGo.Protocol.AMI_Copy_calculateStar cb__, byte remainHero)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> result__;
                    try
                    {
                        checkTwowayOnly__(__calculateStar_name);
                        result__ = begin_calculateStar(remainHero);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_calculateStar>(this, __calculateStar_name, calculateStar_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool calculateStar_async(com.XSanGo.Protocol.AMI_Copy_calculateStar cb__, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_calculateStar> result__;
                    try
                    {
                        checkTwowayOnly__(__calculateStar_name);
                        result__ = begin_calculateStar(remainHero, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_calculateStar>(this, __calculateStar_name, calculateStar_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> begin_clear(int copyTemplateId, int count)
                {
                    return begin_clear(copyTemplateId, count, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> begin_clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_clear(copyTemplateId, count, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_clear(int copyTemplateId, int count, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_clear(copyTemplateId, count, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_clear(copyTemplateId, count, ctx__, true, cb__, cookie__);
                }

                private const string __clear_name = "clear";

                public string end_clear(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __clear_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> begin_clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__clear_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_clear> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_clear>(this, __clear_name, clear_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__clear_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyTemplateId);
                        os__.writeInt(count);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void clear_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_clear cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_clear(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool clear_async(com.XSanGo.Protocol.AMI_Copy_clear cb__, int copyTemplateId, int count)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> result__;
                    try
                    {
                        checkTwowayOnly__(__clear_name);
                        result__ = begin_clear(copyTemplateId, count);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_clear>(this, __clear_name, clear_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool clear_async(com.XSanGo.Protocol.AMI_Copy_clear cb__, int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_clear> result__;
                    try
                    {
                        checkTwowayOnly__(__clear_name);
                        result__ = begin_clear(copyTemplateId, count, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_clear>(this, __clear_name, clear_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> begin_employCaptured()
                {
                    return begin_employCaptured(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> begin_employCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_employCaptured(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_employCaptured(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_employCaptured(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_employCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_employCaptured(ctx__, true, cb__, cookie__);
                }

                private const string __employCaptured_name = "employCaptured";

                public string end_employCaptured(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __employCaptured_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> begin_employCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__employCaptured_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_employCaptured> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_employCaptured>(this, __employCaptured_name, employCaptured_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__employCaptured_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void employCaptured_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_employCaptured cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_employCaptured(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool employCaptured_async(com.XSanGo.Protocol.AMI_Copy_employCaptured cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> result__;
                    try
                    {
                        checkTwowayOnly__(__employCaptured_name);
                        result__ = begin_employCaptured();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_employCaptured>(this, __employCaptured_name, employCaptured_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool employCaptured_async(com.XSanGo.Protocol.AMI_Copy_employCaptured cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_employCaptured> result__;
                    try
                    {
                        checkTwowayOnly__(__employCaptured_name);
                        result__ = begin_employCaptured(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_employCaptured>(this, __employCaptured_name, employCaptured_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> begin_endChallenge()
                {
                    return begin_endChallenge(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> begin_endChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_endChallenge(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_endChallenge(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endChallenge(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_endChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endChallenge(ctx__, true, cb__, cookie__);
                }

                private const string __endChallenge_name = "endChallenge";

                public com.XSanGo.Protocol.CopyDetail end_endChallenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __endChallenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.CopyDetail ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.CopyDetail();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> begin_endChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__endChallenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallenge>(this, __endChallenge_name, endChallenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__endChallenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void endChallenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_endChallenge cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.CopyDetail ret__;
                    try
                    {
                        ret__ = end_endChallenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool endChallenge_async(com.XSanGo.Protocol.AMI_Copy_endChallenge cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__endChallenge_name);
                        result__ = begin_endChallenge();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallenge>(this, __endChallenge_name, endChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool endChallenge_async(com.XSanGo.Protocol.AMI_Copy_endChallenge cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__endChallenge_name);
                        result__ = begin_endChallenge(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallenge>(this, __endChallenge_name, endChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> begin_endChallengeTa(int resFlag)
                {
                    return begin_endChallengeTa(resFlag, null, false, null, null);
                }

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> begin_endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_endChallengeTa(resFlag, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_endChallengeTa(int resFlag, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endChallengeTa(resFlag, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endChallengeTa(resFlag, ctx__, true, cb__, cookie__);
                }

                private const string __endChallengeTa_name = "endChallengeTa";

                public com.XSanGo.Protocol.ChallengeTaResult end_endChallengeTa(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __endChallengeTa_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.ChallengeTaResult ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.ChallengeTaResult();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> begin_endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__endChallengeTa_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallengeTa>(this, __endChallengeTa_name, endChallengeTa_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__endChallengeTa_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(resFlag);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void endChallengeTa_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_endChallengeTa cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.ChallengeTaResult ret__;
                    try
                    {
                        ret__ = end_endChallengeTa(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                public bool endChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_endChallengeTa cb__, int resFlag)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> result__;
                    try
                    {
                        checkTwowayOnly__(__endChallengeTa_name);
                        result__ = begin_endChallengeTa(resFlag);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallengeTa>(this, __endChallengeTa_name, endChallengeTa_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                /// <summary>
                /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public bool endChallengeTa_async(com.XSanGo.Protocol.AMI_Copy_endChallengeTa cb__, int resFlag, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_endChallengeTa> result__;
                    try
                    {
                        checkTwowayOnly__(__endChallengeTa_name);
                        result__ = begin_endChallengeTa(resFlag, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_endChallengeTa>(this, __endChallengeTa_name, endChallengeTa_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> begin_getBigCopyView()
                {
                    return begin_getBigCopyView(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> begin_getBigCopyView(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getBigCopyView(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getBigCopyView(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getBigCopyView(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getBigCopyView(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getBigCopyView(ctx__, true, cb__, cookie__);
                }

                private const string __getBigCopyView_name = "getBigCopyView";

                public com.XSanGo.Protocol.BigCopyView end_getBigCopyView(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getBigCopyView_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.BigCopyView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.BigCopyView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> begin_getBigCopyView(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getBigCopyView_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBigCopyView>(this, __getBigCopyView_name, getBigCopyView_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getBigCopyView_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getBigCopyView_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getBigCopyView cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.BigCopyView ret__;
                    try
                    {
                        ret__ = end_getBigCopyView(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getBigCopyView_async(com.XSanGo.Protocol.AMI_Copy_getBigCopyView cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> result__;
                    try
                    {
                        checkTwowayOnly__(__getBigCopyView_name);
                        result__ = begin_getBigCopyView();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBigCopyView>(this, __getBigCopyView_name, getBigCopyView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getBigCopyView_async(com.XSanGo.Protocol.AMI_Copy_getBigCopyView cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBigCopyView> result__;
                    try
                    {
                        checkTwowayOnly__(__getBigCopyView_name);
                        result__ = begin_getBigCopyView(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBigCopyView>(this, __getBigCopyView_name, getBigCopyView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> begin_getBuyMilitaryOrderView()
                {
                    return begin_getBuyMilitaryOrderView(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> begin_getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getBuyMilitaryOrderView(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getBuyMilitaryOrderView(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getBuyMilitaryOrderView(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getBuyMilitaryOrderView(ctx__, true, cb__, cookie__);
                }

                private const string __getBuyMilitaryOrderView_name = "getBuyMilitaryOrderView";

                public com.XSanGo.Protocol.BuyMilitaryOrderView end_getBuyMilitaryOrderView(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getBuyMilitaryOrderView_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.BuyMilitaryOrderView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = new com.XSanGo.Protocol.BuyMilitaryOrderView();
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> begin_getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getBuyMilitaryOrderView_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView>(this, __getBuyMilitaryOrderView_name, getBuyMilitaryOrderView_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getBuyMilitaryOrderView_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getBuyMilitaryOrderView_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.BuyMilitaryOrderView ret__;
                    try
                    {
                        ret__ = end_getBuyMilitaryOrderView(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getBuyMilitaryOrderView_async(com.XSanGo.Protocol.AMI_Copy_getBuyMilitaryOrderView cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> result__;
                    try
                    {
                        checkTwowayOnly__(__getBuyMilitaryOrderView_name);
                        result__ = begin_getBuyMilitaryOrderView();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView>(this, __getBuyMilitaryOrderView_name, getBuyMilitaryOrderView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getBuyMilitaryOrderView_async(com.XSanGo.Protocol.AMI_Copy_getBuyMilitaryOrderView cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView> result__;
                    try
                    {
                        checkTwowayOnly__(__getBuyMilitaryOrderView_name);
                        result__ = begin_getBuyMilitaryOrderView(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getBuyMilitaryOrderView>(this, __getBuyMilitaryOrderView_name, getBuyMilitaryOrderView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> begin_getChapterRewardView(int chapterId)
                {
                    return begin_getChapterRewardView(chapterId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> begin_getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getChapterRewardView(chapterId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getChapterRewardView(int chapterId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getChapterRewardView(chapterId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getChapterRewardView(chapterId, ctx__, true, cb__, cookie__);
                }

                private const string __getChapterRewardView_name = "getChapterRewardView";

                public com.XSanGo.Protocol.ChapterRewardView end_getChapterRewardView(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getChapterRewardView_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.ChapterRewardView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.ChapterRewardView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> begin_getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getChapterRewardView_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView>(this, __getChapterRewardView_name, getChapterRewardView_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getChapterRewardView_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(chapterId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getChapterRewardView_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getChapterRewardView cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.ChapterRewardView ret__;
                    try
                    {
                        ret__ = end_getChapterRewardView(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getChapterRewardView_async(com.XSanGo.Protocol.AMI_Copy_getChapterRewardView cb__, int chapterId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> result__;
                    try
                    {
                        checkTwowayOnly__(__getChapterRewardView_name);
                        result__ = begin_getChapterRewardView(chapterId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView>(this, __getChapterRewardView_name, getChapterRewardView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getChapterRewardView_async(com.XSanGo.Protocol.AMI_Copy_getChapterRewardView cb__, int chapterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView> result__;
                    try
                    {
                        checkTwowayOnly__(__getChapterRewardView_name);
                        result__ = begin_getChapterRewardView(chapterId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getChapterRewardView>(this, __getChapterRewardView_name, getChapterRewardView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> begin_getCopyChallengeInfo(string idStr)
                {
                    return begin_getCopyChallengeInfo(idStr, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> begin_getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getCopyChallengeInfo(idStr, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getCopyChallengeInfo(string idStr, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getCopyChallengeInfo(idStr, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getCopyChallengeInfo(idStr, ctx__, true, cb__, cookie__);
                }

                private const string __getCopyChallengeInfo_name = "getCopyChallengeInfo";

                public string end_getCopyChallengeInfo(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getCopyChallengeInfo_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> begin_getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getCopyChallengeInfo_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo>(this, __getCopyChallengeInfo_name, getCopyChallengeInfo_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getCopyChallengeInfo_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(idStr);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getCopyChallengeInfo_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_getCopyChallengeInfo(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getCopyChallengeInfo_async(com.XSanGo.Protocol.AMI_Copy_getCopyChallengeInfo cb__, string idStr)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> result__;
                    try
                    {
                        checkTwowayOnly__(__getCopyChallengeInfo_name);
                        result__ = begin_getCopyChallengeInfo(idStr);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo>(this, __getCopyChallengeInfo_name, getCopyChallengeInfo_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getCopyChallengeInfo_async(com.XSanGo.Protocol.AMI_Copy_getCopyChallengeInfo cb__, string idStr, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo> result__;
                    try
                    {
                        checkTwowayOnly__(__getCopyChallengeInfo_name);
                        result__ = begin_getCopyChallengeInfo(idStr, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getCopyChallengeInfo>(this, __getCopyChallengeInfo_name, getCopyChallengeInfo_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> begin_getHuDongView(int copyId)
                {
                    return begin_getHuDongView(copyId, null, false, null, null);
                }

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> begin_getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getHuDongView(copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getHuDongView(int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getHuDongView(copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getHuDongView(copyId, ctx__, true, cb__, cookie__);
                }

                private const string __getHuDongView_name = "getHuDongView";

                public string end_getHuDongView(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getHuDongView_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> begin_getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getHuDongView_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getHuDongView> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getHuDongView>(this, __getHuDongView_name, getHuDongView_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getHuDongView_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getHuDongView_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getHuDongView cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_getHuDongView(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                public bool getHuDongView_async(com.XSanGo.Protocol.AMI_Copy_getHuDongView cb__, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> result__;
                    try
                    {
                        checkTwowayOnly__(__getHuDongView_name);
                        result__ = begin_getHuDongView(copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getHuDongView>(this, __getHuDongView_name, getHuDongView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                /// <summary>
                /// 打开互动界面 返回HuDongView的lua格式
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public bool getHuDongView_async(com.XSanGo.Protocol.AMI_Copy_getHuDongView cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getHuDongView> result__;
                    try
                    {
                        checkTwowayOnly__(__getHuDongView_name);
                        result__ = begin_getHuDongView(copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getHuDongView>(this, __getHuDongView_name, getHuDongView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> begin_getMyOccupy()
                {
                    return begin_getMyOccupy(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> begin_getMyOccupy(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getMyOccupy(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getMyOccupy(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getMyOccupy(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getMyOccupy(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getMyOccupy(ctx__, true, cb__, cookie__);
                }

                private const string __getMyOccupy_name = "getMyOccupy";

                public com.XSanGo.Protocol.IntIntPair end_getMyOccupy(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getMyOccupy_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.IntIntPair ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = new com.XSanGo.Protocol.IntIntPair();
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> begin_getMyOccupy(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getMyOccupy_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getMyOccupy>(this, __getMyOccupy_name, getMyOccupy_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getMyOccupy_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getMyOccupy_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getMyOccupy cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.IntIntPair ret__;
                    try
                    {
                        ret__ = end_getMyOccupy(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getMyOccupy_async(com.XSanGo.Protocol.AMI_Copy_getMyOccupy cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> result__;
                    try
                    {
                        checkTwowayOnly__(__getMyOccupy_name);
                        result__ = begin_getMyOccupy();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getMyOccupy>(this, __getMyOccupy_name, getMyOccupy_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getMyOccupy_async(com.XSanGo.Protocol.AMI_Copy_getMyOccupy cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getMyOccupy> result__;
                    try
                    {
                        checkTwowayOnly__(__getMyOccupy_name);
                        result__ = begin_getMyOccupy(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getMyOccupy>(this, __getMyOccupy_name, getMyOccupy_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> begin_getSmallCopyView(int copyId)
                {
                    return begin_getSmallCopyView(copyId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> begin_getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getSmallCopyView(copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getSmallCopyView(int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getSmallCopyView(copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getSmallCopyView(copyId, ctx__, true, cb__, cookie__);
                }

                private const string __getSmallCopyView_name = "getSmallCopyView";

                public com.XSanGo.Protocol.SmallCopyView end_getSmallCopyView(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getSmallCopyView_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.SmallCopyView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.SmallCopyView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> begin_getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getSmallCopyView_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView>(this, __getSmallCopyView_name, getSmallCopyView_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getSmallCopyView_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getSmallCopyView_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getSmallCopyView cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.SmallCopyView ret__;
                    try
                    {
                        ret__ = end_getSmallCopyView(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getSmallCopyView_async(com.XSanGo.Protocol.AMI_Copy_getSmallCopyView cb__, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> result__;
                    try
                    {
                        checkTwowayOnly__(__getSmallCopyView_name);
                        result__ = begin_getSmallCopyView(copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView>(this, __getSmallCopyView_name, getSmallCopyView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getSmallCopyView_async(com.XSanGo.Protocol.AMI_Copy_getSmallCopyView cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView> result__;
                    try
                    {
                        checkTwowayOnly__(__getSmallCopyView_name);
                        result__ = begin_getSmallCopyView(copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getSmallCopyView>(this, __getSmallCopyView_name, getSmallCopyView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items)
                {
                    return begin_getYuanbaoPrice(items, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getYuanbaoPrice(items, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getYuanbaoPrice(items, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getYuanbaoPrice(items, ctx__, true, cb__, cookie__);
                }

                private const string __getYuanbaoPrice_name = "getYuanbaoPrice";

                public int end_getYuanbaoPrice(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getYuanbaoPrice_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        int ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readInt();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> begin_getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getYuanbaoPrice_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice>(this, __getYuanbaoPrice_name, getYuanbaoPrice_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getYuanbaoPrice_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getYuanbaoPrice_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice cb__, Ice.ExceptionCallback excb__)
                {
                    int ret__;
                    try
                    {
                        ret__ = end_getYuanbaoPrice(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getYuanbaoPrice_async(com.XSanGo.Protocol.AMI_Copy_getYuanbaoPrice cb__, com.XSanGo.Protocol.ItemView[] items)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> result__;
                    try
                    {
                        checkTwowayOnly__(__getYuanbaoPrice_name);
                        result__ = begin_getYuanbaoPrice(items);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice>(this, __getYuanbaoPrice_name, getYuanbaoPrice_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getYuanbaoPrice_async(com.XSanGo.Protocol.AMI_Copy_getYuanbaoPrice cb__, com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice> result__;
                    try
                    {
                        checkTwowayOnly__(__getYuanbaoPrice_name);
                        result__ = begin_getYuanbaoPrice(items, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_getYuanbaoPrice>(this, __getYuanbaoPrice_name, getYuanbaoPrice_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> begin_hallOfFameList()
                {
                    return begin_hallOfFameList(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> begin_hallOfFameList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_hallOfFameList(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_hallOfFameList(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_hallOfFameList(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_hallOfFameList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_hallOfFameList(ctx__, true, cb__, cookie__);
                }

                private const string __hallOfFameList_name = "hallOfFameList";

                public string end_hallOfFameList(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __hallOfFameList_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> begin_hallOfFameList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__hallOfFameList_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_hallOfFameList>(this, __hallOfFameList_name, hallOfFameList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__hallOfFameList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void hallOfFameList_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_hallOfFameList cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_hallOfFameList(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool hallOfFameList_async(com.XSanGo.Protocol.AMI_Copy_hallOfFameList cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> result__;
                    try
                    {
                        checkTwowayOnly__(__hallOfFameList_name);
                        result__ = begin_hallOfFameList();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_hallOfFameList>(this, __hallOfFameList_name, hallOfFameList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool hallOfFameList_async(com.XSanGo.Protocol.AMI_Copy_hallOfFameList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_hallOfFameList> result__;
                    try
                    {
                        checkTwowayOnly__(__hallOfFameList_name);
                        result__ = begin_hallOfFameList(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_hallOfFameList>(this, __hallOfFameList_name, hallOfFameList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> begin_killCaptured()
                {
                    return begin_killCaptured(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> begin_killCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_killCaptured(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_killCaptured(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_killCaptured(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_killCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_killCaptured(ctx__, true, cb__, cookie__);
                }

                private const string __killCaptured_name = "killCaptured";

                public void end_killCaptured(Ice.AsyncResult r__)
                {
                    end__(r__, __killCaptured_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> begin_killCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_killCaptured> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_killCaptured>(this, __killCaptured_name, killCaptured_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__killCaptured_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void killCaptured_completed__(com.XSanGo.Protocol.Callback_Copy_killCaptured cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool killCaptured_async(com.XSanGo.Protocol.AMI_Copy_killCaptured cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> result__ = begin_killCaptured();
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool killCaptured_async(com.XSanGo.Protocol.AMI_Copy_killCaptured cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_killCaptured> result__ = begin_killCaptured(ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> begin_receiveChapterReward(int chapterId, int level)
                {
                    return begin_receiveChapterReward(chapterId, level, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> begin_receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_receiveChapterReward(chapterId, level, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_receiveChapterReward(int chapterId, int level, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_receiveChapterReward(chapterId, level, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_receiveChapterReward(chapterId, level, ctx__, true, cb__, cookie__);
                }

                private const string __receiveChapterReward_name = "receiveChapterReward";

                public void end_receiveChapterReward(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __receiveChapterReward_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> begin_receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__receiveChapterReward_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward>(this, __receiveChapterReward_name, receiveChapterReward_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__receiveChapterReward_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(chapterId);
                        os__.writeInt(level);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void receiveChapterReward_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_receiveChapterReward cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_receiveChapterReward(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool receiveChapterReward_async(com.XSanGo.Protocol.AMI_Copy_receiveChapterReward cb__, int chapterId, int level)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> result__;
                    try
                    {
                        checkTwowayOnly__(__receiveChapterReward_name);
                        result__ = begin_receiveChapterReward(chapterId, level);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward>(this, __receiveChapterReward_name, receiveChapterReward_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool receiveChapterReward_async(com.XSanGo.Protocol.AMI_Copy_receiveChapterReward cb__, int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward> result__;
                    try
                    {
                        checkTwowayOnly__(__receiveChapterReward_name);
                        result__ = begin_receiveChapterReward(chapterId, level, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_receiveChapterReward>(this, __receiveChapterReward_name, receiveChapterReward_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> begin_releaseCaptured()
                {
                    return begin_releaseCaptured(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> begin_releaseCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_releaseCaptured(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_releaseCaptured(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_releaseCaptured(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_releaseCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_releaseCaptured(ctx__, true, cb__, cookie__);
                }

                private const string __releaseCaptured_name = "releaseCaptured";

                public void end_releaseCaptured(Ice.AsyncResult r__)
                {
                    end__(r__, __releaseCaptured_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> begin_releaseCaptured(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_releaseCaptured>(this, __releaseCaptured_name, releaseCaptured_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__releaseCaptured_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void releaseCaptured_completed__(com.XSanGo.Protocol.Callback_Copy_releaseCaptured cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool releaseCaptured_async(com.XSanGo.Protocol.AMI_Copy_releaseCaptured cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> result__ = begin_releaseCaptured();
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool releaseCaptured_async(com.XSanGo.Protocol.AMI_Copy_releaseCaptured cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_releaseCaptured> result__ = begin_releaseCaptured(ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> begin_worshipTa(int copyId)
                {
                    return begin_worshipTa(copyId, null, false, null, null);
                }

                /// <summary>
                /// 膜拜TA
                /// </summary>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> begin_worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_worshipTa(copyId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_worshipTa(int copyId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_worshipTa(copyId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_worshipTa(copyId, ctx__, true, cb__, cookie__);
                }

                private const string __worshipTa_name = "worshipTa";

                public void end_worshipTa(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __worshipTa_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> begin_worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__worshipTa_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_worshipTa> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_worshipTa>(this, __worshipTa_name, worshipTa_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__worshipTa_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(copyId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void worshipTa_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Copy_worshipTa cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_worshipTa(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                /// <summary>
                /// 膜拜TA
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                public bool worshipTa_async(com.XSanGo.Protocol.AMI_Copy_worshipTa cb__, int copyId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> result__;
                    try
                    {
                        checkTwowayOnly__(__worshipTa_name);
                        result__ = begin_worshipTa(copyId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_worshipTa>(this, __worshipTa_name, worshipTa_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                /// <summary>
                /// 膜拜TA
                /// </summary>
                /// <param name="cb__">The callback object for the operation.</param>
                /// <param name="ctx__">The Context map to send with the invocation.</param>
                public bool worshipTa_async(com.XSanGo.Protocol.AMI_Copy_worshipTa cb__, int copyId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Copy_worshipTa> result__;
                    try
                    {
                        checkTwowayOnly__(__worshipTa_name);
                        result__ = begin_worshipTa(copyId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Copy_worshipTa>(this, __worshipTa_name, worshipTa_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static CopyPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    CopyPrx r = b as CopyPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        CopyPrxHelper h = new CopyPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static CopyPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    CopyPrx r = b as CopyPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        CopyPrxHelper h = new CopyPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static CopyPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            CopyPrxHelper h = new CopyPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static CopyPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            CopyPrxHelper h = new CopyPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static CopyPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    CopyPrx r = b as CopyPrx;
                    if(r == null)
                    {
                        CopyPrxHelper h = new CopyPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static CopyPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    CopyPrxHelper h = new CopyPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Copy"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new CopyDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new CopyDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, CopyPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static CopyPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        CopyPrxHelper result = new CopyPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface CopyDel_ : Ice.ObjectDel_
            {
                com.XSanGo.Protocol.BigCopyView getBigCopyView(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                int calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.CopyDetail endChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void releaseCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void killCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string employCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string hallOfFameList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.IntIntPair getMyOccupy(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class CopyDelM_ : Ice.ObjectDelM_, CopyDel_
            {
                public com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("beginChallenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(formationId);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.CopyChallengeResultView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.CopyChallengeResultView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("beginChallengeTa", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.ChallengeTaView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.ChallengeTaView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buyChallengeChance", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buyChapterChallengeChance", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(chapterId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.IntIntPair[] ret__;
                            ret__ = com.XSanGo.Protocol.IntIntPairSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buyHuDong", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buyMilitaryOrder", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buySuccess", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public int calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("calculateStar", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeByte(remainHero);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            int ret__;
                            ret__ = is__.readInt();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("clear", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyTemplateId);
                            os__.writeInt(count);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string employCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("employCaptured", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.CopyDetail endChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("endChallenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.CopyDetail ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.CopyDetail();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("endChallengeTa", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(resFlag);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.ChallengeTaResult ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.ChallengeTaResult();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.BigCopyView getBigCopyView(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getBigCopyView", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.BigCopyView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.BigCopyView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getBuyMilitaryOrderView", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.BuyMilitaryOrderView ret__;
                            ret__ = new com.XSanGo.Protocol.BuyMilitaryOrderView();
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getChapterRewardView", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(chapterId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.ChapterRewardView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.ChapterRewardView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getCopyChallengeInfo", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(idStr);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getHuDongView", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.IntIntPair getMyOccupy(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getMyOccupy", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.IntIntPair ret__;
                            ret__ = new com.XSanGo.Protocol.IntIntPair();
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getSmallCopyView", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.SmallCopyView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.SmallCopyView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getYuanbaoPrice", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            int ret__;
                            ret__ = is__.readInt();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string hallOfFameList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("hallOfFameList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void killCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("killCaptured", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("receiveChapterReward", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(chapterId);
                            os__.writeInt(level);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void releaseCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("releaseCaptured", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("worshipTa", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(copyId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class CopyDelD_ : Ice.ObjectDelD_, CopyDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "beginChallenge", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.CopyChallengeResultView result__ = new com.XSanGo.Protocol.CopyChallengeResultView();
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.beginChallenge(formationId, copyId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.ChallengeTaView beginChallengeTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void buyChallengeChance(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buyChallengeChance", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.buyChallengeChance(copyId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buyChapterChallengeChance", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.IntIntPair[] result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.buyChapterChallengeChance(chapterId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void buyHuDong(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buyHuDong", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.buyHuDong(copyId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void buyMilitaryOrder(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buyMilitaryOrder", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.buyMilitaryOrder(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void buySuccess(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buySuccess", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.buySuccess(items, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public int calculateStar(byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "calculateStar", Ice.OperationMode.Normal, context__);
                    int result__ = 0;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.calculateStar(remainHero, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string clear(int copyTemplateId, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "clear", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.clear(copyTemplateId, count, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string employCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "employCaptured", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.employCaptured(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.CopyDetail endChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "endChallengeTa", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.ChallengeTaResult result__ = new com.XSanGo.Protocol.ChallengeTaResult();
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.endChallengeTa(resFlag, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.BigCopyView getBigCopyView(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getBuyMilitaryOrderView", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.BuyMilitaryOrderView result__ = new com.XSanGo.Protocol.BuyMilitaryOrderView();
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.getBuyMilitaryOrderView(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getChapterRewardView", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.ChapterRewardView result__ = new com.XSanGo.Protocol.ChapterRewardView();
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        result__ = servant__.getChapterRewardView(chapterId, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string getCopyChallengeInfo(string idStr, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getCopyChallengeInfo", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        result__ = servant__.getCopyChallengeInfo(idStr, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string getHuDongView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getHuDongView", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.getHuDongView(copyId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.IntIntPair getMyOccupy(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getMyOccupy", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.IntIntPair result__ = new com.XSanGo.Protocol.IntIntPair();
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.getMyOccupy(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.SmallCopyView getSmallCopyView(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getYuanbaoPrice", Ice.OperationMode.Normal, context__);
                    int result__ = 0;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.getYuanbaoPrice(items, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string hallOfFameList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void killCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "killCaptured", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.killCaptured(current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void receiveChapterReward(int chapterId, int level, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "receiveChapterReward", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.receiveChapterReward(chapterId, level, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void releaseCaptured(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "releaseCaptured", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.releaseCaptured(current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void worshipTa(int copyId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "worshipTa", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Copy servant__ = null;
                        try
                        {
                            servant__ = (Copy)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.worshipTa(copyId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class CopyDisp_ : Ice.ObjectImpl, Copy
            {
                #region Slice operations

                public void getBigCopyView_async(com.XSanGo.Protocol.AMD_Copy_getBigCopyView cb__)
                {
                    getBigCopyView_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void getBigCopyView_async(com.XSanGo.Protocol.AMD_Copy_getBigCopyView cb__, Ice.Current current__);

                public void getSmallCopyView_async(com.XSanGo.Protocol.AMD_Copy_getSmallCopyView cb__, int copyId)
                {
                    getSmallCopyView_async(cb__, copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void getSmallCopyView_async(com.XSanGo.Protocol.AMD_Copy_getSmallCopyView cb__, int copyId, Ice.Current current__);

                public com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId)
                {
                    return beginChallenge(formationId, copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.CopyChallengeResultView beginChallenge(string formationId, int copyId, Ice.Current current__);

                public int calculateStar(byte remainHero)
                {
                    return calculateStar(remainHero, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract int calculateStar(byte remainHero, Ice.Current current__);

                public void endChallenge_async(com.XSanGo.Protocol.AMD_Copy_endChallenge cb__)
                {
                    endChallenge_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void endChallenge_async(com.XSanGo.Protocol.AMD_Copy_endChallenge cb__, Ice.Current current__);

                public int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items)
                {
                    return getYuanbaoPrice(items, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract int getYuanbaoPrice(com.XSanGo.Protocol.ItemView[] items, Ice.Current current__);

                public void buySuccess(com.XSanGo.Protocol.ItemView[] items)
                {
                    buySuccess(items, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void buySuccess(com.XSanGo.Protocol.ItemView[] items, Ice.Current current__);

                public void buyChallengeChance(int copyId)
                {
                    buyChallengeChance(copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void buyChallengeChance(int copyId, Ice.Current current__);

                public com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId)
                {
                    return buyChapterChallengeChance(chapterId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.IntIntPair[] buyChapterChallengeChance(int chapterId, Ice.Current current__);

                public string clear(int copyTemplateId, int count)
                {
                    return clear(copyTemplateId, count, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string clear(int copyTemplateId, int count, Ice.Current current__);

                public com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId)
                {
                    return getChapterRewardView(chapterId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.ChapterRewardView getChapterRewardView(int chapterId, Ice.Current current__);

                public void receiveChapterReward(int chapterId, int level)
                {
                    receiveChapterReward(chapterId, level, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void receiveChapterReward(int chapterId, int level, Ice.Current current__);

                public void releaseCaptured()
                {
                    releaseCaptured(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void releaseCaptured(Ice.Current current__);

                public void killCaptured()
                {
                    killCaptured(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void killCaptured(Ice.Current current__);

                public string employCaptured()
                {
                    return employCaptured(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string employCaptured(Ice.Current current__);

                public string getCopyChallengeInfo(string idStr)
                {
                    return getCopyChallengeInfo(idStr, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string getCopyChallengeInfo(string idStr, Ice.Current current__);

                public void hallOfFameList_async(com.XSanGo.Protocol.AMD_Copy_hallOfFameList cb__)
                {
                    hallOfFameList_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void hallOfFameList_async(com.XSanGo.Protocol.AMD_Copy_hallOfFameList cb__, Ice.Current current__);

                public string getHuDongView(int copyId)
                {
                    return getHuDongView(copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string getHuDongView(int copyId, Ice.Current current__);

                public void beginChallengeTa_async(com.XSanGo.Protocol.AMD_Copy_beginChallengeTa cb__, int copyId)
                {
                    beginChallengeTa_async(cb__, copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void beginChallengeTa_async(com.XSanGo.Protocol.AMD_Copy_beginChallengeTa cb__, int copyId, Ice.Current current__);

                public com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag)
                {
                    return endChallengeTa(resFlag, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.ChallengeTaResult endChallengeTa(int resFlag, Ice.Current current__);

                public void worshipTa(int copyId)
                {
                    worshipTa(copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void worshipTa(int copyId, Ice.Current current__);

                public void buyHuDong(int copyId)
                {
                    buyHuDong(copyId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void buyHuDong(int copyId, Ice.Current current__);

                public com.XSanGo.Protocol.IntIntPair getMyOccupy()
                {
                    return getMyOccupy(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.IntIntPair getMyOccupy(Ice.Current current__);

                public com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView()
                {
                    return getBuyMilitaryOrderView(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.BuyMilitaryOrderView getBuyMilitaryOrderView(Ice.Current current__);

                public void buyMilitaryOrder()
                {
                    buyMilitaryOrder(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void buyMilitaryOrder(Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Copy"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getBigCopyView___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Copy_getBigCopyView cb__ = new _AMD_Copy_getBigCopyView(inS__);
                    try
                    {
                        obj__.getBigCopyView_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getSmallCopyView___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyId;
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    AMD_Copy_getSmallCopyView cb__ = new _AMD_Copy_getSmallCopyView(inS__);
                    try
                    {
                        obj__.getSmallCopyView_async(cb__, copyId, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus beginChallenge___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string formationId;
                    int copyId;
                    formationId = is__.readString();
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        com.XSanGo.Protocol.CopyChallengeResultView ret__ = obj__.beginChallenge(formationId, copyId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(ret__ == null)
                        {
                            com.XSanGo.Protocol.CopyChallengeResultView tmp__ = new com.XSanGo.Protocol.CopyChallengeResultView();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            ret__.write__(os__);
                        }
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus calculateStar___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    byte remainHero;
                    remainHero = is__.readByte();
                    inS__.endReadParams();
                    try
                    {
                        int ret__ = obj__.calculateStar(remainHero, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus endChallenge___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Copy_endChallenge cb__ = new _AMD_Copy_endChallenge(inS__);
                    try
                    {
                        obj__.endChallenge_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getYuanbaoPrice___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.ItemView[] items;
                    items = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                    inS__.endReadParams();
                    try
                    {
                        int ret__ = obj__.getYuanbaoPrice(items, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buySuccess___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.ItemView[] items;
                    items = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                    inS__.endReadParams();
                    try
                    {
                        obj__.buySuccess(items, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buyChallengeChance___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyId;
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        obj__.buyChallengeChance(copyId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buyChapterChallengeChance___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int chapterId;
                    chapterId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        com.XSanGo.Protocol.IntIntPair[] ret__ = obj__.buyChapterChallengeChance(chapterId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.IntIntPairSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus clear___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyTemplateId;
                    int count;
                    copyTemplateId = is__.readInt();
                    count = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        string ret__ = obj__.clear(copyTemplateId, count, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getChapterRewardView___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int chapterId;
                    chapterId = is__.readInt();
                    inS__.endReadParams();
                    com.XSanGo.Protocol.ChapterRewardView ret__ = obj__.getChapterRewardView(chapterId, current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    if(ret__ == null)
                    {
                        com.XSanGo.Protocol.ChapterRewardView tmp__ = new com.XSanGo.Protocol.ChapterRewardView();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        ret__.write__(os__);
                    }
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus receiveChapterReward___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int chapterId;
                    int level;
                    chapterId = is__.readInt();
                    level = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        obj__.receiveChapterReward(chapterId, level, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus releaseCaptured___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    obj__.releaseCaptured(current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus killCaptured___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    obj__.killCaptured(current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus employCaptured___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        string ret__ = obj__.employCaptured(current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getCopyChallengeInfo___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string idStr;
                    idStr = is__.readString();
                    inS__.endReadParams();
                    string ret__ = obj__.getCopyChallengeInfo(idStr, current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    os__.writeString(ret__);
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus hallOfFameList___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Copy_hallOfFameList cb__ = new _AMD_Copy_hallOfFameList(inS__);
                    try
                    {
                        obj__.hallOfFameList_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getHuDongView___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyId;
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        string ret__ = obj__.getHuDongView(copyId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus beginChallengeTa___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyId;
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    AMD_Copy_beginChallengeTa cb__ = new _AMD_Copy_beginChallengeTa(inS__);
                    try
                    {
                        obj__.beginChallengeTa_async(cb__, copyId, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus endChallengeTa___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int resFlag;
                    resFlag = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        com.XSanGo.Protocol.ChallengeTaResult ret__ = obj__.endChallengeTa(resFlag, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(ret__ == null)
                        {
                            com.XSanGo.Protocol.ChallengeTaResult tmp__ = new com.XSanGo.Protocol.ChallengeTaResult();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            ret__.write__(os__);
                        }
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus worshipTa___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyId;
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        obj__.worshipTa(copyId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buyHuDong___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int copyId;
                    copyId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        obj__.buyHuDong(copyId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getMyOccupy___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        com.XSanGo.Protocol.IntIntPair ret__ = obj__.getMyOccupy(current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        ret__.write__(os__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getBuyMilitaryOrderView___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        com.XSanGo.Protocol.BuyMilitaryOrderView ret__ = obj__.getBuyMilitaryOrderView(current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        ret__.write__(os__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buyMilitaryOrder___(Copy obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.buyMilitaryOrder(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                private static string[] all__ =
                {
                    "beginChallenge",
                    "beginChallengeTa",
                    "buyChallengeChance",
                    "buyChapterChallengeChance",
                    "buyHuDong",
                    "buyMilitaryOrder",
                    "buySuccess",
                    "calculateStar",
                    "clear",
                    "employCaptured",
                    "endChallenge",
                    "endChallengeTa",
                    "getBigCopyView",
                    "getBuyMilitaryOrderView",
                    "getChapterRewardView",
                    "getCopyChallengeInfo",
                    "getHuDongView",
                    "getMyOccupy",
                    "getSmallCopyView",
                    "getYuanbaoPrice",
                    "hallOfFameList",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "killCaptured",
                    "receiveChapterReward",
                    "releaseCaptured",
                    "worshipTa"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return beginChallenge___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return beginChallengeTa___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return buyChallengeChance___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return buyChapterChallengeChance___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return buyHuDong___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return buyMilitaryOrder___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return buySuccess___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return calculateStar___(this, inS__, current__);
                        }
                        case 8:
                        {
                            return clear___(this, inS__, current__);
                        }
                        case 9:
                        {
                            return employCaptured___(this, inS__, current__);
                        }
                        case 10:
                        {
                            return endChallenge___(this, inS__, current__);
                        }
                        case 11:
                        {
                            return endChallengeTa___(this, inS__, current__);
                        }
                        case 12:
                        {
                            return getBigCopyView___(this, inS__, current__);
                        }
                        case 13:
                        {
                            return getBuyMilitaryOrderView___(this, inS__, current__);
                        }
                        case 14:
                        {
                            return getChapterRewardView___(this, inS__, current__);
                        }
                        case 15:
                        {
                            return getCopyChallengeInfo___(this, inS__, current__);
                        }
                        case 16:
                        {
                            return getHuDongView___(this, inS__, current__);
                        }
                        case 17:
                        {
                            return getMyOccupy___(this, inS__, current__);
                        }
                        case 18:
                        {
                            return getSmallCopyView___(this, inS__, current__);
                        }
                        case 19:
                        {
                            return getYuanbaoPrice___(this, inS__, current__);
                        }
                        case 20:
                        {
                            return hallOfFameList___(this, inS__, current__);
                        }
                        case 21:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 22:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 23:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 24:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 25:
                        {
                            return killCaptured___(this, inS__, current__);
                        }
                        case 26:
                        {
                            return receiveChapterReward___(this, inS__, current__);
                        }
                        case 27:
                        {
                            return releaseCaptured___(this, inS__, current__);
                        }
                        case 28:
                        {
                            return worshipTa___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getBigCopyView : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.BigCopyView ret__);

                public void response__(com.XSanGo.Protocol.BigCopyView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Copy_getBigCopyView : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.BigCopyView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Copy_getBigCopyView : IceInternal.IncomingAsync, AMD_Copy_getBigCopyView
            {
                public _AMD_Copy_getBigCopyView(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.BigCopyView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.BigCopyView tmp__ = new com.XSanGo.Protocol.BigCopyView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getSmallCopyView : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.SmallCopyView ret__);

                public void response__(com.XSanGo.Protocol.SmallCopyView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Copy_getSmallCopyView : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.SmallCopyView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Copy_getSmallCopyView : IceInternal.IncomingAsync, AMD_Copy_getSmallCopyView
            {
                public _AMD_Copy_getSmallCopyView(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.SmallCopyView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.SmallCopyView tmp__ = new com.XSanGo.Protocol.SmallCopyView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_beginChallenge : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.CopyChallengeResultView ret__);

                public void response__(com.XSanGo.Protocol.CopyChallengeResultView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_calculateStar : Ice.AMICallbackBase
            {
                public abstract void ice_response(int ret__);

                public void response__(int ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_endChallenge : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.CopyDetail ret__);

                public void response__(com.XSanGo.Protocol.CopyDetail ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Copy_endChallenge : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.CopyDetail ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Copy_endChallenge : IceInternal.IncomingAsync, AMD_Copy_endChallenge
            {
                public _AMD_Copy_endChallenge(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.CopyDetail ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.CopyDetail tmp__ = new com.XSanGo.Protocol.CopyDetail();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getYuanbaoPrice : Ice.AMICallbackBase
            {
                public abstract void ice_response(int ret__);

                public void response__(int ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_buySuccess : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_buyChallengeChance : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_buyChapterChallengeChance : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.IntIntPair[] ret__);

                public void response__(com.XSanGo.Protocol.IntIntPair[] ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_clear : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getChapterRewardView : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.ChapterRewardView ret__);

                public void response__(com.XSanGo.Protocol.ChapterRewardView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_receiveChapterReward : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_releaseCaptured : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_killCaptured : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_employCaptured : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getCopyChallengeInfo : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_hallOfFameList : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Copy_hallOfFameList : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Copy_hallOfFameList : IceInternal.IncomingAsync, AMD_Copy_hallOfFameList
            {
                public _AMD_Copy_hallOfFameList(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }
            }

            /// <summary>
            /// 打开互动界面 返回HuDongView的lua格式
            /// </summary>
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getHuDongView : Ice.AMICallbackBase
            {
                /// <summary>
                /// ice_response indicates that
                /// the operation completed successfully.
                /// </summary>
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            /// <summary>
            /// 挑战TA
            /// </summary>
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_beginChallengeTa : Ice.AMICallbackBase
            {
                /// <summary>
                /// ice_response indicates that
                /// the operation completed successfully.
                /// </summary>
                public abstract void ice_response(com.XSanGo.Protocol.ChallengeTaView ret__);

                public void response__(com.XSanGo.Protocol.ChallengeTaView ret__)
                {
                    ice_response(ret__);
                }
            }

            /// <summary>
            /// 挑战TA
            /// </summary>
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Copy_beginChallengeTa : Ice.AMDCallback
            {
                /// <summary>
                /// ice_response indicates that
                /// the operation completed successfully.
                /// </summary>
                void ice_response(com.XSanGo.Protocol.ChallengeTaView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Copy_beginChallengeTa : IceInternal.IncomingAsync, AMD_Copy_beginChallengeTa
            {
                public _AMD_Copy_beginChallengeTa(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.ChallengeTaView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.ChallengeTaView tmp__ = new com.XSanGo.Protocol.ChallengeTaView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            /// <summary>
            /// 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
            /// </summary>
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_endChallengeTa : Ice.AMICallbackBase
            {
                /// <summary>
                /// ice_response indicates that
                /// the operation completed successfully.
                /// </summary>
                public abstract void ice_response(com.XSanGo.Protocol.ChallengeTaResult ret__);

                public void response__(com.XSanGo.Protocol.ChallengeTaResult ret__)
                {
                    ice_response(ret__);
                }
            }

            /// <summary>
            /// 膜拜TA
            /// </summary>
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_worshipTa : Ice.AMICallbackBase
            {
                /// <summary>
                /// ice_response indicates that
                /// the operation completed successfully.
                /// </summary>
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            /// <summary>
            /// 购买互动次数
            /// </summary>
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_buyHuDong : Ice.AMICallbackBase
            {
                /// <summary>
                /// ice_response indicates that
                /// the operation completed successfully.
                /// </summary>
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getMyOccupy : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.IntIntPair ret__);

                public void response__(com.XSanGo.Protocol.IntIntPair ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_getBuyMilitaryOrderView : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.BuyMilitaryOrderView ret__);

                public void response__(com.XSanGo.Protocol.BuyMilitaryOrderView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Copy_buyMilitaryOrder : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }
        }
    }
}
