// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Formation.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface FormationCallback : Ice.Object, FormationCallbackOperations_, FormationCallbackOperationsNC_
            {
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface Formation : Ice.Object, FormationOperations_, FormationOperationsNC_
            {
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_FormationCallback_formationChange();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Formation_getFormationList(com.XSanGo.Protocol.FormationView[] ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Formation_setFormationBuff();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Formation_setFormationPosition();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Formation_setFormationSkill();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Formation_clearFormation();
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationCallbackPrx : Ice.ObjectPrx
            {
                void formationChange(com.XSanGo.Protocol.FormationView view);
                void formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> begin_formationChange(com.XSanGo.Protocol.FormationView view);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> begin_formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_formationChange(com.XSanGo.Protocol.FormationView view, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_formationChange(Ice.AsyncResult r__);

                bool formationChange_async(com.XSanGo.Protocol.AMI_FormationCallback_formationChange cb__, com.XSanGo.Protocol.FormationView view);
                bool formationChange_async(com.XSanGo.Protocol.AMI_FormationCallback_formationChange cb__, com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationPrx : Ice.ObjectPrx
            {
                com.XSanGo.Protocol.FormationView[] getFormationList();
                com.XSanGo.Protocol.FormationView[] getFormationList(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> begin_getFormationList();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> begin_getFormationList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getFormationList(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getFormationList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.FormationView[] end_getFormationList(Ice.AsyncResult r__);

                bool getFormationList_async(com.XSanGo.Protocol.AMI_Formation_getFormationList cb__);
                bool getFormationList_async(com.XSanGo.Protocol.AMI_Formation_getFormationList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void setFormationBuff(string formationId, string bookId);
                void setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> begin_setFormationBuff(string formationId, string bookId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> begin_setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setFormationBuff(string formationId, string bookId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_setFormationBuff(Ice.AsyncResult r__);

                bool setFormationBuff_async(com.XSanGo.Protocol.AMI_Formation_setFormationBuff cb__, string formationId, string bookId);
                bool setFormationBuff_async(com.XSanGo.Protocol.AMI_Formation_setFormationBuff cb__, string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void setFormationPosition(string formationId, byte postion, string heroId);
                void setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> begin_setFormationPosition(string formationId, byte postion, string heroId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> begin_setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setFormationPosition(string formationId, byte postion, string heroId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_setFormationPosition(Ice.AsyncResult r__);

                bool setFormationPosition_async(com.XSanGo.Protocol.AMI_Formation_setFormationPosition cb__, string formationId, byte postion, string heroId);
                bool setFormationPosition_async(com.XSanGo.Protocol.AMI_Formation_setFormationPosition cb__, string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void setFormationSkill(string formationId, byte pos, int skillId);
                void setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> begin_setFormationSkill(string formationId, byte pos, int skillId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> begin_setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setFormationSkill(string formationId, byte pos, int skillId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_setFormationSkill(Ice.AsyncResult r__);

                bool setFormationSkill_async(com.XSanGo.Protocol.AMI_Formation_setFormationSkill cb__, string formationId, byte pos, int skillId);
                bool setFormationSkill_async(com.XSanGo.Protocol.AMI_Formation_setFormationSkill cb__, string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void clearFormation(string formationId);
                void clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> begin_clearFormation(string formationId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> begin_clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_clearFormation(string formationId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_clearFormation(Ice.AsyncResult r__);

                bool clearFormation_async(com.XSanGo.Protocol.AMI_Formation_clearFormation cb__, string formationId);
                bool clearFormation_async(com.XSanGo.Protocol.AMI_Formation_clearFormation cb__, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationCallbackOperations_
            {
                void formationChange(com.XSanGo.Protocol.FormationView view, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationCallbackOperationsNC_
            {
                void formationChange(com.XSanGo.Protocol.FormationView view);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationOperations_
            {
                com.XSanGo.Protocol.FormationView[] getFormationList(Ice.Current current__);

                void setFormationBuff(string formationId, string bookId, Ice.Current current__);

                void setFormationPosition(string formationId, byte postion, string heroId, Ice.Current current__);

                void setFormationSkill(string formationId, byte pos, int skillId, Ice.Current current__);

                void clearFormation(string formationId, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationOperationsNC_
            {
                com.XSanGo.Protocol.FormationView[] getFormationList();

                void setFormationBuff(string formationId, string bookId);

                void setFormationPosition(string formationId, byte postion, string heroId);

                void setFormationSkill(string formationId, byte pos, int skillId);

                void clearFormation(string formationId);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class FormationCallbackPrxHelper : Ice.ObjectPrxHelperBase, FormationCallbackPrx
            {
                #region Synchronous operations

                public void formationChange(com.XSanGo.Protocol.FormationView view)
                {
                    formationChange(view, null, false);
                }

                public void formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    formationChange(view, context__, true);
                }

                private void formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __formationChange_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                FormationCallbackDel_ del__ = (FormationCallbackDel_)delBase__;
                                del__.formationChange(view, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> begin_formationChange(com.XSanGo.Protocol.FormationView view)
                {
                    return begin_formationChange(view, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> begin_formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_formationChange(view, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_formationChange(com.XSanGo.Protocol.FormationView view, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_formationChange(view, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_formationChange(view, ctx__, true, cb__, cookie__);
                }

                private const string __formationChange_name = "formationChange";

                public void end_formationChange(Ice.AsyncResult r__)
                {
                    end__(r__, __formationChange_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> begin_formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_FormationCallback_formationChange>(this, __formationChange_name, formationChange_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__formationChange_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(view == null)
                        {
                            com.XSanGo.Protocol.FormationView tmp__ = new com.XSanGo.Protocol.FormationView();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            view.write__(os__);
                        }
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void formationChange_completed__(com.XSanGo.Protocol.Callback_FormationCallback_formationChange cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool formationChange_async(com.XSanGo.Protocol.AMI_FormationCallback_formationChange cb__, com.XSanGo.Protocol.FormationView view)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> result__ = begin_formationChange(view);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool formationChange_async(com.XSanGo.Protocol.AMI_FormationCallback_formationChange cb__, com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_FormationCallback_formationChange> result__ = begin_formationChange(view, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static FormationCallbackPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    FormationCallbackPrx r = b as FormationCallbackPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        FormationCallbackPrxHelper h = new FormationCallbackPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static FormationCallbackPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    FormationCallbackPrx r = b as FormationCallbackPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        FormationCallbackPrxHelper h = new FormationCallbackPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static FormationCallbackPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            FormationCallbackPrxHelper h = new FormationCallbackPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static FormationCallbackPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            FormationCallbackPrxHelper h = new FormationCallbackPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static FormationCallbackPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    FormationCallbackPrx r = b as FormationCallbackPrx;
                    if(r == null)
                    {
                        FormationCallbackPrxHelper h = new FormationCallbackPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static FormationCallbackPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    FormationCallbackPrxHelper h = new FormationCallbackPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::FormationCallback"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new FormationCallbackDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new FormationCallbackDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, FormationCallbackPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static FormationCallbackPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        FormationCallbackPrxHelper result = new FormationCallbackPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class FormationPrxHelper : Ice.ObjectPrxHelperBase, FormationPrx
            {
                #region Synchronous operations

                public void clearFormation(string formationId)
                {
                    clearFormation(formationId, null, false);
                }

                public void clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    clearFormation(formationId, context__, true);
                }

                private void clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __clearFormation_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__clearFormation_name);
                                delBase__ = getDelegate__(false);
                                FormationDel_ del__ = (FormationDel_)delBase__;
                                del__.clearFormation(formationId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.FormationView[] getFormationList()
                {
                    return getFormationList(null, false);
                }

                public com.XSanGo.Protocol.FormationView[] getFormationList(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getFormationList(context__, true);
                }

                private com.XSanGo.Protocol.FormationView[] getFormationList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getFormationList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getFormationList_name);
                                delBase__ = getDelegate__(false);
                                FormationDel_ del__ = (FormationDel_)delBase__;
                                return del__.getFormationList(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void setFormationBuff(string formationId, string bookId)
                {
                    setFormationBuff(formationId, bookId, null, false);
                }

                public void setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    setFormationBuff(formationId, bookId, context__, true);
                }

                private void setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setFormationBuff_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                FormationDel_ del__ = (FormationDel_)delBase__;
                                del__.setFormationBuff(formationId, bookId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void setFormationPosition(string formationId, byte postion, string heroId)
                {
                    setFormationPosition(formationId, postion, heroId, null, false);
                }

                public void setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    setFormationPosition(formationId, postion, heroId, context__, true);
                }

                private void setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setFormationPosition_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__setFormationPosition_name);
                                delBase__ = getDelegate__(false);
                                FormationDel_ del__ = (FormationDel_)delBase__;
                                del__.setFormationPosition(formationId, postion, heroId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void setFormationSkill(string formationId, byte pos, int skillId)
                {
                    setFormationSkill(formationId, pos, skillId, null, false);
                }

                public void setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    setFormationSkill(formationId, pos, skillId, context__, true);
                }

                private void setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setFormationSkill_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                FormationDel_ del__ = (FormationDel_)delBase__;
                                del__.setFormationSkill(formationId, pos, skillId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> begin_clearFormation(string formationId)
                {
                    return begin_clearFormation(formationId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> begin_clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_clearFormation(formationId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_clearFormation(string formationId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_clearFormation(formationId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_clearFormation(formationId, ctx__, true, cb__, cookie__);
                }

                private const string __clearFormation_name = "clearFormation";

                public void end_clearFormation(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __clearFormation_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> begin_clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__clearFormation_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_clearFormation> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_clearFormation>(this, __clearFormation_name, clearFormation_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__clearFormation_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(formationId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void clearFormation_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Formation_clearFormation cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_clearFormation(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool clearFormation_async(com.XSanGo.Protocol.AMI_Formation_clearFormation cb__, string formationId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> result__;
                    try
                    {
                        checkTwowayOnly__(__clearFormation_name);
                        result__ = begin_clearFormation(formationId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_clearFormation>(this, __clearFormation_name, clearFormation_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool clearFormation_async(com.XSanGo.Protocol.AMI_Formation_clearFormation cb__, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_clearFormation> result__;
                    try
                    {
                        checkTwowayOnly__(__clearFormation_name);
                        result__ = begin_clearFormation(formationId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_clearFormation>(this, __clearFormation_name, clearFormation_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> begin_getFormationList()
                {
                    return begin_getFormationList(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> begin_getFormationList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getFormationList(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getFormationList(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getFormationList(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getFormationList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getFormationList(ctx__, true, cb__, cookie__);
                }

                private const string __getFormationList_name = "getFormationList";

                public com.XSanGo.Protocol.FormationView[] end_getFormationList(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getFormationList_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.FormationView[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.FormationViewSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> begin_getFormationList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getFormationList_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_getFormationList> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_getFormationList>(this, __getFormationList_name, getFormationList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getFormationList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getFormationList_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Formation_getFormationList cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.FormationView[] ret__;
                    try
                    {
                        ret__ = end_getFormationList(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getFormationList_async(com.XSanGo.Protocol.AMI_Formation_getFormationList cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> result__;
                    try
                    {
                        checkTwowayOnly__(__getFormationList_name);
                        result__ = begin_getFormationList();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_getFormationList>(this, __getFormationList_name, getFormationList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getFormationList_async(com.XSanGo.Protocol.AMI_Formation_getFormationList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_getFormationList> result__;
                    try
                    {
                        checkTwowayOnly__(__getFormationList_name);
                        result__ = begin_getFormationList(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_getFormationList>(this, __getFormationList_name, getFormationList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> begin_setFormationBuff(string formationId, string bookId)
                {
                    return begin_setFormationBuff(formationId, bookId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> begin_setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setFormationBuff(formationId, bookId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setFormationBuff(string formationId, string bookId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setFormationBuff(formationId, bookId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setFormationBuff(formationId, bookId, ctx__, true, cb__, cookie__);
                }

                private const string __setFormationBuff_name = "setFormationBuff";

                public void end_setFormationBuff(Ice.AsyncResult r__)
                {
                    end__(r__, __setFormationBuff_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> begin_setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationBuff>(this, __setFormationBuff_name, setFormationBuff_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setFormationBuff_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(formationId);
                        os__.writeString(bookId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setFormationBuff_completed__(com.XSanGo.Protocol.Callback_Formation_setFormationBuff cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool setFormationBuff_async(com.XSanGo.Protocol.AMI_Formation_setFormationBuff cb__, string formationId, string bookId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> result__ = begin_setFormationBuff(formationId, bookId);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setFormationBuff_async(com.XSanGo.Protocol.AMI_Formation_setFormationBuff cb__, string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationBuff> result__ = begin_setFormationBuff(formationId, bookId, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> begin_setFormationPosition(string formationId, byte postion, string heroId)
                {
                    return begin_setFormationPosition(formationId, postion, heroId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> begin_setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setFormationPosition(formationId, postion, heroId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setFormationPosition(string formationId, byte postion, string heroId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setFormationPosition(formationId, postion, heroId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setFormationPosition(formationId, postion, heroId, ctx__, true, cb__, cookie__);
                }

                private const string __setFormationPosition_name = "setFormationPosition";

                public void end_setFormationPosition(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __setFormationPosition_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> begin_setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__setFormationPosition_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationPosition>(this, __setFormationPosition_name, setFormationPosition_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setFormationPosition_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(formationId);
                        os__.writeByte(postion);
                        os__.writeString(heroId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setFormationPosition_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Formation_setFormationPosition cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_setFormationPosition(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool setFormationPosition_async(com.XSanGo.Protocol.AMI_Formation_setFormationPosition cb__, string formationId, byte postion, string heroId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> result__;
                    try
                    {
                        checkTwowayOnly__(__setFormationPosition_name);
                        result__ = begin_setFormationPosition(formationId, postion, heroId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationPosition>(this, __setFormationPosition_name, setFormationPosition_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setFormationPosition_async(com.XSanGo.Protocol.AMI_Formation_setFormationPosition cb__, string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationPosition> result__;
                    try
                    {
                        checkTwowayOnly__(__setFormationPosition_name);
                        result__ = begin_setFormationPosition(formationId, postion, heroId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationPosition>(this, __setFormationPosition_name, setFormationPosition_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> begin_setFormationSkill(string formationId, byte pos, int skillId)
                {
                    return begin_setFormationSkill(formationId, pos, skillId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> begin_setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setFormationSkill(formationId, pos, skillId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setFormationSkill(string formationId, byte pos, int skillId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setFormationSkill(formationId, pos, skillId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setFormationSkill(formationId, pos, skillId, ctx__, true, cb__, cookie__);
                }

                private const string __setFormationSkill_name = "setFormationSkill";

                public void end_setFormationSkill(Ice.AsyncResult r__)
                {
                    end__(r__, __setFormationSkill_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> begin_setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Formation_setFormationSkill>(this, __setFormationSkill_name, setFormationSkill_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setFormationSkill_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(formationId);
                        os__.writeByte(pos);
                        os__.writeInt(skillId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setFormationSkill_completed__(com.XSanGo.Protocol.Callback_Formation_setFormationSkill cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool setFormationSkill_async(com.XSanGo.Protocol.AMI_Formation_setFormationSkill cb__, string formationId, byte pos, int skillId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> result__ = begin_setFormationSkill(formationId, pos, skillId);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setFormationSkill_async(com.XSanGo.Protocol.AMI_Formation_setFormationSkill cb__, string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Formation_setFormationSkill> result__ = begin_setFormationSkill(formationId, pos, skillId, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static FormationPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    FormationPrx r = b as FormationPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        FormationPrxHelper h = new FormationPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static FormationPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    FormationPrx r = b as FormationPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        FormationPrxHelper h = new FormationPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static FormationPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            FormationPrxHelper h = new FormationPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static FormationPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            FormationPrxHelper h = new FormationPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static FormationPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    FormationPrx r = b as FormationPrx;
                    if(r == null)
                    {
                        FormationPrxHelper h = new FormationPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static FormationPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    FormationPrxHelper h = new FormationPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Formation"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new FormationDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new FormationDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, FormationPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static FormationPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        FormationPrxHelper result = new FormationPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationCallbackDel_ : Ice.ObjectDel_
            {
                void formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface FormationDel_ : Ice.ObjectDel_
            {
                com.XSanGo.Protocol.FormationView[] getFormationList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class FormationCallbackDelM_ : Ice.ObjectDelM_, FormationCallbackDel_
            {
                public void formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("formationChange", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            if(view == null)
                            {
                                com.XSanGo.Protocol.FormationView tmp__ = new com.XSanGo.Protocol.FormationView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                view.write__(os__);
                            }
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class FormationDelM_ : Ice.ObjectDelM_, FormationDel_
            {
                public void clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("clearFormation", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(formationId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.FormationView[] getFormationList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getFormationList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.FormationView[] ret__;
                            ret__ = com.XSanGo.Protocol.FormationViewSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setFormationBuff", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(formationId);
                            os__.writeString(bookId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setFormationPosition", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(formationId);
                            os__.writeByte(postion);
                            os__.writeString(heroId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setFormationSkill", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(formationId);
                            os__.writeByte(pos);
                            os__.writeInt(skillId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class FormationCallbackDelD_ : Ice.ObjectDelD_, FormationCallbackDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void formationChange(com.XSanGo.Protocol.FormationView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "formationChange", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        FormationCallback servant__ = null;
                        try
                        {
                            servant__ = (FormationCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.formationChange(view, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class FormationDelD_ : Ice.ObjectDelD_, FormationDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void clearFormation(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "clearFormation", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Formation servant__ = null;
                        try
                        {
                            servant__ = (Formation)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.clearFormation(formationId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.FormationView[] getFormationList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getFormationList", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.FormationView[] result__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Formation servant__ = null;
                        try
                        {
                            servant__ = (Formation)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        result__ = servant__.getFormationList(current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void setFormationBuff(string formationId, string bookId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "setFormationBuff", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Formation servant__ = null;
                        try
                        {
                            servant__ = (Formation)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.setFormationBuff(formationId, bookId, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void setFormationPosition(string formationId, byte postion, string heroId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "setFormationPosition", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Formation servant__ = null;
                        try
                        {
                            servant__ = (Formation)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.setFormationPosition(formationId, postion, heroId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void setFormationSkill(string formationId, byte pos, int skillId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "setFormationSkill", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Formation servant__ = null;
                        try
                        {
                            servant__ = (Formation)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.setFormationSkill(formationId, pos, skillId, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class FormationCallbackDisp_ : Ice.ObjectImpl, FormationCallback
            {
                #region Slice operations

                public void formationChange(com.XSanGo.Protocol.FormationView view)
                {
                    formationChange(view, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void formationChange(com.XSanGo.Protocol.FormationView view, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::FormationCallback"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus formationChange___(FormationCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.FormationView view;
                    view = null;
                    if(view == null)
                    {
                        view = new com.XSanGo.Protocol.FormationView();
                    }
                    view.read__(is__);
                    inS__.endReadParams();
                    obj__.formationChange(view, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                private static string[] all__ =
                {
                    "formationChange",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return formationChange___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class FormationDisp_ : Ice.ObjectImpl, Formation
            {
                #region Slice operations

                public com.XSanGo.Protocol.FormationView[] getFormationList()
                {
                    return getFormationList(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.FormationView[] getFormationList(Ice.Current current__);

                public void setFormationBuff(string formationId, string bookId)
                {
                    setFormationBuff(formationId, bookId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void setFormationBuff(string formationId, string bookId, Ice.Current current__);

                public void setFormationPosition(string formationId, byte postion, string heroId)
                {
                    setFormationPosition(formationId, postion, heroId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void setFormationPosition(string formationId, byte postion, string heroId, Ice.Current current__);

                public void setFormationSkill(string formationId, byte pos, int skillId)
                {
                    setFormationSkill(formationId, pos, skillId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void setFormationSkill(string formationId, byte pos, int skillId, Ice.Current current__);

                public void clearFormation(string formationId)
                {
                    clearFormation(formationId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void clearFormation(string formationId, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Formation"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getFormationList___(Formation obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    com.XSanGo.Protocol.FormationView[] ret__ = obj__.getFormationList(current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    com.XSanGo.Protocol.FormationViewSeqHelper.write(os__, ret__);
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setFormationBuff___(Formation obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string formationId;
                    string bookId;
                    formationId = is__.readString();
                    bookId = is__.readString();
                    inS__.endReadParams();
                    obj__.setFormationBuff(formationId, bookId, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setFormationPosition___(Formation obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string formationId;
                    byte postion;
                    string heroId;
                    formationId = is__.readString();
                    postion = is__.readByte();
                    heroId = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.setFormationPosition(formationId, postion, heroId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setFormationSkill___(Formation obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string formationId;
                    byte pos;
                    int skillId;
                    formationId = is__.readString();
                    pos = is__.readByte();
                    skillId = is__.readInt();
                    inS__.endReadParams();
                    obj__.setFormationSkill(formationId, pos, skillId, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus clearFormation___(Formation obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string formationId;
                    formationId = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.clearFormation(formationId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                private static string[] all__ =
                {
                    "clearFormation",
                    "getFormationList",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "setFormationBuff",
                    "setFormationPosition",
                    "setFormationSkill"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return clearFormation___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return getFormationList___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return setFormationBuff___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return setFormationPosition___(this, inS__, current__);
                        }
                        case 8:
                        {
                            return setFormationSkill___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_FormationCallback_formationChange : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Formation_getFormationList : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.FormationView[] ret__);

                public void response__(com.XSanGo.Protocol.FormationView[] ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Formation_setFormationBuff : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Formation_setFormationPosition : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Formation_setFormationSkill : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Formation_clearFormation : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }
        }
    }
}
