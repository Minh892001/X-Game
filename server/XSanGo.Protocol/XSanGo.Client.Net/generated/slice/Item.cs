// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Item.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface Item : Ice.Object, ItemOperations_, ItemOperationsNC_
            {
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Item_levelUpFormationBuff(com.XSanGo.Protocol.ItemView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Item_sale();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Item_useItem();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Item_useChestItem(com.XSanGo.Protocol.ItemView[] ret__);
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ItemPrx : Ice.ObjectPrx
            {
                com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray);
                com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> begin_levelUpFormationBuff(string id, string[] idArray);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> begin_levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_levelUpFormationBuff(string id, string[] idArray, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.ItemView end_levelUpFormationBuff(Ice.AsyncResult r__);

                bool levelUpFormationBuff_async(com.XSanGo.Protocol.AMI_Item_levelUpFormationBuff cb__, string id, string[] idArray);
                bool levelUpFormationBuff_async(com.XSanGo.Protocol.AMI_Item_levelUpFormationBuff cb__, string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void sale(string id, int count);
                void sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> begin_sale(string id, int count);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> begin_sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_sale(string id, int count, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_sale(Ice.AsyncResult r__);

                bool sale_async(com.XSanGo.Protocol.AMI_Item_sale cb__, string id, int count);
                bool sale_async(com.XSanGo.Protocol.AMI_Item_sale cb__, string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void useItem(string id, int count, string @params);
                void useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> begin_useItem(string id, int count, string @params);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> begin_useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_useItem(string id, int count, string @params, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_useItem(Ice.AsyncResult r__);

                bool useItem_async(com.XSanGo.Protocol.AMI_Item_useItem cb__, string id, int count, string @params);
                bool useItem_async(com.XSanGo.Protocol.AMI_Item_useItem cb__, string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count);
                com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> begin_useChestItem(string id, int count);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> begin_useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_useChestItem(string id, int count, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.ItemView[] end_useChestItem(Ice.AsyncResult r__);

                bool useChestItem_async(com.XSanGo.Protocol.AMI_Item_useChestItem cb__, string id, int count);
                bool useChestItem_async(com.XSanGo.Protocol.AMI_Item_useChestItem cb__, string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ItemOperations_
            {
                com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, Ice.Current current__);

                void sale(string id, int count, Ice.Current current__);

                void useItem(string id, int count, string @params, Ice.Current current__);

                com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ItemOperationsNC_
            {
                com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray);

                void sale(string id, int count);

                void useItem(string id, int count, string @params);

                com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ItemPrxHelper : Ice.ObjectPrxHelperBase, ItemPrx
            {
                #region Synchronous operations

                public com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray)
                {
                    return levelUpFormationBuff(id, idArray, null, false);
                }

                public com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return levelUpFormationBuff(id, idArray, context__, true);
                }

                private com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __levelUpFormationBuff_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__levelUpFormationBuff_name);
                                delBase__ = getDelegate__(false);
                                ItemDel_ del__ = (ItemDel_)delBase__;
                                return del__.levelUpFormationBuff(id, idArray, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void sale(string id, int count)
                {
                    sale(id, count, null, false);
                }

                public void sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    sale(id, count, context__, true);
                }

                private void sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __sale_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__sale_name);
                                delBase__ = getDelegate__(false);
                                ItemDel_ del__ = (ItemDel_)delBase__;
                                del__.sale(id, count, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count)
                {
                    return useChestItem(id, count, null, false);
                }

                public com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return useChestItem(id, count, context__, true);
                }

                private com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __useChestItem_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__useChestItem_name);
                                delBase__ = getDelegate__(false);
                                ItemDel_ del__ = (ItemDel_)delBase__;
                                return del__.useChestItem(id, count, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void useItem(string id, int count, string @params)
                {
                    useItem(id, count, @params, null, false);
                }

                public void useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    useItem(id, count, @params, context__, true);
                }

                private void useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __useItem_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__useItem_name);
                                delBase__ = getDelegate__(false);
                                ItemDel_ del__ = (ItemDel_)delBase__;
                                del__.useItem(id, count, @params, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> begin_levelUpFormationBuff(string id, string[] idArray)
                {
                    return begin_levelUpFormationBuff(id, idArray, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> begin_levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_levelUpFormationBuff(id, idArray, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_levelUpFormationBuff(string id, string[] idArray, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_levelUpFormationBuff(id, idArray, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_levelUpFormationBuff(id, idArray, ctx__, true, cb__, cookie__);
                }

                private const string __levelUpFormationBuff_name = "levelUpFormationBuff";

                public com.XSanGo.Protocol.ItemView end_levelUpFormationBuff(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __levelUpFormationBuff_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.ItemView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.ItemView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> begin_levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__levelUpFormationBuff_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff>(this, __levelUpFormationBuff_name, levelUpFormationBuff_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__levelUpFormationBuff_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(id);
                        com.XSanGo.Protocol.StringSeqHelper.write(os__, idArray);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void levelUpFormationBuff_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.ItemView ret__;
                    try
                    {
                        ret__ = end_levelUpFormationBuff(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool levelUpFormationBuff_async(com.XSanGo.Protocol.AMI_Item_levelUpFormationBuff cb__, string id, string[] idArray)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> result__;
                    try
                    {
                        checkTwowayOnly__(__levelUpFormationBuff_name);
                        result__ = begin_levelUpFormationBuff(id, idArray);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff>(this, __levelUpFormationBuff_name, levelUpFormationBuff_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool levelUpFormationBuff_async(com.XSanGo.Protocol.AMI_Item_levelUpFormationBuff cb__, string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff> result__;
                    try
                    {
                        checkTwowayOnly__(__levelUpFormationBuff_name);
                        result__ = begin_levelUpFormationBuff(id, idArray, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_levelUpFormationBuff>(this, __levelUpFormationBuff_name, levelUpFormationBuff_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> begin_sale(string id, int count)
                {
                    return begin_sale(id, count, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> begin_sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_sale(id, count, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_sale(string id, int count, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_sale(id, count, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_sale(id, count, ctx__, true, cb__, cookie__);
                }

                private const string __sale_name = "sale";

                public void end_sale(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __sale_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> begin_sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__sale_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_sale> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_sale>(this, __sale_name, sale_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__sale_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(id);
                        os__.writeInt(count);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void sale_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Item_sale cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_sale(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool sale_async(com.XSanGo.Protocol.AMI_Item_sale cb__, string id, int count)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> result__;
                    try
                    {
                        checkTwowayOnly__(__sale_name);
                        result__ = begin_sale(id, count);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_sale>(this, __sale_name, sale_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool sale_async(com.XSanGo.Protocol.AMI_Item_sale cb__, string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_sale> result__;
                    try
                    {
                        checkTwowayOnly__(__sale_name);
                        result__ = begin_sale(id, count, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_sale>(this, __sale_name, sale_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> begin_useChestItem(string id, int count)
                {
                    return begin_useChestItem(id, count, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> begin_useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_useChestItem(id, count, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_useChestItem(string id, int count, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_useChestItem(id, count, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_useChestItem(id, count, ctx__, true, cb__, cookie__);
                }

                private const string __useChestItem_name = "useChestItem";

                public com.XSanGo.Protocol.ItemView[] end_useChestItem(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __useChestItem_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.ItemView[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> begin_useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__useChestItem_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useChestItem> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useChestItem>(this, __useChestItem_name, useChestItem_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__useChestItem_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(id);
                        os__.writeInt(count);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void useChestItem_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Item_useChestItem cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.ItemView[] ret__;
                    try
                    {
                        ret__ = end_useChestItem(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool useChestItem_async(com.XSanGo.Protocol.AMI_Item_useChestItem cb__, string id, int count)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> result__;
                    try
                    {
                        checkTwowayOnly__(__useChestItem_name);
                        result__ = begin_useChestItem(id, count);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useChestItem>(this, __useChestItem_name, useChestItem_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool useChestItem_async(com.XSanGo.Protocol.AMI_Item_useChestItem cb__, string id, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useChestItem> result__;
                    try
                    {
                        checkTwowayOnly__(__useChestItem_name);
                        result__ = begin_useChestItem(id, count, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useChestItem>(this, __useChestItem_name, useChestItem_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> begin_useItem(string id, int count, string @params)
                {
                    return begin_useItem(id, count, @params, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> begin_useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_useItem(id, count, @params, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_useItem(string id, int count, string @params, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_useItem(id, count, @params, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_useItem(id, count, @params, ctx__, true, cb__, cookie__);
                }

                private const string __useItem_name = "useItem";

                public void end_useItem(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __useItem_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> begin_useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__useItem_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useItem> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useItem>(this, __useItem_name, useItem_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__useItem_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(id);
                        os__.writeInt(count);
                        os__.writeString(@params);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void useItem_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Item_useItem cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_useItem(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool useItem_async(com.XSanGo.Protocol.AMI_Item_useItem cb__, string id, int count, string @params)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> result__;
                    try
                    {
                        checkTwowayOnly__(__useItem_name);
                        result__ = begin_useItem(id, count, @params);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useItem>(this, __useItem_name, useItem_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool useItem_async(com.XSanGo.Protocol.AMI_Item_useItem cb__, string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Item_useItem> result__;
                    try
                    {
                        checkTwowayOnly__(__useItem_name);
                        result__ = begin_useItem(id, count, @params, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Item_useItem>(this, __useItem_name, useItem_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static ItemPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    ItemPrx r = b as ItemPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        ItemPrxHelper h = new ItemPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static ItemPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    ItemPrx r = b as ItemPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        ItemPrxHelper h = new ItemPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static ItemPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            ItemPrxHelper h = new ItemPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static ItemPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            ItemPrxHelper h = new ItemPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static ItemPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    ItemPrx r = b as ItemPrx;
                    if(r == null)
                    {
                        ItemPrxHelper h = new ItemPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static ItemPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    ItemPrxHelper h = new ItemPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Item"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new ItemDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new ItemDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, ItemPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static ItemPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        ItemPrxHelper result = new ItemPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface ItemDel_ : Ice.ObjectDel_
            {
                com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ItemDelM_ : Ice.ObjectDelM_, ItemDel_
            {
                public com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("levelUpFormationBuff", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(id);
                            com.XSanGo.Protocol.StringSeqHelper.write(os__, idArray);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.ItemView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.ItemView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("sale", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(id);
                            os__.writeInt(count);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("useChestItem", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(id);
                            os__.writeInt(count);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.ItemView[] ret__;
                            ret__ = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("useItem", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(id);
                            os__.writeInt(count);
                            os__.writeString(@params);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ItemDelD_ : Ice.ObjectDelD_, ItemDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "levelUpFormationBuff", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.ItemView result__ = new com.XSanGo.Protocol.ItemView();
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Item servant__ = null;
                        try
                        {
                            servant__ = (Item)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.levelUpFormationBuff(id, idArray, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void sale(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "sale", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Item servant__ = null;
                        try
                        {
                            servant__ = (Item)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.sale(id, count, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "useChestItem", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.ItemView[] result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Item servant__ = null;
                        try
                        {
                            servant__ = (Item)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.useChestItem(id, count, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void useItem(string id, int count, string @params, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "useItem", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Item servant__ = null;
                        try
                        {
                            servant__ = (Item)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.useItem(id, count, @params, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class ItemDisp_ : Ice.ObjectImpl, Item
            {
                #region Slice operations

                public com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray)
                {
                    return levelUpFormationBuff(id, idArray, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.ItemView levelUpFormationBuff(string id, string[] idArray, Ice.Current current__);

                public void sale(string id, int count)
                {
                    sale(id, count, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void sale(string id, int count, Ice.Current current__);

                public void useItem(string id, int count, string @params)
                {
                    useItem(id, count, @params, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void useItem(string id, int count, string @params, Ice.Current current__);

                public com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count)
                {
                    return useChestItem(id, count, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.ItemView[] useChestItem(string id, int count, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Item"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus levelUpFormationBuff___(Item obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string id;
                    string[] idArray;
                    id = is__.readString();
                    idArray = com.XSanGo.Protocol.StringSeqHelper.read(is__);
                    inS__.endReadParams();
                    try
                    {
                        com.XSanGo.Protocol.ItemView ret__ = obj__.levelUpFormationBuff(id, idArray, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(ret__ == null)
                        {
                            com.XSanGo.Protocol.ItemView tmp__ = new com.XSanGo.Protocol.ItemView();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            ret__.write__(os__);
                        }
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus sale___(Item obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string id;
                    int count;
                    id = is__.readString();
                    count = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        obj__.sale(id, count, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus useItem___(Item obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string id;
                    int count;
                    string @params;
                    id = is__.readString();
                    count = is__.readInt();
                    @params = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.useItem(id, count, @params, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus useChestItem___(Item obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string id;
                    int count;
                    id = is__.readString();
                    count = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        com.XSanGo.Protocol.ItemView[] ret__ = obj__.useChestItem(id, count, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                private static string[] all__ =
                {
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "levelUpFormationBuff",
                    "sale",
                    "useChestItem",
                    "useItem"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return levelUpFormationBuff___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return sale___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return useChestItem___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return useItem___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Item_levelUpFormationBuff : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.ItemView ret__);

                public void response__(com.XSanGo.Protocol.ItemView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Item_sale : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Item_useItem : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Item_useChestItem : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.ItemView[] ret__);

                public void response__(com.XSanGo.Protocol.ItemView[] ret__)
                {
                    ice_response(ret__);
                }
            }
        }
    }
}
