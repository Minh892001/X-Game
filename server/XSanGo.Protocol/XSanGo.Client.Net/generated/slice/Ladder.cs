// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Ladder.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LadderReport : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string id;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string name;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string icon;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vipLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int levelChange;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int starChange;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int state;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public long reportTime;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderReport()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderReport(string id, string name, string icon, int vipLevel, int ladderLevel, int levelChange, int starChange, int state, long reportTime)
                {
                    this.id = id;
                    this.name = name;
                    this.icon = icon;
                    this.vipLevel = vipLevel;
                    this.ladderLevel = ladderLevel;
                    this.levelChange = levelChange;
                    this.starChange = starChange;
                    this.state = state;
                    this.reportTime = reportTime;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LadderReport");
                    IceInternal.HashUtil.hashAdd(ref h__, id);
                    IceInternal.HashUtil.hashAdd(ref h__, name);
                    IceInternal.HashUtil.hashAdd(ref h__, icon);
                    IceInternal.HashUtil.hashAdd(ref h__, vipLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, levelChange);
                    IceInternal.HashUtil.hashAdd(ref h__, starChange);
                    IceInternal.HashUtil.hashAdd(ref h__, state);
                    IceInternal.HashUtil.hashAdd(ref h__, reportTime);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LadderReport o__ = (LadderReport)other__;
                    if(id == null)
                    {
                        if(o__.id != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!id.Equals(o__.id))
                        {
                            return false;
                        }
                    }
                    if(name == null)
                    {
                        if(o__.name != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!name.Equals(o__.name))
                        {
                            return false;
                        }
                    }
                    if(icon == null)
                    {
                        if(o__.icon != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!icon.Equals(o__.icon))
                        {
                            return false;
                        }
                    }
                    if(!vipLevel.Equals(o__.vipLevel))
                    {
                        return false;
                    }
                    if(!ladderLevel.Equals(o__.ladderLevel))
                    {
                        return false;
                    }
                    if(!levelChange.Equals(o__.levelChange))
                    {
                        return false;
                    }
                    if(!starChange.Equals(o__.starChange))
                    {
                        return false;
                    }
                    if(!state.Equals(o__.state))
                    {
                        return false;
                    }
                    if(!reportTime.Equals(o__.reportTime))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LadderReport lhs__, LadderReport rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LadderReport lhs__, LadderReport rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(id);
                    os__.writeString(name);
                    os__.writeString(icon);
                    os__.writeInt(vipLevel);
                    os__.writeInt(ladderLevel);
                    os__.writeInt(levelChange);
                    os__.writeInt(starChange);
                    os__.writeInt(state);
                    os__.writeLong(reportTime);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    id = is__.readString();
                    name = is__.readString();
                    icon = is__.readString();
                    vipLevel = is__.readInt();
                    ladderLevel = is__.readInt();
                    levelChange = is__.readInt();
                    starChange = is__.readInt();
                    state = is__.readInt();
                    reportTime = is__.readLong();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LadderView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int challengeRemain;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int challengeBuyNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string guardId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string rewardStr;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int remainDate;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int rankNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.LadderReport[] reportList;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderView(int ladderLevel, int ladderStar, int challengeRemain, int challengeBuyNum, string guardId, string rewardStr, int remainDate, int rankNum, com.XSanGo.Protocol.LadderReport[] reportList)
                {
                    this.ladderLevel = ladderLevel;
                    this.ladderStar = ladderStar;
                    this.challengeRemain = challengeRemain;
                    this.challengeBuyNum = challengeBuyNum;
                    this.guardId = guardId;
                    this.rewardStr = rewardStr;
                    this.remainDate = remainDate;
                    this.rankNum = rankNum;
                    this.reportList = reportList;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LadderView");
                    IceInternal.HashUtil.hashAdd(ref h__, ladderLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderStar);
                    IceInternal.HashUtil.hashAdd(ref h__, challengeRemain);
                    IceInternal.HashUtil.hashAdd(ref h__, challengeBuyNum);
                    IceInternal.HashUtil.hashAdd(ref h__, guardId);
                    IceInternal.HashUtil.hashAdd(ref h__, rewardStr);
                    IceInternal.HashUtil.hashAdd(ref h__, remainDate);
                    IceInternal.HashUtil.hashAdd(ref h__, rankNum);
                    IceInternal.HashUtil.hashAdd(ref h__, reportList);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LadderView o__ = (LadderView)other__;
                    if(!ladderLevel.Equals(o__.ladderLevel))
                    {
                        return false;
                    }
                    if(!ladderStar.Equals(o__.ladderStar))
                    {
                        return false;
                    }
                    if(!challengeRemain.Equals(o__.challengeRemain))
                    {
                        return false;
                    }
                    if(!challengeBuyNum.Equals(o__.challengeBuyNum))
                    {
                        return false;
                    }
                    if(guardId == null)
                    {
                        if(o__.guardId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!guardId.Equals(o__.guardId))
                        {
                            return false;
                        }
                    }
                    if(rewardStr == null)
                    {
                        if(o__.rewardStr != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!rewardStr.Equals(o__.rewardStr))
                        {
                            return false;
                        }
                    }
                    if(!remainDate.Equals(o__.remainDate))
                    {
                        return false;
                    }
                    if(!rankNum.Equals(o__.rankNum))
                    {
                        return false;
                    }
                    if(reportList == null)
                    {
                        if(o__.reportList != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(reportList, o__.reportList))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LadderView lhs__, LadderView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LadderView lhs__, LadderView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(ladderLevel);
                    os__.writeInt(ladderStar);
                    os__.writeInt(challengeRemain);
                    os__.writeInt(challengeBuyNum);
                    os__.writeString(guardId);
                    os__.writeString(rewardStr);
                    os__.writeInt(remainDate);
                    os__.writeInt(rankNum);
                    com.XSanGo.Protocol.ReportSeqHelper.write(os__, reportList);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    ladderLevel = is__.readInt();
                    ladderStar = is__.readInt();
                    challengeRemain = is__.readInt();
                    challengeBuyNum = is__.readInt();
                    guardId = is__.readString();
                    rewardStr = is__.readString();
                    remainDate = is__.readInt();
                    rankNum = is__.readInt();
                    reportList = com.XSanGo.Protocol.ReportSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LadderRankListSub : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int rank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string icon;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vipLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string groupName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public long rankTime;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderRankListSub()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderRankListSub(int rank, string roleId, string roleName, string icon, int level, int ladderLevel, int ladderStar, int vipLevel, string groupName, long rankTime)
                {
                    this.rank = rank;
                    this.roleId = roleId;
                    this.roleName = roleName;
                    this.icon = icon;
                    this.level = level;
                    this.ladderLevel = ladderLevel;
                    this.ladderStar = ladderStar;
                    this.vipLevel = vipLevel;
                    this.groupName = groupName;
                    this.rankTime = rankTime;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LadderRankListSub");
                    IceInternal.HashUtil.hashAdd(ref h__, rank);
                    IceInternal.HashUtil.hashAdd(ref h__, roleId);
                    IceInternal.HashUtil.hashAdd(ref h__, roleName);
                    IceInternal.HashUtil.hashAdd(ref h__, icon);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderStar);
                    IceInternal.HashUtil.hashAdd(ref h__, vipLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, groupName);
                    IceInternal.HashUtil.hashAdd(ref h__, rankTime);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LadderRankListSub o__ = (LadderRankListSub)other__;
                    if(!rank.Equals(o__.rank))
                    {
                        return false;
                    }
                    if(roleId == null)
                    {
                        if(o__.roleId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleId.Equals(o__.roleId))
                        {
                            return false;
                        }
                    }
                    if(roleName == null)
                    {
                        if(o__.roleName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleName.Equals(o__.roleName))
                        {
                            return false;
                        }
                    }
                    if(icon == null)
                    {
                        if(o__.icon != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!icon.Equals(o__.icon))
                        {
                            return false;
                        }
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(!ladderLevel.Equals(o__.ladderLevel))
                    {
                        return false;
                    }
                    if(!ladderStar.Equals(o__.ladderStar))
                    {
                        return false;
                    }
                    if(!vipLevel.Equals(o__.vipLevel))
                    {
                        return false;
                    }
                    if(groupName == null)
                    {
                        if(o__.groupName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!groupName.Equals(o__.groupName))
                        {
                            return false;
                        }
                    }
                    if(!rankTime.Equals(o__.rankTime))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LadderRankListSub lhs__, LadderRankListSub rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LadderRankListSub lhs__, LadderRankListSub rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(rank);
                    os__.writeString(roleId);
                    os__.writeString(roleName);
                    os__.writeString(icon);
                    os__.writeInt(level);
                    os__.writeInt(ladderLevel);
                    os__.writeInt(ladderStar);
                    os__.writeInt(vipLevel);
                    os__.writeString(groupName);
                    os__.writeLong(rankTime);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    rank = is__.readInt();
                    roleId = is__.readString();
                    roleName = is__.readString();
                    icon = is__.readString();
                    level = is__.readInt();
                    ladderLevel = is__.readInt();
                    ladderStar = is__.readInt();
                    vipLevel = is__.readInt();
                    groupName = is__.readString();
                    rankTime = is__.readLong();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LadderRankListShow : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.LadderRankListSub[] rankList;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ownRank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string groupName;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderRankListShow()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderRankListShow(com.XSanGo.Protocol.LadderRankListSub[] rankList, int ownRank, int ladderLevel, int ladderStar, string groupName)
                {
                    this.rankList = rankList;
                    this.ownRank = ownRank;
                    this.ladderLevel = ladderLevel;
                    this.ladderStar = ladderStar;
                    this.groupName = groupName;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LadderRankListShow");
                    IceInternal.HashUtil.hashAdd(ref h__, rankList);
                    IceInternal.HashUtil.hashAdd(ref h__, ownRank);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderStar);
                    IceInternal.HashUtil.hashAdd(ref h__, groupName);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LadderRankListShow o__ = (LadderRankListShow)other__;
                    if(rankList == null)
                    {
                        if(o__.rankList != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(rankList, o__.rankList))
                        {
                            return false;
                        }
                    }
                    if(!ownRank.Equals(o__.ownRank))
                    {
                        return false;
                    }
                    if(!ladderLevel.Equals(o__.ladderLevel))
                    {
                        return false;
                    }
                    if(!ladderStar.Equals(o__.ladderStar))
                    {
                        return false;
                    }
                    if(groupName == null)
                    {
                        if(o__.groupName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!groupName.Equals(o__.groupName))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LadderRankListShow lhs__, LadderRankListShow rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LadderRankListShow lhs__, LadderRankListShow rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    com.XSanGo.Protocol.LadderRankListSubSeqHelper.write(os__, rankList);
                    os__.writeInt(ownRank);
                    os__.writeInt(ladderLevel);
                    os__.writeInt(ladderStar);
                    os__.writeString(groupName);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    rankList = com.XSanGo.Protocol.LadderRankListSubSeqHelper.read(is__);
                    ownRank = is__.readInt();
                    ladderLevel = is__.readInt();
                    ladderStar = is__.readInt();
                    groupName = is__.readString();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LadderFightResult : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int fightStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderChangerLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int ladderChangerStar;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string movieId;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderFightResult()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderFightResult(int fightStar, int ladderChangerLevel, int ladderChangerStar, string movieId)
                {
                    this.fightStar = fightStar;
                    this.ladderChangerLevel = ladderChangerLevel;
                    this.ladderChangerStar = ladderChangerStar;
                    this.movieId = movieId;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LadderFightResult");
                    IceInternal.HashUtil.hashAdd(ref h__, fightStar);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderChangerLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, ladderChangerStar);
                    IceInternal.HashUtil.hashAdd(ref h__, movieId);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LadderFightResult o__ = (LadderFightResult)other__;
                    if(!fightStar.Equals(o__.fightStar))
                    {
                        return false;
                    }
                    if(!ladderChangerLevel.Equals(o__.ladderChangerLevel))
                    {
                        return false;
                    }
                    if(!ladderChangerStar.Equals(o__.ladderChangerStar))
                    {
                        return false;
                    }
                    if(movieId == null)
                    {
                        if(o__.movieId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!movieId.Equals(o__.movieId))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LadderFightResult lhs__, LadderFightResult rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LadderFightResult lhs__, LadderFightResult rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(fightStar);
                    os__.writeInt(ladderChangerLevel);
                    os__.writeInt(ladderChangerStar);
                    os__.writeString(movieId);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    fightStar = is__.readInt();
                    ladderChangerLevel = is__.readInt();
                    ladderChangerStar = is__.readInt();
                    movieId = is__.readString();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LadderPvpView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string icon;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vipLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sex;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.PvpOpponentFormationView formationView;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderPvpView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LadderPvpView(string roleId, string roleName, string icon, int vipLevel, int sex, int level, com.XSanGo.Protocol.PvpOpponentFormationView formationView)
                {
                    this.roleId = roleId;
                    this.roleName = roleName;
                    this.icon = icon;
                    this.vipLevel = vipLevel;
                    this.sex = sex;
                    this.level = level;
                    this.formationView = formationView;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LadderPvpView");
                    IceInternal.HashUtil.hashAdd(ref h__, roleId);
                    IceInternal.HashUtil.hashAdd(ref h__, roleName);
                    IceInternal.HashUtil.hashAdd(ref h__, icon);
                    IceInternal.HashUtil.hashAdd(ref h__, vipLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, sex);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, formationView);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LadderPvpView o__ = (LadderPvpView)other__;
                    if(roleId == null)
                    {
                        if(o__.roleId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleId.Equals(o__.roleId))
                        {
                            return false;
                        }
                    }
                    if(roleName == null)
                    {
                        if(o__.roleName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleName.Equals(o__.roleName))
                        {
                            return false;
                        }
                    }
                    if(icon == null)
                    {
                        if(o__.icon != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!icon.Equals(o__.icon))
                        {
                            return false;
                        }
                    }
                    if(!vipLevel.Equals(o__.vipLevel))
                    {
                        return false;
                    }
                    if(!sex.Equals(o__.sex))
                    {
                        return false;
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(formationView == null)
                    {
                        if(o__.formationView != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!formationView.Equals(o__.formationView))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LadderPvpView lhs__, LadderPvpView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LadderPvpView lhs__, LadderPvpView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(roleId);
                    os__.writeString(roleName);
                    os__.writeString(icon);
                    os__.writeInt(vipLevel);
                    os__.writeInt(sex);
                    os__.writeInt(level);
                    if(formationView == null)
                    {
                        com.XSanGo.Protocol.PvpOpponentFormationView tmp__ = new com.XSanGo.Protocol.PvpOpponentFormationView();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        formationView.write__(os__);
                    }
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    roleId = is__.readString();
                    roleName = is__.readString();
                    icon = is__.readString();
                    vipLevel = is__.readInt();
                    sex = is__.readInt();
                    level = is__.readInt();
                    if(formationView == null)
                    {
                        formationView = new com.XSanGo.Protocol.PvpOpponentFormationView();
                    }
                    formationView.read__(is__);
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface Ladder : Ice.Object, LadderOperations_, LadderOperationsNC_
            {
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_selectLadder(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_showRankList(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_saveGurard();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_buyChallenge();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_beginFight(com.XSanGo.Protocol.LadderPvpView ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_endFight(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Ladder_reward();
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface LadderPrx : Ice.ObjectPrx
            {
                string selectLadder();
                string selectLadder(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> begin_selectLadder();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> begin_selectLadder(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_selectLadder(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_selectLadder(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_selectLadder(Ice.AsyncResult r__);

                bool selectLadder_async(com.XSanGo.Protocol.AMI_Ladder_selectLadder cb__);
                bool selectLadder_async(com.XSanGo.Protocol.AMI_Ladder_selectLadder cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string showRankList();
                string showRankList(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> begin_showRankList();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> begin_showRankList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_showRankList(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_showRankList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_showRankList(Ice.AsyncResult r__);

                bool showRankList_async(com.XSanGo.Protocol.AMI_Ladder_showRankList cb__);
                bool showRankList_async(com.XSanGo.Protocol.AMI_Ladder_showRankList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void saveGurard(string guardId);
                void saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> begin_saveGurard(string guardId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> begin_saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_saveGurard(string guardId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_saveGurard(Ice.AsyncResult r__);

                bool saveGurard_async(com.XSanGo.Protocol.AMI_Ladder_saveGurard cb__, string guardId);
                bool saveGurard_async(com.XSanGo.Protocol.AMI_Ladder_saveGurard cb__, string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void buyChallenge();
                void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> begin_buyChallenge();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_buyChallenge(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_buyChallenge(Ice.AsyncResult r__);

                bool buyChallenge_async(com.XSanGo.Protocol.AMI_Ladder_buyChallenge cb__);
                bool buyChallenge_async(com.XSanGo.Protocol.AMI_Ladder_buyChallenge cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.LadderPvpView beginFight(string formationId);
                com.XSanGo.Protocol.LadderPvpView beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> begin_beginFight(string formationId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> begin_beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_beginFight(string formationId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.LadderPvpView end_beginFight(Ice.AsyncResult r__);

                bool beginFight_async(com.XSanGo.Protocol.AMI_Ladder_beginFight cb__, string formationId);
                bool beginFight_async(com.XSanGo.Protocol.AMI_Ladder_beginFight cb__, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string endFight(string rivalId, int resFlag, byte remainHero);
                string endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> begin_endFight(string rivalId, int resFlag, byte remainHero);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> begin_endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_endFight(string rivalId, int resFlag, byte remainHero, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_endFight(Ice.AsyncResult r__);

                bool endFight_async(com.XSanGo.Protocol.AMI_Ladder_endFight cb__, string rivalId, int resFlag, byte remainHero);
                bool endFight_async(com.XSanGo.Protocol.AMI_Ladder_endFight cb__, string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void reward(int rewardId);
                void reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> begin_reward(int rewardId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> begin_reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_reward(int rewardId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_reward(Ice.AsyncResult r__);

                bool reward_async(com.XSanGo.Protocol.AMI_Ladder_reward cb__, int rewardId);
                bool reward_async(com.XSanGo.Protocol.AMI_Ladder_reward cb__, int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface LadderOperations_
            {
                void selectLadder_async(com.XSanGo.Protocol.AMD_Ladder_selectLadder cb__, Ice.Current current__);

                void showRankList_async(com.XSanGo.Protocol.AMD_Ladder_showRankList cb__, Ice.Current current__);

                void saveGurard(string guardId, Ice.Current current__);

                void buyChallenge(Ice.Current current__);

                void beginFight_async(com.XSanGo.Protocol.AMD_Ladder_beginFight cb__, string formationId, Ice.Current current__);

                string endFight(string rivalId, int resFlag, byte remainHero, Ice.Current current__);

                void reward(int rewardId, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface LadderOperationsNC_
            {
                void selectLadder_async(com.XSanGo.Protocol.AMD_Ladder_selectLadder cb__);

                void showRankList_async(com.XSanGo.Protocol.AMD_Ladder_showRankList cb__);

                void saveGurard(string guardId);

                void buyChallenge();

                void beginFight_async(com.XSanGo.Protocol.AMD_Ladder_beginFight cb__, string formationId);

                string endFight(string rivalId, int resFlag, byte remainHero);

                void reward(int rewardId);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ReportSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.LadderReport[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.LadderReport() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.LadderReport[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.LadderReport[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(31);
                        v__ = new com.XSanGo.Protocol.LadderReport[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.LadderReport();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class LadderRankListSubSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.LadderRankListSub[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.LadderRankListSub() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.LadderRankListSub[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.LadderRankListSub[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(32);
                        v__ = new com.XSanGo.Protocol.LadderRankListSub[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.LadderRankListSub();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class LadderPrxHelper : Ice.ObjectPrxHelperBase, LadderPrx
            {
                #region Synchronous operations

                public com.XSanGo.Protocol.LadderPvpView beginFight(string formationId)
                {
                    return beginFight(formationId, null, false);
                }

                public com.XSanGo.Protocol.LadderPvpView beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return beginFight(formationId, context__, true);
                }

                private com.XSanGo.Protocol.LadderPvpView beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __beginFight_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__beginFight_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                return del__.beginFight(formationId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void buyChallenge()
                {
                    buyChallenge(null, false);
                }

                public void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    buyChallenge(context__, true);
                }

                private void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __buyChallenge_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__buyChallenge_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                del__.buyChallenge(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string endFight(string rivalId, int resFlag, byte remainHero)
                {
                    return endFight(rivalId, resFlag, remainHero, null, false);
                }

                public string endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return endFight(rivalId, resFlag, remainHero, context__, true);
                }

                private string endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __endFight_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__endFight_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                return del__.endFight(rivalId, resFlag, remainHero, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void reward(int rewardId)
                {
                    reward(rewardId, null, false);
                }

                public void reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    reward(rewardId, context__, true);
                }

                private void reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __reward_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__reward_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                del__.reward(rewardId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void saveGurard(string guardId)
                {
                    saveGurard(guardId, null, false);
                }

                public void saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    saveGurard(guardId, context__, true);
                }

                private void saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __saveGurard_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__saveGurard_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                del__.saveGurard(guardId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string selectLadder()
                {
                    return selectLadder(null, false);
                }

                public string selectLadder(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return selectLadder(context__, true);
                }

                private string selectLadder(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __selectLadder_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__selectLadder_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                return del__.selectLadder(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string showRankList()
                {
                    return showRankList(null, false);
                }

                public string showRankList(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return showRankList(context__, true);
                }

                private string showRankList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __showRankList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__showRankList_name);
                                delBase__ = getDelegate__(false);
                                LadderDel_ del__ = (LadderDel_)delBase__;
                                return del__.showRankList(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> begin_beginFight(string formationId)
                {
                    return begin_beginFight(formationId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> begin_beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_beginFight(formationId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_beginFight(string formationId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginFight(formationId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_beginFight(formationId, ctx__, true, cb__, cookie__);
                }

                private const string __beginFight_name = "beginFight";

                public com.XSanGo.Protocol.LadderPvpView end_beginFight(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __beginFight_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.LadderPvpView ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.LadderPvpView();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> begin_beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__beginFight_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_beginFight> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_beginFight>(this, __beginFight_name, beginFight_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__beginFight_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(formationId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void beginFight_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_beginFight cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.LadderPvpView ret__;
                    try
                    {
                        ret__ = end_beginFight(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool beginFight_async(com.XSanGo.Protocol.AMI_Ladder_beginFight cb__, string formationId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> result__;
                    try
                    {
                        checkTwowayOnly__(__beginFight_name);
                        result__ = begin_beginFight(formationId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_beginFight>(this, __beginFight_name, beginFight_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool beginFight_async(com.XSanGo.Protocol.AMI_Ladder_beginFight cb__, string formationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_beginFight> result__;
                    try
                    {
                        checkTwowayOnly__(__beginFight_name);
                        result__ = begin_beginFight(formationId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_beginFight>(this, __beginFight_name, beginFight_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> begin_buyChallenge()
                {
                    return begin_buyChallenge(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_buyChallenge(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_buyChallenge(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChallenge(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_buyChallenge(ctx__, true, cb__, cookie__);
                }

                private const string __buyChallenge_name = "buyChallenge";

                public void end_buyChallenge(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __buyChallenge_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> begin_buyChallenge(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__buyChallenge_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_buyChallenge>(this, __buyChallenge_name, buyChallenge_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__buyChallenge_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void buyChallenge_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_buyChallenge cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_buyChallenge(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool buyChallenge_async(com.XSanGo.Protocol.AMI_Ladder_buyChallenge cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChallenge_name);
                        result__ = begin_buyChallenge();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_buyChallenge>(this, __buyChallenge_name, buyChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool buyChallenge_async(com.XSanGo.Protocol.AMI_Ladder_buyChallenge cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_buyChallenge> result__;
                    try
                    {
                        checkTwowayOnly__(__buyChallenge_name);
                        result__ = begin_buyChallenge(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_buyChallenge>(this, __buyChallenge_name, buyChallenge_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> begin_endFight(string rivalId, int resFlag, byte remainHero)
                {
                    return begin_endFight(rivalId, resFlag, remainHero, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> begin_endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_endFight(rivalId, resFlag, remainHero, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_endFight(string rivalId, int resFlag, byte remainHero, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endFight(rivalId, resFlag, remainHero, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_endFight(rivalId, resFlag, remainHero, ctx__, true, cb__, cookie__);
                }

                private const string __endFight_name = "endFight";

                public string end_endFight(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __endFight_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> begin_endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__endFight_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_endFight> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_endFight>(this, __endFight_name, endFight_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__endFight_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(rivalId);
                        os__.writeInt(resFlag);
                        os__.writeByte(remainHero);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void endFight_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_endFight cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_endFight(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool endFight_async(com.XSanGo.Protocol.AMI_Ladder_endFight cb__, string rivalId, int resFlag, byte remainHero)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> result__;
                    try
                    {
                        checkTwowayOnly__(__endFight_name);
                        result__ = begin_endFight(rivalId, resFlag, remainHero);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_endFight>(this, __endFight_name, endFight_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool endFight_async(com.XSanGo.Protocol.AMI_Ladder_endFight cb__, string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_endFight> result__;
                    try
                    {
                        checkTwowayOnly__(__endFight_name);
                        result__ = begin_endFight(rivalId, resFlag, remainHero, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_endFight>(this, __endFight_name, endFight_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> begin_reward(int rewardId)
                {
                    return begin_reward(rewardId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> begin_reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_reward(rewardId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_reward(int rewardId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_reward(rewardId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_reward(rewardId, ctx__, true, cb__, cookie__);
                }

                private const string __reward_name = "reward";

                public void end_reward(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __reward_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> begin_reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__reward_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_reward> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_reward>(this, __reward_name, reward_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__reward_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(rewardId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void reward_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_reward cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_reward(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool reward_async(com.XSanGo.Protocol.AMI_Ladder_reward cb__, int rewardId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> result__;
                    try
                    {
                        checkTwowayOnly__(__reward_name);
                        result__ = begin_reward(rewardId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_reward>(this, __reward_name, reward_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool reward_async(com.XSanGo.Protocol.AMI_Ladder_reward cb__, int rewardId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_reward> result__;
                    try
                    {
                        checkTwowayOnly__(__reward_name);
                        result__ = begin_reward(rewardId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_reward>(this, __reward_name, reward_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> begin_saveGurard(string guardId)
                {
                    return begin_saveGurard(guardId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> begin_saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_saveGurard(guardId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_saveGurard(string guardId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_saveGurard(guardId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_saveGurard(guardId, ctx__, true, cb__, cookie__);
                }

                private const string __saveGurard_name = "saveGurard";

                public void end_saveGurard(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __saveGurard_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> begin_saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__saveGurard_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_saveGurard> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_saveGurard>(this, __saveGurard_name, saveGurard_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__saveGurard_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(guardId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void saveGurard_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_saveGurard cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_saveGurard(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool saveGurard_async(com.XSanGo.Protocol.AMI_Ladder_saveGurard cb__, string guardId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> result__;
                    try
                    {
                        checkTwowayOnly__(__saveGurard_name);
                        result__ = begin_saveGurard(guardId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_saveGurard>(this, __saveGurard_name, saveGurard_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool saveGurard_async(com.XSanGo.Protocol.AMI_Ladder_saveGurard cb__, string guardId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_saveGurard> result__;
                    try
                    {
                        checkTwowayOnly__(__saveGurard_name);
                        result__ = begin_saveGurard(guardId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_saveGurard>(this, __saveGurard_name, saveGurard_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> begin_selectLadder()
                {
                    return begin_selectLadder(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> begin_selectLadder(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_selectLadder(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_selectLadder(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selectLadder(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_selectLadder(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_selectLadder(ctx__, true, cb__, cookie__);
                }

                private const string __selectLadder_name = "selectLadder";

                public string end_selectLadder(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __selectLadder_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> begin_selectLadder(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__selectLadder_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_selectLadder> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_selectLadder>(this, __selectLadder_name, selectLadder_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__selectLadder_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void selectLadder_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_selectLadder cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_selectLadder(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool selectLadder_async(com.XSanGo.Protocol.AMI_Ladder_selectLadder cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> result__;
                    try
                    {
                        checkTwowayOnly__(__selectLadder_name);
                        result__ = begin_selectLadder();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_selectLadder>(this, __selectLadder_name, selectLadder_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool selectLadder_async(com.XSanGo.Protocol.AMI_Ladder_selectLadder cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_selectLadder> result__;
                    try
                    {
                        checkTwowayOnly__(__selectLadder_name);
                        result__ = begin_selectLadder(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_selectLadder>(this, __selectLadder_name, selectLadder_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> begin_showRankList()
                {
                    return begin_showRankList(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> begin_showRankList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_showRankList(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_showRankList(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showRankList(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_showRankList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showRankList(ctx__, true, cb__, cookie__);
                }

                private const string __showRankList_name = "showRankList";

                public string end_showRankList(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __showRankList_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> begin_showRankList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__showRankList_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_showRankList> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_showRankList>(this, __showRankList_name, showRankList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__showRankList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void showRankList_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Ladder_showRankList cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_showRankList(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool showRankList_async(com.XSanGo.Protocol.AMI_Ladder_showRankList cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> result__;
                    try
                    {
                        checkTwowayOnly__(__showRankList_name);
                        result__ = begin_showRankList();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_showRankList>(this, __showRankList_name, showRankList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool showRankList_async(com.XSanGo.Protocol.AMI_Ladder_showRankList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Ladder_showRankList> result__;
                    try
                    {
                        checkTwowayOnly__(__showRankList_name);
                        result__ = begin_showRankList(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Ladder_showRankList>(this, __showRankList_name, showRankList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static LadderPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    LadderPrx r = b as LadderPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        LadderPrxHelper h = new LadderPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static LadderPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    LadderPrx r = b as LadderPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        LadderPrxHelper h = new LadderPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static LadderPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            LadderPrxHelper h = new LadderPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static LadderPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            LadderPrxHelper h = new LadderPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static LadderPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    LadderPrx r = b as LadderPrx;
                    if(r == null)
                    {
                        LadderPrxHelper h = new LadderPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static LadderPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    LadderPrxHelper h = new LadderPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Ladder"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new LadderDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new LadderDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, LadderPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static LadderPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        LadderPrxHelper result = new LadderPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface LadderDel_ : Ice.ObjectDel_
            {
                string selectLadder(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string showRankList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.LadderPvpView beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class LadderDelM_ : Ice.ObjectDelM_, LadderDel_
            {
                public com.XSanGo.Protocol.LadderPvpView beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("beginFight", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(formationId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.LadderPvpView ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.LadderPvpView();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("buyChallenge", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("endFight", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(rivalId);
                            os__.writeInt(resFlag);
                            os__.writeByte(remainHero);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("reward", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(rewardId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("saveGurard", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(guardId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string selectLadder(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("selectLadder", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string showRankList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("showRankList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class LadderDelD_ : Ice.ObjectDelD_, LadderDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.LadderPvpView beginFight(string formationId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void buyChallenge(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "buyChallenge", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Ladder servant__ = null;
                        try
                        {
                            servant__ = (Ladder)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.buyChallenge(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                    {
                        throw;
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string endFight(string rivalId, int resFlag, byte remainHero, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "endFight", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Ladder servant__ = null;
                        try
                        {
                            servant__ = (Ladder)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.endFight(rivalId, resFlag, remainHero, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void reward(int rewardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "reward", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Ladder servant__ = null;
                        try
                        {
                            servant__ = (Ladder)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.reward(rewardId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void saveGurard(string guardId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "saveGurard", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Ladder servant__ = null;
                        try
                        {
                            servant__ = (Ladder)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.saveGurard(guardId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string selectLadder(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string showRankList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class LadderDisp_ : Ice.ObjectImpl, Ladder
            {
                #region Slice operations

                public void selectLadder_async(com.XSanGo.Protocol.AMD_Ladder_selectLadder cb__)
                {
                    selectLadder_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void selectLadder_async(com.XSanGo.Protocol.AMD_Ladder_selectLadder cb__, Ice.Current current__);

                public void showRankList_async(com.XSanGo.Protocol.AMD_Ladder_showRankList cb__)
                {
                    showRankList_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void showRankList_async(com.XSanGo.Protocol.AMD_Ladder_showRankList cb__, Ice.Current current__);

                public void saveGurard(string guardId)
                {
                    saveGurard(guardId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void saveGurard(string guardId, Ice.Current current__);

                public void buyChallenge()
                {
                    buyChallenge(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void buyChallenge(Ice.Current current__);

                public void beginFight_async(com.XSanGo.Protocol.AMD_Ladder_beginFight cb__, string formationId)
                {
                    beginFight_async(cb__, formationId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void beginFight_async(com.XSanGo.Protocol.AMD_Ladder_beginFight cb__, string formationId, Ice.Current current__);

                public string endFight(string rivalId, int resFlag, byte remainHero)
                {
                    return endFight(rivalId, resFlag, remainHero, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string endFight(string rivalId, int resFlag, byte remainHero, Ice.Current current__);

                public void reward(int rewardId)
                {
                    reward(rewardId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void reward(int rewardId, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Ladder"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus selectLadder___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Ladder_selectLadder cb__ = new _AMD_Ladder_selectLadder(inS__);
                    try
                    {
                        obj__.selectLadder_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus showRankList___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Ladder_showRankList cb__ = new _AMD_Ladder_showRankList(inS__);
                    try
                    {
                        obj__.showRankList_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus saveGurard___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string guardId;
                    guardId = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.saveGurard(guardId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus buyChallenge___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.buyChallenge(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughMoneyException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus beginFight___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string formationId;
                    formationId = is__.readString();
                    inS__.endReadParams();
                    AMD_Ladder_beginFight cb__ = new _AMD_Ladder_beginFight(inS__);
                    try
                    {
                        obj__.beginFight_async(cb__, formationId, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus endFight___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string rivalId;
                    int resFlag;
                    byte remainHero;
                    rivalId = is__.readString();
                    resFlag = is__.readInt();
                    remainHero = is__.readByte();
                    inS__.endReadParams();
                    try
                    {
                        string ret__ = obj__.endFight(rivalId, resFlag, remainHero, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus reward___(Ladder obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int rewardId;
                    rewardId = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        obj__.reward(rewardId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                private static string[] all__ =
                {
                    "beginFight",
                    "buyChallenge",
                    "endFight",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "reward",
                    "saveGurard",
                    "selectLadder",
                    "showRankList"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return beginFight___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return buyChallenge___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return endFight___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return reward___(this, inS__, current__);
                        }
                        case 8:
                        {
                            return saveGurard___(this, inS__, current__);
                        }
                        case 9:
                        {
                            return selectLadder___(this, inS__, current__);
                        }
                        case 10:
                        {
                            return showRankList___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_selectLadder : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Ladder_selectLadder : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Ladder_selectLadder : IceInternal.IncomingAsync, AMD_Ladder_selectLadder
            {
                public _AMD_Ladder_selectLadder(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_showRankList : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Ladder_showRankList : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Ladder_showRankList : IceInternal.IncomingAsync, AMD_Ladder_showRankList
            {
                public _AMD_Ladder_showRankList(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_saveGurard : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_buyChallenge : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_beginFight : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.LadderPvpView ret__);

                public void response__(com.XSanGo.Protocol.LadderPvpView ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Ladder_beginFight : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.LadderPvpView ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Ladder_beginFight : IceInternal.IncomingAsync, AMD_Ladder_beginFight
            {
                public _AMD_Ladder_beginFight(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.LadderPvpView ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.LadderPvpView tmp__ = new com.XSanGo.Protocol.LadderPvpView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_endFight : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Ladder_reward : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }
        }
    }
}
