// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Role.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class ActivityAnnounceView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int id;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool read;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string firstTitle;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string secondTitle;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string content;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ActivityAnnounceView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ActivityAnnounceView(int id, bool read, string firstTitle, string secondTitle, string content)
                {
                    this.id = id;
                    this.read = read;
                    this.firstTitle = firstTitle;
                    this.secondTitle = secondTitle;
                    this.content = content;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ActivityAnnounceView");
                    IceInternal.HashUtil.hashAdd(ref h__, id);
                    IceInternal.HashUtil.hashAdd(ref h__, read);
                    IceInternal.HashUtil.hashAdd(ref h__, firstTitle);
                    IceInternal.HashUtil.hashAdd(ref h__, secondTitle);
                    IceInternal.HashUtil.hashAdd(ref h__, content);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    ActivityAnnounceView o__ = (ActivityAnnounceView)other__;
                    if(!id.Equals(o__.id))
                    {
                        return false;
                    }
                    if(!read.Equals(o__.read))
                    {
                        return false;
                    }
                    if(firstTitle == null)
                    {
                        if(o__.firstTitle != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!firstTitle.Equals(o__.firstTitle))
                        {
                            return false;
                        }
                    }
                    if(secondTitle == null)
                    {
                        if(o__.secondTitle != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!secondTitle.Equals(o__.secondTitle))
                        {
                            return false;
                        }
                    }
                    if(content == null)
                    {
                        if(o__.content != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!content.Equals(o__.content))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ActivityAnnounceView lhs__, ActivityAnnounceView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ActivityAnnounceView lhs__, ActivityAnnounceView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeInt(id);
                    os__.writeBool(read);
                    os__.writeString(firstTitle);
                    os__.writeString(secondTitle);
                    os__.writeString(content);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    id = is__.readInt();
                    read = is__.readBool();
                    firstTitle = is__.readString();
                    secondTitle = is__.readString();
                    content = is__.readString();
                }

                #endregion
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public enum LoadingRankType
            {
                LoadingRankArean,
                LoadingLadder,
                LoadingRankworship,
                LoadingRankFame,
                LoadingRankCombat,
                LoadingRankFaction
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LoadingRankSub : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string roleName;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string icon;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vipLevel;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string showThing;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LoadingRankSub()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LoadingRankSub(string roleId, string roleName, string icon, int vipLevel, string showThing)
                {
                    this.roleId = roleId;
                    this.roleName = roleName;
                    this.icon = icon;
                    this.vipLevel = vipLevel;
                    this.showThing = showThing;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LoadingRankSub");
                    IceInternal.HashUtil.hashAdd(ref h__, roleId);
                    IceInternal.HashUtil.hashAdd(ref h__, roleName);
                    IceInternal.HashUtil.hashAdd(ref h__, icon);
                    IceInternal.HashUtil.hashAdd(ref h__, vipLevel);
                    IceInternal.HashUtil.hashAdd(ref h__, showThing);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LoadingRankSub o__ = (LoadingRankSub)other__;
                    if(roleId == null)
                    {
                        if(o__.roleId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleId.Equals(o__.roleId))
                        {
                            return false;
                        }
                    }
                    if(roleName == null)
                    {
                        if(o__.roleName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!roleName.Equals(o__.roleName))
                        {
                            return false;
                        }
                    }
                    if(icon == null)
                    {
                        if(o__.icon != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!icon.Equals(o__.icon))
                        {
                            return false;
                        }
                    }
                    if(!vipLevel.Equals(o__.vipLevel))
                    {
                        return false;
                    }
                    if(showThing == null)
                    {
                        if(o__.showThing != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!showThing.Equals(o__.showThing))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LoadingRankSub lhs__, LoadingRankSub rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LoadingRankSub lhs__, LoadingRankSub rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeString(roleId);
                    os__.writeString(roleName);
                    os__.writeString(icon);
                    os__.writeInt(vipLevel);
                    os__.writeString(showThing);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    roleId = is__.readString();
                    roleName = is__.readString();
                    icon = is__.readString();
                    vipLevel = is__.readInt();
                    showThing = is__.readString();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class LoadingRankList : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.LoadingRankType type;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.LoadingRankSub[] LoadingRank;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LoadingRankList()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public LoadingRankList(com.XSanGo.Protocol.LoadingRankType type, com.XSanGo.Protocol.LoadingRankSub[] LoadingRank)
                {
                    this.type = type;
                    this.LoadingRank = LoadingRank;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::LoadingRankList");
                    IceInternal.HashUtil.hashAdd(ref h__, type);
                    IceInternal.HashUtil.hashAdd(ref h__, LoadingRank);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    LoadingRankList o__ = (LoadingRankList)other__;
                    if(!type.Equals(o__.type))
                    {
                        return false;
                    }
                    if(LoadingRank == null)
                    {
                        if(o__.LoadingRank != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(LoadingRank, o__.LoadingRank))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(LoadingRankList lhs__, LoadingRankList rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(LoadingRankList lhs__, LoadingRankList rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeEnum((int)type, 5);
                    com.XSanGo.Protocol.LoadingRankSeqHelper.write(os__, LoadingRank);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    type = (com.XSanGo.Protocol.LoadingRankType)is__.readEnum(5);
                    LoadingRank = com.XSanGo.Protocol.LoadingRankSeqHelper.read(is__);
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial struct ExtendObject
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public long auctionMoney;

                #endregion

                #region Constructor

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public ExtendObject(long auctionMoney)
                {
                    this.auctionMoney = auctionMoney;
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::ExtendObject");
                    IceInternal.HashUtil.hashAdd(ref h__, auctionMoney);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(!(other__ is ExtendObject))
                    {
                        return false;
                    }
                    ExtendObject o__ = (ExtendObject)other__;
                    if(!auctionMoney.Equals(o__.auctionMoney))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(ExtendObject lhs__, ExtendObject rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(ExtendObject lhs__, ExtendObject rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    os__.writeLong(auctionMoney);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    auctionMoney = is__.readLong();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class RoleView : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int[] completedGuides;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int sex;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string headImg;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ActivityAnnounceView[] activities;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string id;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string supportId;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string name;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public short level;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vip;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int topupYuanbao;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int exp;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int levelupExp;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public short rank;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int remainSalaryTimes;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int compositeCombat;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int yuanbao;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public long jinbi;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.HeroView[] heroList;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.ItemView[] items;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.FormationView[] formations;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vit;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int vitNum;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool hasFaction;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool hasFirstCharge;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string extend;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public RoleView()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public RoleView(int[] completedGuides, int sex, string headImg, com.XSanGo.Protocol.ActivityAnnounceView[] activities, string id, string supportId, string name, short level, int vip, int topupYuanbao, int exp, int levelupExp, short rank, int remainSalaryTimes, int compositeCombat, int yuanbao, long jinbi, com.XSanGo.Protocol.HeroView[] heroList, com.XSanGo.Protocol.ItemView[] items, com.XSanGo.Protocol.FormationView[] formations, int vit, int vitNum, bool hasFaction, bool hasFirstCharge, string extend)
                {
                    this.completedGuides = completedGuides;
                    this.sex = sex;
                    this.headImg = headImg;
                    this.activities = activities;
                    this.id = id;
                    this.supportId = supportId;
                    this.name = name;
                    this.level = level;
                    this.vip = vip;
                    this.topupYuanbao = topupYuanbao;
                    this.exp = exp;
                    this.levelupExp = levelupExp;
                    this.rank = rank;
                    this.remainSalaryTimes = remainSalaryTimes;
                    this.compositeCombat = compositeCombat;
                    this.yuanbao = yuanbao;
                    this.jinbi = jinbi;
                    this.heroList = heroList;
                    this.items = items;
                    this.formations = formations;
                    this.vit = vit;
                    this.vitNum = vitNum;
                    this.hasFaction = hasFaction;
                    this.hasFirstCharge = hasFirstCharge;
                    this.extend = extend;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::RoleView");
                    IceInternal.HashUtil.hashAdd(ref h__, completedGuides);
                    IceInternal.HashUtil.hashAdd(ref h__, sex);
                    IceInternal.HashUtil.hashAdd(ref h__, headImg);
                    IceInternal.HashUtil.hashAdd(ref h__, activities);
                    IceInternal.HashUtil.hashAdd(ref h__, id);
                    IceInternal.HashUtil.hashAdd(ref h__, supportId);
                    IceInternal.HashUtil.hashAdd(ref h__, name);
                    IceInternal.HashUtil.hashAdd(ref h__, level);
                    IceInternal.HashUtil.hashAdd(ref h__, vip);
                    IceInternal.HashUtil.hashAdd(ref h__, topupYuanbao);
                    IceInternal.HashUtil.hashAdd(ref h__, exp);
                    IceInternal.HashUtil.hashAdd(ref h__, levelupExp);
                    IceInternal.HashUtil.hashAdd(ref h__, rank);
                    IceInternal.HashUtil.hashAdd(ref h__, remainSalaryTimes);
                    IceInternal.HashUtil.hashAdd(ref h__, compositeCombat);
                    IceInternal.HashUtil.hashAdd(ref h__, yuanbao);
                    IceInternal.HashUtil.hashAdd(ref h__, jinbi);
                    IceInternal.HashUtil.hashAdd(ref h__, heroList);
                    IceInternal.HashUtil.hashAdd(ref h__, items);
                    IceInternal.HashUtil.hashAdd(ref h__, formations);
                    IceInternal.HashUtil.hashAdd(ref h__, vit);
                    IceInternal.HashUtil.hashAdd(ref h__, vitNum);
                    IceInternal.HashUtil.hashAdd(ref h__, hasFaction);
                    IceInternal.HashUtil.hashAdd(ref h__, hasFirstCharge);
                    IceInternal.HashUtil.hashAdd(ref h__, extend);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    RoleView o__ = (RoleView)other__;
                    if(completedGuides == null)
                    {
                        if(o__.completedGuides != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(completedGuides, o__.completedGuides))
                        {
                            return false;
                        }
                    }
                    if(!sex.Equals(o__.sex))
                    {
                        return false;
                    }
                    if(headImg == null)
                    {
                        if(o__.headImg != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!headImg.Equals(o__.headImg))
                        {
                            return false;
                        }
                    }
                    if(activities == null)
                    {
                        if(o__.activities != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(activities, o__.activities))
                        {
                            return false;
                        }
                    }
                    if(id == null)
                    {
                        if(o__.id != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!id.Equals(o__.id))
                        {
                            return false;
                        }
                    }
                    if(supportId == null)
                    {
                        if(o__.supportId != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!supportId.Equals(o__.supportId))
                        {
                            return false;
                        }
                    }
                    if(name == null)
                    {
                        if(o__.name != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!name.Equals(o__.name))
                        {
                            return false;
                        }
                    }
                    if(!level.Equals(o__.level))
                    {
                        return false;
                    }
                    if(!vip.Equals(o__.vip))
                    {
                        return false;
                    }
                    if(!topupYuanbao.Equals(o__.topupYuanbao))
                    {
                        return false;
                    }
                    if(!exp.Equals(o__.exp))
                    {
                        return false;
                    }
                    if(!levelupExp.Equals(o__.levelupExp))
                    {
                        return false;
                    }
                    if(!rank.Equals(o__.rank))
                    {
                        return false;
                    }
                    if(!remainSalaryTimes.Equals(o__.remainSalaryTimes))
                    {
                        return false;
                    }
                    if(!compositeCombat.Equals(o__.compositeCombat))
                    {
                        return false;
                    }
                    if(!yuanbao.Equals(o__.yuanbao))
                    {
                        return false;
                    }
                    if(!jinbi.Equals(o__.jinbi))
                    {
                        return false;
                    }
                    if(heroList == null)
                    {
                        if(o__.heroList != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(heroList, o__.heroList))
                        {
                            return false;
                        }
                    }
                    if(items == null)
                    {
                        if(o__.items != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(items, o__.items))
                        {
                            return false;
                        }
                    }
                    if(formations == null)
                    {
                        if(o__.formations != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(formations, o__.formations))
                        {
                            return false;
                        }
                    }
                    if(!vit.Equals(o__.vit))
                    {
                        return false;
                    }
                    if(!vitNum.Equals(o__.vitNum))
                    {
                        return false;
                    }
                    if(!hasFaction.Equals(o__.hasFaction))
                    {
                        return false;
                    }
                    if(!hasFirstCharge.Equals(o__.hasFirstCharge))
                    {
                        return false;
                    }
                    if(extend == null)
                    {
                        if(o__.extend != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!extend.Equals(o__.extend))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(RoleView lhs__, RoleView rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(RoleView lhs__, RoleView rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    com.XSanGo.Protocol.IntSeqHelper.write(os__, completedGuides);
                    os__.writeInt(sex);
                    os__.writeString(headImg);
                    com.XSanGo.Protocol.ActivityAnnounceViewSeqHelper.write(os__, activities);
                    os__.writeString(id);
                    os__.writeString(supportId);
                    os__.writeString(name);
                    os__.writeShort(level);
                    os__.writeInt(vip);
                    os__.writeInt(topupYuanbao);
                    os__.writeInt(exp);
                    os__.writeInt(levelupExp);
                    os__.writeShort(rank);
                    os__.writeInt(remainSalaryTimes);
                    os__.writeInt(compositeCombat);
                    os__.writeInt(yuanbao);
                    os__.writeLong(jinbi);
                    com.XSanGo.Protocol.HeroViewSeqHelper.write(os__, heroList);
                    com.XSanGo.Protocol.ItemViewSeqHelper.write(os__, items);
                    com.XSanGo.Protocol.FormationViewSeqHelper.write(os__, formations);
                    os__.writeInt(vit);
                    os__.writeInt(vitNum);
                    os__.writeBool(hasFaction);
                    os__.writeBool(hasFirstCharge);
                    os__.writeString(extend);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    completedGuides = com.XSanGo.Protocol.IntSeqHelper.read(is__);
                    sex = is__.readInt();
                    headImg = is__.readString();
                    activities = com.XSanGo.Protocol.ActivityAnnounceViewSeqHelper.read(is__);
                    id = is__.readString();
                    supportId = is__.readString();
                    name = is__.readString();
                    level = is__.readShort();
                    vip = is__.readInt();
                    topupYuanbao = is__.readInt();
                    exp = is__.readInt();
                    levelupExp = is__.readInt();
                    rank = is__.readShort();
                    remainSalaryTimes = is__.readInt();
                    compositeCombat = is__.readInt();
                    yuanbao = is__.readInt();
                    jinbi = is__.readLong();
                    heroList = com.XSanGo.Protocol.HeroViewSeqHelper.read(is__);
                    items = com.XSanGo.Protocol.ItemViewSeqHelper.read(is__);
                    formations = com.XSanGo.Protocol.FormationViewSeqHelper.read(is__);
                    vit = is__.readInt();
                    vitNum = is__.readInt();
                    hasFaction = is__.readBool();
                    hasFirstCharge = is__.readBool();
                    extend = is__.readString();
                }

                #endregion
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial class RoleViewForGM : _System.ICloneable
            {
                #region Slice data members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.RoleView baseView;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.IntString[] copyProgresses;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public com.XSanGo.Protocol.AccountView account;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string createTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public string lastLoginTime;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int expForBeiFa;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public int arenaMoney;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public long moneyForAuction;

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public bool online;

                #endregion

                #region Constructors

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public RoleViewForGM()
                {
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public RoleViewForGM(com.XSanGo.Protocol.RoleView baseView, com.XSanGo.Protocol.IntString[] copyProgresses, com.XSanGo.Protocol.AccountView account, string createTime, string lastLoginTime, int expForBeiFa, int arenaMoney, long moneyForAuction, bool online)
                {
                    this.baseView = baseView;
                    this.copyProgresses = copyProgresses;
                    this.account = account;
                    this.createTime = createTime;
                    this.lastLoginTime = lastLoginTime;
                    this.expForBeiFa = expForBeiFa;
                    this.arenaMoney = arenaMoney;
                    this.moneyForAuction = moneyForAuction;
                    this.online = online;
                }

                #endregion

                #region ICloneable members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override int GetHashCode()
                {
                    int h__ = 5381;
                    IceInternal.HashUtil.hashAdd(ref h__, "::com::XSanGo::Protocol::RoleViewForGM");
                    IceInternal.HashUtil.hashAdd(ref h__, baseView);
                    IceInternal.HashUtil.hashAdd(ref h__, copyProgresses);
                    IceInternal.HashUtil.hashAdd(ref h__, account);
                    IceInternal.HashUtil.hashAdd(ref h__, createTime);
                    IceInternal.HashUtil.hashAdd(ref h__, lastLoginTime);
                    IceInternal.HashUtil.hashAdd(ref h__, expForBeiFa);
                    IceInternal.HashUtil.hashAdd(ref h__, arenaMoney);
                    IceInternal.HashUtil.hashAdd(ref h__, moneyForAuction);
                    IceInternal.HashUtil.hashAdd(ref h__, online);
                    return h__;
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public override bool Equals(object other__)
                {
                    if(object.ReferenceEquals(this, other__))
                    {
                        return true;
                    }
                    if(other__ == null)
                    {
                        return false;
                    }
                    if(GetType() != other__.GetType())
                    {
                        return false;
                    }
                    RoleViewForGM o__ = (RoleViewForGM)other__;
                    if(baseView == null)
                    {
                        if(o__.baseView != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!baseView.Equals(o__.baseView))
                        {
                            return false;
                        }
                    }
                    if(copyProgresses == null)
                    {
                        if(o__.copyProgresses != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(copyProgresses, o__.copyProgresses))
                        {
                            return false;
                        }
                    }
                    if(account == null)
                    {
                        if(o__.account != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!account.Equals(o__.account))
                        {
                            return false;
                        }
                    }
                    if(createTime == null)
                    {
                        if(o__.createTime != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!createTime.Equals(o__.createTime))
                        {
                            return false;
                        }
                    }
                    if(lastLoginTime == null)
                    {
                        if(o__.lastLoginTime != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!lastLoginTime.Equals(o__.lastLoginTime))
                        {
                            return false;
                        }
                    }
                    if(!expForBeiFa.Equals(o__.expForBeiFa))
                    {
                        return false;
                    }
                    if(!arenaMoney.Equals(o__.arenaMoney))
                    {
                        return false;
                    }
                    if(!moneyForAuction.Equals(o__.moneyForAuction))
                    {
                        return false;
                    }
                    if(!online.Equals(o__.online))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator==(RoleViewForGM lhs__, RoleViewForGM rhs__)
                {
                    return Equals(lhs__, rhs__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public static bool operator!=(RoleViewForGM lhs__, RoleViewForGM rhs__)
                {
                    return !Equals(lhs__, rhs__);
                }

                #endregion

                #region Marshalling support

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void write__(IceInternal.BasicStream os__)
                {
                    if(baseView == null)
                    {
                        com.XSanGo.Protocol.RoleView tmp__ = new com.XSanGo.Protocol.RoleView();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        baseView.write__(os__);
                    }
                    com.XSanGo.Protocol.IntStringSeqHelper.write(os__, copyProgresses);
                    if(account == null)
                    {
                        com.XSanGo.Protocol.AccountView tmp__ = new com.XSanGo.Protocol.AccountView();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        account.write__(os__);
                    }
                    os__.writeString(createTime);
                    os__.writeString(lastLoginTime);
                    os__.writeInt(expForBeiFa);
                    os__.writeInt(arenaMoney);
                    os__.writeLong(moneyForAuction);
                    os__.writeBool(online);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
                public void read__(IceInternal.BasicStream is__)
                {
                    if(baseView == null)
                    {
                        baseView = new com.XSanGo.Protocol.RoleView();
                    }
                    baseView.read__(is__);
                    copyProgresses = com.XSanGo.Protocol.IntStringSeqHelper.read(is__);
                    if(account == null)
                    {
                        account = new com.XSanGo.Protocol.AccountView();
                    }
                    account.read__(is__);
                    createTime = is__.readString();
                    lastLoginTime = is__.readString();
                    expForBeiFa = is__.readInt();
                    arenaMoney = is__.readInt();
                    moneyForAuction = is__.readLong();
                    online = is__.readBool();
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface RoleCallback : Ice.Object, RoleCallbackOperations_, RoleCallbackOperationsNC_
            {
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            public partial interface Role : Ice.Object, RoleOperations_, RoleOperationsNC_
            {
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_showRenameUI();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_rolePropertyChange();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_heroChange();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_itemChange();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_showRedPointOnMajorUI();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_showTips();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_pushMsgs();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_loginRankList();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_RoleCallback_factionCopyState();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_setRoleCallback(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_getServerOpenTime(string[] ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_getRoleViewList(com.XSanGo.Protocol.RoleView[] ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_randomName(com.XSanGo.Protocol.Property ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_setSexAndName();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_rename();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_levelUp();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_readActivityAnnounce();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_salary();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_getOtherPlayInfo(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_setHeadImage();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_getReportView(string ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_completeGuide();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_openCeremony(com.XSanGo.Protocol.SceneDuelView[] ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_getDuelStrategyConfig(com.XSanGo.Protocol.DuelSkillTemplateView[] ret__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_xsgPing();

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public delegate void Callback_Role_resetRole();
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleCallbackPrx : Ice.ObjectPrx
            {
                void showRenameUI();
                void showRenameUI(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> begin_showRenameUI();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> begin_showRenameUI(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_showRenameUI(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_showRenameUI(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_showRenameUI(Ice.AsyncResult r__);

                bool showRenameUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRenameUI cb__);
                bool showRenameUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRenameUI cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void rolePropertyChange(com.XSanGo.Protocol.Property pro);
                void rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> begin_rolePropertyChange(com.XSanGo.Protocol.Property pro);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_rolePropertyChange(Ice.AsyncResult r__);

                bool rolePropertyChange_async(com.XSanGo.Protocol.AMI_RoleCallback_rolePropertyChange cb__, com.XSanGo.Protocol.Property pro);
                bool rolePropertyChange_async(com.XSanGo.Protocol.AMI_RoleCallback_rolePropertyChange cb__, com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void heroChange(com.XSanGo.Protocol.HeroView view);
                void heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> begin_heroChange(com.XSanGo.Protocol.HeroView view);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> begin_heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_heroChange(com.XSanGo.Protocol.HeroView view, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_heroChange(Ice.AsyncResult r__);

                bool heroChange_async(com.XSanGo.Protocol.AMI_RoleCallback_heroChange cb__, com.XSanGo.Protocol.HeroView view);
                bool heroChange_async(com.XSanGo.Protocol.AMI_RoleCallback_heroChange cb__, com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void itemChange(com.XSanGo.Protocol.ItemView view);
                void itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> begin_itemChange(com.XSanGo.Protocol.ItemView view);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> begin_itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_itemChange(com.XSanGo.Protocol.ItemView view, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_itemChange(Ice.AsyncResult r__);

                bool itemChange_async(com.XSanGo.Protocol.AMI_RoleCallback_itemChange cb__, com.XSanGo.Protocol.ItemView view);
                bool itemChange_async(com.XSanGo.Protocol.AMI_RoleCallback_itemChange cb__, com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points);
                void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_showRedPointOnMajorUI(Ice.AsyncResult r__);

                bool showRedPointOnMajorUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRedPointOnMajorUI cb__, com.XSanGo.Protocol.MajorUIRedPointNote[] points);
                bool showRedPointOnMajorUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRedPointOnMajorUI cb__, com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void showTips(string tips);
                void showTips(string tips, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> begin_showTips(string tips);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> begin_showTips(string tips, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_showTips(string tips, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_showTips(string tips, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_showTips(Ice.AsyncResult r__);

                bool showTips_async(com.XSanGo.Protocol.AMI_RoleCallback_showTips cb__, string tips);
                bool showTips_async(com.XSanGo.Protocol.AMI_RoleCallback_showTips cb__, string tips, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void pushMsgs(string msgs);
                void pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> begin_pushMsgs(string msgs);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> begin_pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_pushMsgs(string msgs, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_pushMsgs(Ice.AsyncResult r__);

                bool pushMsgs_async(com.XSanGo.Protocol.AMI_RoleCallback_pushMsgs cb__, string msgs);
                bool pushMsgs_async(com.XSanGo.Protocol.AMI_RoleCallback_pushMsgs cb__, string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow);
                void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_loginRankList(Ice.AsyncResult r__);

                bool loginRankList_async(com.XSanGo.Protocol.AMI_RoleCallback_loginRankList cb__, com.XSanGo.Protocol.LoadingRankList listShow);
                bool loginRankList_async(com.XSanGo.Protocol.AMI_RoleCallback_loginRankList cb__, com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void factionCopyState(string roleName, string icon, int vipLevel);
                void factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> begin_factionCopyState(string roleName, string icon, int vipLevel);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> begin_factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_factionCopyState(string roleName, string icon, int vipLevel, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_factionCopyState(Ice.AsyncResult r__);

                bool factionCopyState_async(com.XSanGo.Protocol.AMI_RoleCallback_factionCopyState cb__, string roleName, string icon, int vipLevel);
                bool factionCopyState_async(com.XSanGo.Protocol.AMI_RoleCallback_factionCopyState cb__, string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RolePrx : Ice.ObjectPrx
            {
                string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb);
                string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_setRoleCallback(Ice.AsyncResult r__);

                bool setRoleCallback_async(com.XSanGo.Protocol.AMI_Role_setRoleCallback cb__, com.XSanGo.Protocol.RoleCallbackPrx cb);
                bool setRoleCallback_async(com.XSanGo.Protocol.AMI_Role_setRoleCallback cb__, com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string[] getServerOpenTime();
                string[] getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> begin_getServerOpenTime();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> begin_getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getServerOpenTime(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string[] end_getServerOpenTime(Ice.AsyncResult r__);

                bool getServerOpenTime_async(com.XSanGo.Protocol.AMI_Role_getServerOpenTime cb__);
                bool getServerOpenTime_async(com.XSanGo.Protocol.AMI_Role_getServerOpenTime cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.RoleView[] getRoleViewList();
                com.XSanGo.Protocol.RoleView[] getRoleViewList(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> begin_getRoleViewList();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> begin_getRoleViewList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getRoleViewList(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getRoleViewList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.RoleView[] end_getRoleViewList(Ice.AsyncResult r__);

                bool getRoleViewList_async(com.XSanGo.Protocol.AMI_Role_getRoleViewList cb__);
                bool getRoleViewList_async(com.XSanGo.Protocol.AMI_Role_getRoleViewList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.Property randomName(int sex);
                com.XSanGo.Protocol.Property randomName(int sex, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> begin_randomName(int sex);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> begin_randomName(int sex, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_randomName(int sex, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_randomName(int sex, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.Property end_randomName(Ice.AsyncResult r__);

                bool randomName_async(com.XSanGo.Protocol.AMI_Role_randomName cb__, int sex);
                bool randomName_async(com.XSanGo.Protocol.AMI_Role_randomName cb__, int sex, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void setSexAndName(int sex, string name, string inviteCode);
                void setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> begin_setSexAndName(int sex, string name, string inviteCode);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> begin_setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setSexAndName(int sex, string name, string inviteCode, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_setSexAndName(Ice.AsyncResult r__);

                bool setSexAndName_async(com.XSanGo.Protocol.AMI_Role_setSexAndName cb__, int sex, string name, string inviteCode);
                bool setSexAndName_async(com.XSanGo.Protocol.AMI_Role_setSexAndName cb__, int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void rename(string name);
                void rename(string name, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> begin_rename(string name);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> begin_rename(string name, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_rename(string name, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_rename(string name, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_rename(Ice.AsyncResult r__);

                bool rename_async(com.XSanGo.Protocol.AMI_Role_rename cb__, string name);
                bool rename_async(com.XSanGo.Protocol.AMI_Role_rename cb__, string name, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void levelUp();
                void levelUp(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> begin_levelUp();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> begin_levelUp(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_levelUp(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_levelUp(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_levelUp(Ice.AsyncResult r__);

                bool levelUp_async(com.XSanGo.Protocol.AMI_Role_levelUp cb__);
                bool levelUp_async(com.XSanGo.Protocol.AMI_Role_levelUp cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void readActivityAnnounce(int id);
                void readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> begin_readActivityAnnounce(int id);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> begin_readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_readActivityAnnounce(int id, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_readActivityAnnounce(Ice.AsyncResult r__);

                bool readActivityAnnounce_async(com.XSanGo.Protocol.AMI_Role_readActivityAnnounce cb__, int id);
                bool readActivityAnnounce_async(com.XSanGo.Protocol.AMI_Role_readActivityAnnounce cb__, int id, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void salary();
                void salary(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> begin_salary();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> begin_salary(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_salary(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_salary(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_salary(Ice.AsyncResult r__);

                bool salary_async(com.XSanGo.Protocol.AMI_Role_salary cb__);
                bool salary_async(com.XSanGo.Protocol.AMI_Role_salary cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string getOtherPlayInfo(string targetId);
                string getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> begin_getOtherPlayInfo(string targetId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> begin_getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getOtherPlayInfo(string targetId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_getOtherPlayInfo(Ice.AsyncResult r__);

                bool getOtherPlayInfo_async(com.XSanGo.Protocol.AMI_Role_getOtherPlayInfo cb__, string targetId);
                bool getOtherPlayInfo_async(com.XSanGo.Protocol.AMI_Role_getOtherPlayInfo cb__, string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void setHeadImage(string img);
                void setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> begin_setHeadImage(string img);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> begin_setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_setHeadImage(string img, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_setHeadImage(Ice.AsyncResult r__);

                bool setHeadImage_async(com.XSanGo.Protocol.AMI_Role_setHeadImage cb__, string img);
                bool setHeadImage_async(com.XSanGo.Protocol.AMI_Role_setHeadImage cb__, string img, _System.Collections.Generic.Dictionary<string, string> ctx__);

                string getReportView(string reportId);
                string getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> begin_getReportView(string reportId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> begin_getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getReportView(string reportId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                string end_getReportView(Ice.AsyncResult r__);

                bool getReportView_async(com.XSanGo.Protocol.AMI_Role_getReportView cb__, string reportId);
                bool getReportView_async(com.XSanGo.Protocol.AMI_Role_getReportView cb__, string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void completeGuide(int guideId);
                void completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> begin_completeGuide(int guideId);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> begin_completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_completeGuide(int guideId, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_completeGuide(Ice.AsyncResult r__);

                bool completeGuide_async(com.XSanGo.Protocol.AMI_Role_completeGuide cb__, int guideId);
                bool completeGuide_async(com.XSanGo.Protocol.AMI_Role_completeGuide cb__, int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id);
                com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> begin_openCeremony(int id);
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> begin_openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_openCeremony(int id, Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.SceneDuelView[] end_openCeremony(Ice.AsyncResult r__);

                bool openCeremony_async(com.XSanGo.Protocol.AMI_Role_openCeremony cb__, int id);
                bool openCeremony_async(com.XSanGo.Protocol.AMI_Role_openCeremony cb__, int id, _System.Collections.Generic.Dictionary<string, string> ctx__);

                com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig();
                com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> begin_getDuelStrategyConfig();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> begin_getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_getDuelStrategyConfig(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                com.XSanGo.Protocol.DuelSkillTemplateView[] end_getDuelStrategyConfig(Ice.AsyncResult r__);

                bool getDuelStrategyConfig_async(com.XSanGo.Protocol.AMI_Role_getDuelStrategyConfig cb__);
                bool getDuelStrategyConfig_async(com.XSanGo.Protocol.AMI_Role_getDuelStrategyConfig cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void xsgPing();
                void xsgPing(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> begin_xsgPing();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> begin_xsgPing(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_xsgPing(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_xsgPing(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_xsgPing(Ice.AsyncResult r__);

                bool xsgPing_async(com.XSanGo.Protocol.AMI_Role_xsgPing cb__);
                bool xsgPing_async(com.XSanGo.Protocol.AMI_Role_xsgPing cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);

                void resetRole();
                void resetRole(_System.Collections.Generic.Dictionary<string, string> context__);

                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> begin_resetRole();
                Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> begin_resetRole(_System.Collections.Generic.Dictionary<string, string> ctx__);

                Ice.AsyncResult begin_resetRole(Ice.AsyncCallback cb__, object cookie__);
                Ice.AsyncResult begin_resetRole(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                void end_resetRole(Ice.AsyncResult r__);

                bool resetRole_async(com.XSanGo.Protocol.AMI_Role_resetRole cb__);
                bool resetRole_async(com.XSanGo.Protocol.AMI_Role_resetRole cb__, _System.Collections.Generic.Dictionary<string, string> ctx__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleCallbackOperations_
            {
                void showRenameUI(Ice.Current current__);

                void rolePropertyChange(com.XSanGo.Protocol.Property pro, Ice.Current current__);

                void heroChange(com.XSanGo.Protocol.HeroView view, Ice.Current current__);

                void itemChange(com.XSanGo.Protocol.ItemView view, Ice.Current current__);

                void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, Ice.Current current__);

                void showTips(string tips, Ice.Current current__);

                void pushMsgs(string msgs, Ice.Current current__);

                void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, Ice.Current current__);

                void factionCopyState(string roleName, string icon, int vipLevel, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleCallbackOperationsNC_
            {
                void showRenameUI();

                void rolePropertyChange(com.XSanGo.Protocol.Property pro);

                void heroChange(com.XSanGo.Protocol.HeroView view);

                void itemChange(com.XSanGo.Protocol.ItemView view);

                void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points);

                void showTips(string tips);

                void pushMsgs(string msgs);

                void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow);

                void factionCopyState(string roleName, string icon, int vipLevel);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleOperations_
            {
                string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, Ice.Current current__);

                string[] getServerOpenTime(Ice.Current current__);

                void getRoleViewList_async(com.XSanGo.Protocol.AMD_Role_getRoleViewList cb__, Ice.Current current__);

                void randomName_async(com.XSanGo.Protocol.AMD_Role_randomName cb__, int sex, Ice.Current current__);

                void setSexAndName_async(com.XSanGo.Protocol.AMD_Role_setSexAndName cb__, int sex, string name, string inviteCode, Ice.Current current__);

                void rename_async(com.XSanGo.Protocol.AMD_Role_rename cb__, string name, Ice.Current current__);

                void levelUp(Ice.Current current__);

                void readActivityAnnounce(int id, Ice.Current current__);

                void salary(Ice.Current current__);

                void getOtherPlayInfo_async(com.XSanGo.Protocol.AMD_Role_getOtherPlayInfo cb__, string targetId, Ice.Current current__);

                void setHeadImage(string img, Ice.Current current__);

                string getReportView(string reportId, Ice.Current current__);

                void completeGuide(int guideId, Ice.Current current__);

                com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, Ice.Current current__);

                com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(Ice.Current current__);

                void xsgPing(Ice.Current current__);

                void resetRole_async(com.XSanGo.Protocol.AMD_Role_resetRole cb__, Ice.Current current__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleOperationsNC_
            {
                string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb);

                string[] getServerOpenTime();

                void getRoleViewList_async(com.XSanGo.Protocol.AMD_Role_getRoleViewList cb__);

                void randomName_async(com.XSanGo.Protocol.AMD_Role_randomName cb__, int sex);

                void setSexAndName_async(com.XSanGo.Protocol.AMD_Role_setSexAndName cb__, int sex, string name, string inviteCode);

                void rename_async(com.XSanGo.Protocol.AMD_Role_rename cb__, string name);

                void levelUp();

                void readActivityAnnounce(int id);

                void salary();

                void getOtherPlayInfo_async(com.XSanGo.Protocol.AMD_Role_getOtherPlayInfo cb__, string targetId);

                void setHeadImage(string img);

                string getReportView(string reportId);

                void completeGuide(int guideId);

                com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id);

                com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig();

                void xsgPing();

                void resetRole_async(com.XSanGo.Protocol.AMD_Role_resetRole cb__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class ActivityAnnounceViewSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.ActivityAnnounceView[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.ActivityAnnounceView() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.ActivityAnnounceView[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.ActivityAnnounceView[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(8);
                        v__ = new com.XSanGo.Protocol.ActivityAnnounceView[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.ActivityAnnounceView();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class LoadingRankSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.LoadingRankSub[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.LoadingRankSub() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.LoadingRankSub[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.LoadingRankSub[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(8);
                        v__ = new com.XSanGo.Protocol.LoadingRankSub[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.LoadingRankSub();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RoleViewSeqHelper
            {
                public static void write(IceInternal.BasicStream os__, com.XSanGo.Protocol.RoleView[] v__)
                {
                    if(v__ == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(v__.Length);
                        for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                        {
                            (v__[ix__] == null ? new com.XSanGo.Protocol.RoleView() : v__[ix__]).write__(os__);
                        }
                    }
                }

                public static com.XSanGo.Protocol.RoleView[] read(IceInternal.BasicStream is__)
                {
                    com.XSanGo.Protocol.RoleView[] v__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(64);
                        v__ = new com.XSanGo.Protocol.RoleView[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            v__[ix__] = new com.XSanGo.Protocol.RoleView();
                            v__[ix__].read__(is__);
                        }
                    }
                    return v__;
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RoleCallbackPrxHelper : Ice.ObjectPrxHelperBase, RoleCallbackPrx
            {
                #region Synchronous operations

                public void factionCopyState(string roleName, string icon, int vipLevel)
                {
                    factionCopyState(roleName, icon, vipLevel, null, false);
                }

                public void factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    factionCopyState(roleName, icon, vipLevel, context__, true);
                }

                private void factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __factionCopyState_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.factionCopyState(roleName, icon, vipLevel, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void heroChange(com.XSanGo.Protocol.HeroView view)
                {
                    heroChange(view, null, false);
                }

                public void heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    heroChange(view, context__, true);
                }

                private void heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __heroChange_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.heroChange(view, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void itemChange(com.XSanGo.Protocol.ItemView view)
                {
                    itemChange(view, null, false);
                }

                public void itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    itemChange(view, context__, true);
                }

                private void itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __itemChange_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.itemChange(view, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow)
                {
                    loginRankList(listShow, null, false);
                }

                public void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    loginRankList(listShow, context__, true);
                }

                private void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __loginRankList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.loginRankList(listShow, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void pushMsgs(string msgs)
                {
                    pushMsgs(msgs, null, false);
                }

                public void pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    pushMsgs(msgs, context__, true);
                }

                private void pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __pushMsgs_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.pushMsgs(msgs, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void rolePropertyChange(com.XSanGo.Protocol.Property pro)
                {
                    rolePropertyChange(pro, null, false);
                }

                public void rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    rolePropertyChange(pro, context__, true);
                }

                private void rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __rolePropertyChange_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.rolePropertyChange(pro, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points)
                {
                    showRedPointOnMajorUI(points, null, false);
                }

                public void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    showRedPointOnMajorUI(points, context__, true);
                }

                private void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __showRedPointOnMajorUI_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.showRedPointOnMajorUI(points, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void showRenameUI()
                {
                    showRenameUI(null, false);
                }

                public void showRenameUI(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    showRenameUI(context__, true);
                }

                private void showRenameUI(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __showRenameUI_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.showRenameUI(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void showTips(string tips)
                {
                    showTips(tips, null, false);
                }

                public void showTips(string tips, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    showTips(tips, context__, true);
                }

                private void showTips(string tips, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __showTips_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleCallbackDel_ del__ = (RoleCallbackDel_)delBase__;
                                del__.showTips(tips, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> begin_factionCopyState(string roleName, string icon, int vipLevel)
                {
                    return begin_factionCopyState(roleName, icon, vipLevel, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> begin_factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_factionCopyState(roleName, icon, vipLevel, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_factionCopyState(string roleName, string icon, int vipLevel, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_factionCopyState(roleName, icon, vipLevel, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_factionCopyState(roleName, icon, vipLevel, ctx__, true, cb__, cookie__);
                }

                private const string __factionCopyState_name = "factionCopyState";

                public void end_factionCopyState(Ice.AsyncResult r__)
                {
                    end__(r__, __factionCopyState_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> begin_factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState>(this, __factionCopyState_name, factionCopyState_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__factionCopyState_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(roleName);
                        os__.writeString(icon);
                        os__.writeInt(vipLevel);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void factionCopyState_completed__(com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool factionCopyState_async(com.XSanGo.Protocol.AMI_RoleCallback_factionCopyState cb__, string roleName, string icon, int vipLevel)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> result__ = begin_factionCopyState(roleName, icon, vipLevel);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool factionCopyState_async(com.XSanGo.Protocol.AMI_RoleCallback_factionCopyState cb__, string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_factionCopyState> result__ = begin_factionCopyState(roleName, icon, vipLevel, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> begin_heroChange(com.XSanGo.Protocol.HeroView view)
                {
                    return begin_heroChange(view, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> begin_heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_heroChange(view, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_heroChange(com.XSanGo.Protocol.HeroView view, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_heroChange(view, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_heroChange(view, ctx__, true, cb__, cookie__);
                }

                private const string __heroChange_name = "heroChange";

                public void end_heroChange(Ice.AsyncResult r__)
                {
                    end__(r__, __heroChange_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> begin_heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_heroChange>(this, __heroChange_name, heroChange_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__heroChange_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(view == null)
                        {
                            com.XSanGo.Protocol.HeroView tmp__ = new com.XSanGo.Protocol.HeroView();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            view.write__(os__);
                        }
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void heroChange_completed__(com.XSanGo.Protocol.Callback_RoleCallback_heroChange cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool heroChange_async(com.XSanGo.Protocol.AMI_RoleCallback_heroChange cb__, com.XSanGo.Protocol.HeroView view)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> result__ = begin_heroChange(view);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool heroChange_async(com.XSanGo.Protocol.AMI_RoleCallback_heroChange cb__, com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_heroChange> result__ = begin_heroChange(view, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> begin_itemChange(com.XSanGo.Protocol.ItemView view)
                {
                    return begin_itemChange(view, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> begin_itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_itemChange(view, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_itemChange(com.XSanGo.Protocol.ItemView view, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_itemChange(view, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_itemChange(view, ctx__, true, cb__, cookie__);
                }

                private const string __itemChange_name = "itemChange";

                public void end_itemChange(Ice.AsyncResult r__)
                {
                    end__(r__, __itemChange_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> begin_itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_itemChange>(this, __itemChange_name, itemChange_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__itemChange_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(view == null)
                        {
                            com.XSanGo.Protocol.ItemView tmp__ = new com.XSanGo.Protocol.ItemView();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            view.write__(os__);
                        }
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void itemChange_completed__(com.XSanGo.Protocol.Callback_RoleCallback_itemChange cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool itemChange_async(com.XSanGo.Protocol.AMI_RoleCallback_itemChange cb__, com.XSanGo.Protocol.ItemView view)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> result__ = begin_itemChange(view);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool itemChange_async(com.XSanGo.Protocol.AMI_RoleCallback_itemChange cb__, com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_itemChange> result__ = begin_itemChange(view, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow)
                {
                    return begin_loginRankList(listShow, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_loginRankList(listShow, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_loginRankList(listShow, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_loginRankList(listShow, ctx__, true, cb__, cookie__);
                }

                private const string __loginRankList_name = "loginRankList";

                public void end_loginRankList(Ice.AsyncResult r__)
                {
                    end__(r__, __loginRankList_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> begin_loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList>(this, __loginRankList_name, loginRankList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__loginRankList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(listShow == null)
                        {
                            com.XSanGo.Protocol.LoadingRankList tmp__ = new com.XSanGo.Protocol.LoadingRankList();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            listShow.write__(os__);
                        }
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void loginRankList_completed__(com.XSanGo.Protocol.Callback_RoleCallback_loginRankList cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool loginRankList_async(com.XSanGo.Protocol.AMI_RoleCallback_loginRankList cb__, com.XSanGo.Protocol.LoadingRankList listShow)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> result__ = begin_loginRankList(listShow);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool loginRankList_async(com.XSanGo.Protocol.AMI_RoleCallback_loginRankList cb__, com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_loginRankList> result__ = begin_loginRankList(listShow, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> begin_pushMsgs(string msgs)
                {
                    return begin_pushMsgs(msgs, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> begin_pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_pushMsgs(msgs, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_pushMsgs(string msgs, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_pushMsgs(msgs, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_pushMsgs(msgs, ctx__, true, cb__, cookie__);
                }

                private const string __pushMsgs_name = "pushMsgs";

                public void end_pushMsgs(Ice.AsyncResult r__)
                {
                    end__(r__, __pushMsgs_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> begin_pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs>(this, __pushMsgs_name, pushMsgs_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__pushMsgs_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(msgs);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void pushMsgs_completed__(com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool pushMsgs_async(com.XSanGo.Protocol.AMI_RoleCallback_pushMsgs cb__, string msgs)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> result__ = begin_pushMsgs(msgs);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool pushMsgs_async(com.XSanGo.Protocol.AMI_RoleCallback_pushMsgs cb__, string msgs, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_pushMsgs> result__ = begin_pushMsgs(msgs, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> begin_rolePropertyChange(com.XSanGo.Protocol.Property pro)
                {
                    return begin_rolePropertyChange(pro, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_rolePropertyChange(pro, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_rolePropertyChange(pro, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_rolePropertyChange(pro, ctx__, true, cb__, cookie__);
                }

                private const string __rolePropertyChange_name = "rolePropertyChange";

                public void end_rolePropertyChange(Ice.AsyncResult r__)
                {
                    end__(r__, __rolePropertyChange_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> begin_rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange>(this, __rolePropertyChange_name, rolePropertyChange_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__rolePropertyChange_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        if(pro == null)
                        {
                            com.XSanGo.Protocol.Property tmp__ = new com.XSanGo.Protocol.Property();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            pro.write__(os__);
                        }
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void rolePropertyChange_completed__(com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool rolePropertyChange_async(com.XSanGo.Protocol.AMI_RoleCallback_rolePropertyChange cb__, com.XSanGo.Protocol.Property pro)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> result__ = begin_rolePropertyChange(pro);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool rolePropertyChange_async(com.XSanGo.Protocol.AMI_RoleCallback_rolePropertyChange cb__, com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_rolePropertyChange> result__ = begin_rolePropertyChange(pro, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points)
                {
                    return begin_showRedPointOnMajorUI(points, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_showRedPointOnMajorUI(points, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showRedPointOnMajorUI(points, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showRedPointOnMajorUI(points, ctx__, true, cb__, cookie__);
                }

                private const string __showRedPointOnMajorUI_name = "showRedPointOnMajorUI";

                public void end_showRedPointOnMajorUI(Ice.AsyncResult r__)
                {
                    end__(r__, __showRedPointOnMajorUI_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> begin_showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI>(this, __showRedPointOnMajorUI_name, showRedPointOnMajorUI_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__showRedPointOnMajorUI_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.MajorUIRedPointNoteSeqHelper.write(os__, points);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void showRedPointOnMajorUI_completed__(com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool showRedPointOnMajorUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRedPointOnMajorUI cb__, com.XSanGo.Protocol.MajorUIRedPointNote[] points)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> result__ = begin_showRedPointOnMajorUI(points);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool showRedPointOnMajorUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRedPointOnMajorUI cb__, com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRedPointOnMajorUI> result__ = begin_showRedPointOnMajorUI(points, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> begin_showRenameUI()
                {
                    return begin_showRenameUI(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> begin_showRenameUI(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_showRenameUI(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_showRenameUI(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showRenameUI(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_showRenameUI(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showRenameUI(ctx__, true, cb__, cookie__);
                }

                private const string __showRenameUI_name = "showRenameUI";

                public void end_showRenameUI(Ice.AsyncResult r__)
                {
                    end__(r__, __showRenameUI_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> begin_showRenameUI(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI>(this, __showRenameUI_name, showRenameUI_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__showRenameUI_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void showRenameUI_completed__(com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool showRenameUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRenameUI cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> result__ = begin_showRenameUI();
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool showRenameUI_async(com.XSanGo.Protocol.AMI_RoleCallback_showRenameUI cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showRenameUI> result__ = begin_showRenameUI(ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> begin_showTips(string tips)
                {
                    return begin_showTips(tips, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> begin_showTips(string tips, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_showTips(tips, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_showTips(string tips, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showTips(tips, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_showTips(string tips, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_showTips(tips, ctx__, true, cb__, cookie__);
                }

                private const string __showTips_name = "showTips";

                public void end_showTips(Ice.AsyncResult r__)
                {
                    end__(r__, __showTips_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> begin_showTips(string tips, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_showTips> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_RoleCallback_showTips>(this, __showTips_name, showTips_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__showTips_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(tips);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void showTips_completed__(com.XSanGo.Protocol.Callback_RoleCallback_showTips cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool showTips_async(com.XSanGo.Protocol.AMI_RoleCallback_showTips cb__, string tips)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> result__ = begin_showTips(tips);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool showTips_async(com.XSanGo.Protocol.AMI_RoleCallback_showTips cb__, string tips, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_RoleCallback_showTips> result__ = begin_showTips(tips, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static RoleCallbackPrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    RoleCallbackPrx r = b as RoleCallbackPrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        RoleCallbackPrxHelper h = new RoleCallbackPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static RoleCallbackPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    RoleCallbackPrx r = b as RoleCallbackPrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        RoleCallbackPrxHelper h = new RoleCallbackPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static RoleCallbackPrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            RoleCallbackPrxHelper h = new RoleCallbackPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static RoleCallbackPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            RoleCallbackPrxHelper h = new RoleCallbackPrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static RoleCallbackPrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    RoleCallbackPrx r = b as RoleCallbackPrx;
                    if(r == null)
                    {
                        RoleCallbackPrxHelper h = new RoleCallbackPrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static RoleCallbackPrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    RoleCallbackPrxHelper h = new RoleCallbackPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::RoleCallback"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new RoleCallbackDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new RoleCallbackDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, RoleCallbackPrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static RoleCallbackPrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        RoleCallbackPrxHelper result = new RoleCallbackPrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RolePrxHelper : Ice.ObjectPrxHelperBase, RolePrx
            {
                #region Synchronous operations

                public void completeGuide(int guideId)
                {
                    completeGuide(guideId, null, false);
                }

                public void completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    completeGuide(guideId, context__, true);
                }

                private void completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __completeGuide_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.completeGuide(guideId, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig()
                {
                    return getDuelStrategyConfig(null, false);
                }

                public com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getDuelStrategyConfig(context__, true);
                }

                private com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getDuelStrategyConfig_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getDuelStrategyConfig_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.getDuelStrategyConfig(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string getOtherPlayInfo(string targetId)
                {
                    return getOtherPlayInfo(targetId, null, false);
                }

                public string getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getOtherPlayInfo(targetId, context__, true);
                }

                private string getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getOtherPlayInfo_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getOtherPlayInfo_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.getOtherPlayInfo(targetId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string getReportView(string reportId)
                {
                    return getReportView(reportId, null, false);
                }

                public string getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getReportView(reportId, context__, true);
                }

                private string getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getReportView_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getReportView_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.getReportView(reportId, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.RoleView[] getRoleViewList()
                {
                    return getRoleViewList(null, false);
                }

                public com.XSanGo.Protocol.RoleView[] getRoleViewList(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getRoleViewList(context__, true);
                }

                private com.XSanGo.Protocol.RoleView[] getRoleViewList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getRoleViewList_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getRoleViewList_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.getRoleViewList(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string[] getServerOpenTime()
                {
                    return getServerOpenTime(null, false);
                }

                public string[] getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return getServerOpenTime(context__, true);
                }

                private string[] getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getServerOpenTime_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__getServerOpenTime_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.getServerOpenTime(context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void levelUp()
                {
                    levelUp(null, false);
                }

                public void levelUp(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    levelUp(context__, true);
                }

                private void levelUp(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __levelUp_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__levelUp_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.levelUp(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id)
                {
                    return openCeremony(id, null, false);
                }

                public com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return openCeremony(id, context__, true);
                }

                private com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __openCeremony_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__openCeremony_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.openCeremony(id, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public com.XSanGo.Protocol.Property randomName(int sex)
                {
                    return randomName(sex, null, false);
                }

                public com.XSanGo.Protocol.Property randomName(int sex, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return randomName(sex, context__, true);
                }

                private com.XSanGo.Protocol.Property randomName(int sex, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __randomName_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__randomName_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.randomName(sex, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void readActivityAnnounce(int id)
                {
                    readActivityAnnounce(id, null, false);
                }

                public void readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    readActivityAnnounce(id, context__, true);
                }

                private void readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __readActivityAnnounce_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.readActivityAnnounce(id, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void rename(string name)
                {
                    rename(name, null, false);
                }

                public void rename(string name, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    rename(name, context__, true);
                }

                private void rename(string name, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __rename_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__rename_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.rename(name, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void resetRole()
                {
                    resetRole(null, false);
                }

                public void resetRole(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    resetRole(context__, true);
                }

                private void resetRole(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __resetRole_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__resetRole_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.resetRole(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void salary()
                {
                    salary(null, false);
                }

                public void salary(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    salary(context__, true);
                }

                private void salary(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __salary_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__salary_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.salary(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void setHeadImage(string img)
                {
                    setHeadImage(img, null, false);
                }

                public void setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    setHeadImage(img, context__, true);
                }

                private void setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setHeadImage_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__setHeadImage_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.setHeadImage(img, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb)
                {
                    return setRoleCallback(cb, null, false);
                }

                public string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    return setRoleCallback(cb, context__, true);
                }

                private string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setRoleCallback_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__setRoleCallback_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                return del__.setRoleCallback(cb, context__, observer__);
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void setSexAndName(int sex, string name, string inviteCode)
                {
                    setSexAndName(sex, name, inviteCode, null, false);
                }

                public void setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> context__)
                {
                    setSexAndName(sex, name, inviteCode, context__, true);
                }

                private void setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __setSexAndName_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__setSexAndName_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.setSexAndName(sex, name, inviteCode, context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                public void xsgPing()
                {
                    xsgPing(null, false);
                }

                public void xsgPing(_System.Collections.Generic.Dictionary<string, string> context__)
                {
                    xsgPing(context__, true);
                }

                private void xsgPing(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
                {
                    if(explicitContext__ && context__ == null)
                    {
                        context__ = emptyContext_;
                    }
                    Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __xsgPing_name, context__);
                    int cnt__ = 0;
                    try
                    {
                        while(true)
                        {
                            Ice.ObjectDel_ delBase__ = null;
                            try
                            {
                                checkTwowayOnly__(__xsgPing_name);
                                delBase__ = getDelegate__(false);
                                RoleDel_ del__ = (RoleDel_)delBase__;
                                del__.xsgPing(context__, observer__);
                                return;
                            }
                            catch(IceInternal.LocalExceptionWrapper ex__)
                            {
                                handleExceptionWrapper__(delBase__, ex__, observer__);
                            }
                            catch(Ice.LocalException ex__)
                            {
                                handleException__(delBase__, ex__, true, ref cnt__, observer__);
                            }
                        }
                    }
                    finally
                    {
                        if(observer__ != null)
                        {
                            observer__.detach();
                        }
                    }
                }

                #endregion

                #region Asynchronous operations

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> begin_completeGuide(int guideId)
                {
                    return begin_completeGuide(guideId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> begin_completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_completeGuide(guideId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_completeGuide(int guideId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_completeGuide(guideId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_completeGuide(guideId, ctx__, true, cb__, cookie__);
                }

                private const string __completeGuide_name = "completeGuide";

                public void end_completeGuide(Ice.AsyncResult r__)
                {
                    end__(r__, __completeGuide_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> begin_completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_completeGuide> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_completeGuide>(this, __completeGuide_name, completeGuide_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__completeGuide_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(guideId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void completeGuide_completed__(com.XSanGo.Protocol.Callback_Role_completeGuide cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool completeGuide_async(com.XSanGo.Protocol.AMI_Role_completeGuide cb__, int guideId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> result__ = begin_completeGuide(guideId);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool completeGuide_async(com.XSanGo.Protocol.AMI_Role_completeGuide cb__, int guideId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_completeGuide> result__ = begin_completeGuide(guideId, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> begin_getDuelStrategyConfig()
                {
                    return begin_getDuelStrategyConfig(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> begin_getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getDuelStrategyConfig(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getDuelStrategyConfig(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getDuelStrategyConfig(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getDuelStrategyConfig(ctx__, true, cb__, cookie__);
                }

                private const string __getDuelStrategyConfig_name = "getDuelStrategyConfig";

                public com.XSanGo.Protocol.DuelSkillTemplateView[] end_getDuelStrategyConfig(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getDuelStrategyConfig_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.DuelSkillTemplateView[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.DuelSkillTemplateViewSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> begin_getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getDuelStrategyConfig_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig>(this, __getDuelStrategyConfig_name, getDuelStrategyConfig_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getDuelStrategyConfig_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getDuelStrategyConfig_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.DuelSkillTemplateView[] ret__;
                    try
                    {
                        ret__ = end_getDuelStrategyConfig(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getDuelStrategyConfig_async(com.XSanGo.Protocol.AMI_Role_getDuelStrategyConfig cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> result__;
                    try
                    {
                        checkTwowayOnly__(__getDuelStrategyConfig_name);
                        result__ = begin_getDuelStrategyConfig();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig>(this, __getDuelStrategyConfig_name, getDuelStrategyConfig_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getDuelStrategyConfig_async(com.XSanGo.Protocol.AMI_Role_getDuelStrategyConfig cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig> result__;
                    try
                    {
                        checkTwowayOnly__(__getDuelStrategyConfig_name);
                        result__ = begin_getDuelStrategyConfig(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getDuelStrategyConfig>(this, __getDuelStrategyConfig_name, getDuelStrategyConfig_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> begin_getOtherPlayInfo(string targetId)
                {
                    return begin_getOtherPlayInfo(targetId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> begin_getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getOtherPlayInfo(targetId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getOtherPlayInfo(string targetId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getOtherPlayInfo(targetId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getOtherPlayInfo(targetId, ctx__, true, cb__, cookie__);
                }

                private const string __getOtherPlayInfo_name = "getOtherPlayInfo";

                public string end_getOtherPlayInfo(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getOtherPlayInfo_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> begin_getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getOtherPlayInfo_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo>(this, __getOtherPlayInfo_name, getOtherPlayInfo_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getOtherPlayInfo_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(targetId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getOtherPlayInfo_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_getOtherPlayInfo(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getOtherPlayInfo_async(com.XSanGo.Protocol.AMI_Role_getOtherPlayInfo cb__, string targetId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> result__;
                    try
                    {
                        checkTwowayOnly__(__getOtherPlayInfo_name);
                        result__ = begin_getOtherPlayInfo(targetId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo>(this, __getOtherPlayInfo_name, getOtherPlayInfo_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getOtherPlayInfo_async(com.XSanGo.Protocol.AMI_Role_getOtherPlayInfo cb__, string targetId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo> result__;
                    try
                    {
                        checkTwowayOnly__(__getOtherPlayInfo_name);
                        result__ = begin_getOtherPlayInfo(targetId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getOtherPlayInfo>(this, __getOtherPlayInfo_name, getOtherPlayInfo_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> begin_getReportView(string reportId)
                {
                    return begin_getReportView(reportId, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> begin_getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getReportView(reportId, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getReportView(string reportId, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getReportView(reportId, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getReportView(reportId, ctx__, true, cb__, cookie__);
                }

                private const string __getReportView_name = "getReportView";

                public string end_getReportView(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getReportView_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> begin_getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getReportView_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getReportView> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getReportView>(this, __getReportView_name, getReportView_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getReportView_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(reportId);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getReportView_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_getReportView cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_getReportView(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getReportView_async(com.XSanGo.Protocol.AMI_Role_getReportView cb__, string reportId)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> result__;
                    try
                    {
                        checkTwowayOnly__(__getReportView_name);
                        result__ = begin_getReportView(reportId);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getReportView>(this, __getReportView_name, getReportView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getReportView_async(com.XSanGo.Protocol.AMI_Role_getReportView cb__, string reportId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getReportView> result__;
                    try
                    {
                        checkTwowayOnly__(__getReportView_name);
                        result__ = begin_getReportView(reportId, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getReportView>(this, __getReportView_name, getReportView_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> begin_getRoleViewList()
                {
                    return begin_getRoleViewList(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> begin_getRoleViewList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getRoleViewList(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getRoleViewList(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getRoleViewList(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getRoleViewList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getRoleViewList(ctx__, true, cb__, cookie__);
                }

                private const string __getRoleViewList_name = "getRoleViewList";

                public com.XSanGo.Protocol.RoleView[] end_getRoleViewList(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getRoleViewList_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.RoleView[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.RoleViewSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> begin_getRoleViewList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getRoleViewList_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getRoleViewList> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getRoleViewList>(this, __getRoleViewList_name, getRoleViewList_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getRoleViewList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getRoleViewList_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_getRoleViewList cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.RoleView[] ret__;
                    try
                    {
                        ret__ = end_getRoleViewList(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getRoleViewList_async(com.XSanGo.Protocol.AMI_Role_getRoleViewList cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> result__;
                    try
                    {
                        checkTwowayOnly__(__getRoleViewList_name);
                        result__ = begin_getRoleViewList();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getRoleViewList>(this, __getRoleViewList_name, getRoleViewList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getRoleViewList_async(com.XSanGo.Protocol.AMI_Role_getRoleViewList cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getRoleViewList> result__;
                    try
                    {
                        checkTwowayOnly__(__getRoleViewList_name);
                        result__ = begin_getRoleViewList(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getRoleViewList>(this, __getRoleViewList_name, getRoleViewList_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> begin_getServerOpenTime()
                {
                    return begin_getServerOpenTime(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> begin_getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_getServerOpenTime(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_getServerOpenTime(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getServerOpenTime(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_getServerOpenTime(ctx__, true, cb__, cookie__);
                }

                private const string __getServerOpenTime_name = "getServerOpenTime";

                public string[] end_getServerOpenTime(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __getServerOpenTime_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.StringSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> begin_getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__getServerOpenTime_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getServerOpenTime>(this, __getServerOpenTime_name, getServerOpenTime_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__getServerOpenTime_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void getServerOpenTime_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_getServerOpenTime cb__, Ice.ExceptionCallback excb__)
                {
                    string[] ret__;
                    try
                    {
                        ret__ = end_getServerOpenTime(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool getServerOpenTime_async(com.XSanGo.Protocol.AMI_Role_getServerOpenTime cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> result__;
                    try
                    {
                        checkTwowayOnly__(__getServerOpenTime_name);
                        result__ = begin_getServerOpenTime();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getServerOpenTime>(this, __getServerOpenTime_name, getServerOpenTime_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool getServerOpenTime_async(com.XSanGo.Protocol.AMI_Role_getServerOpenTime cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_getServerOpenTime> result__;
                    try
                    {
                        checkTwowayOnly__(__getServerOpenTime_name);
                        result__ = begin_getServerOpenTime(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_getServerOpenTime>(this, __getServerOpenTime_name, getServerOpenTime_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> begin_levelUp()
                {
                    return begin_levelUp(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> begin_levelUp(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_levelUp(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_levelUp(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_levelUp(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_levelUp(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_levelUp(ctx__, true, cb__, cookie__);
                }

                private const string __levelUp_name = "levelUp";

                public void end_levelUp(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __levelUp_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> begin_levelUp(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__levelUp_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_levelUp> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_levelUp>(this, __levelUp_name, levelUp_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__levelUp_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void levelUp_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_levelUp cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_levelUp(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool levelUp_async(com.XSanGo.Protocol.AMI_Role_levelUp cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> result__;
                    try
                    {
                        checkTwowayOnly__(__levelUp_name);
                        result__ = begin_levelUp();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_levelUp>(this, __levelUp_name, levelUp_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool levelUp_async(com.XSanGo.Protocol.AMI_Role_levelUp cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_levelUp> result__;
                    try
                    {
                        checkTwowayOnly__(__levelUp_name);
                        result__ = begin_levelUp(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_levelUp>(this, __levelUp_name, levelUp_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> begin_openCeremony(int id)
                {
                    return begin_openCeremony(id, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> begin_openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_openCeremony(id, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_openCeremony(int id, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_openCeremony(id, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_openCeremony(id, ctx__, true, cb__, cookie__);
                }

                private const string __openCeremony_name = "openCeremony";

                public com.XSanGo.Protocol.SceneDuelView[] end_openCeremony(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __openCeremony_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.SceneDuelView[] ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = com.XSanGo.Protocol.SceneDuelViewSeqHelper.read(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> begin_openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__openCeremony_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_openCeremony> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_openCeremony>(this, __openCeremony_name, openCeremony_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__openCeremony_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(id);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void openCeremony_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_openCeremony cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.SceneDuelView[] ret__;
                    try
                    {
                        ret__ = end_openCeremony(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool openCeremony_async(com.XSanGo.Protocol.AMI_Role_openCeremony cb__, int id)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> result__;
                    try
                    {
                        checkTwowayOnly__(__openCeremony_name);
                        result__ = begin_openCeremony(id);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_openCeremony>(this, __openCeremony_name, openCeremony_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool openCeremony_async(com.XSanGo.Protocol.AMI_Role_openCeremony cb__, int id, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_openCeremony> result__;
                    try
                    {
                        checkTwowayOnly__(__openCeremony_name);
                        result__ = begin_openCeremony(id, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_openCeremony>(this, __openCeremony_name, openCeremony_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> begin_randomName(int sex)
                {
                    return begin_randomName(sex, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> begin_randomName(int sex, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_randomName(sex, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_randomName(int sex, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_randomName(sex, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_randomName(int sex, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_randomName(sex, ctx__, true, cb__, cookie__);
                }

                private const string __randomName_name = "randomName";

                public com.XSanGo.Protocol.Property end_randomName(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __randomName_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        com.XSanGo.Protocol.Property ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = null;
                        if(ret__ == null)
                        {
                            ret__ = new com.XSanGo.Protocol.Property();
                        }
                        ret__.read__(is__);
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> begin_randomName(int sex, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__randomName_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_randomName> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_randomName>(this, __randomName_name, randomName_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__randomName_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(sex);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void randomName_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_randomName cb__, Ice.ExceptionCallback excb__)
                {
                    com.XSanGo.Protocol.Property ret__;
                    try
                    {
                        ret__ = end_randomName(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool randomName_async(com.XSanGo.Protocol.AMI_Role_randomName cb__, int sex)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> result__;
                    try
                    {
                        checkTwowayOnly__(__randomName_name);
                        result__ = begin_randomName(sex);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_randomName>(this, __randomName_name, randomName_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool randomName_async(com.XSanGo.Protocol.AMI_Role_randomName cb__, int sex, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_randomName> result__;
                    try
                    {
                        checkTwowayOnly__(__randomName_name);
                        result__ = begin_randomName(sex, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_randomName>(this, __randomName_name, randomName_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> begin_readActivityAnnounce(int id)
                {
                    return begin_readActivityAnnounce(id, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> begin_readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_readActivityAnnounce(id, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_readActivityAnnounce(int id, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_readActivityAnnounce(id, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_readActivityAnnounce(id, ctx__, true, cb__, cookie__);
                }

                private const string __readActivityAnnounce_name = "readActivityAnnounce";

                public void end_readActivityAnnounce(Ice.AsyncResult r__)
                {
                    end__(r__, __readActivityAnnounce_name);
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> begin_readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> result__ = new IceInternal.OnewayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce>(this, __readActivityAnnounce_name, readActivityAnnounce_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__readActivityAnnounce_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(id);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void readActivityAnnounce_completed__(com.XSanGo.Protocol.Callback_Role_readActivityAnnounce cb__)
                {
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool readActivityAnnounce_async(com.XSanGo.Protocol.AMI_Role_readActivityAnnounce cb__, int id)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> result__ = begin_readActivityAnnounce(id);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool readActivityAnnounce_async(com.XSanGo.Protocol.AMI_Role_readActivityAnnounce cb__, int id, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_readActivityAnnounce> result__ = begin_readActivityAnnounce(id, ctx__);
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> begin_rename(string name)
                {
                    return begin_rename(name, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> begin_rename(string name, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_rename(name, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_rename(string name, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_rename(name, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_rename(string name, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_rename(name, ctx__, true, cb__, cookie__);
                }

                private const string __rename_name = "rename";

                public void end_rename(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __rename_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                            {
                                throw;
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> begin_rename(string name, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__rename_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_rename> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_rename>(this, __rename_name, rename_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__rename_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(name);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void rename_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_rename cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_rename(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool rename_async(com.XSanGo.Protocol.AMI_Role_rename cb__, string name)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> result__;
                    try
                    {
                        checkTwowayOnly__(__rename_name);
                        result__ = begin_rename(name);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_rename>(this, __rename_name, rename_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool rename_async(com.XSanGo.Protocol.AMI_Role_rename cb__, string name, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_rename> result__;
                    try
                    {
                        checkTwowayOnly__(__rename_name);
                        result__ = begin_rename(name, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_rename>(this, __rename_name, rename_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> begin_resetRole()
                {
                    return begin_resetRole(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> begin_resetRole(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_resetRole(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_resetRole(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_resetRole(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_resetRole(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_resetRole(ctx__, true, cb__, cookie__);
                }

                private const string __resetRole_name = "resetRole";

                public void end_resetRole(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __resetRole_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> begin_resetRole(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__resetRole_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_resetRole> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_resetRole>(this, __resetRole_name, resetRole_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__resetRole_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void resetRole_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_resetRole cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_resetRole(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool resetRole_async(com.XSanGo.Protocol.AMI_Role_resetRole cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> result__;
                    try
                    {
                        checkTwowayOnly__(__resetRole_name);
                        result__ = begin_resetRole();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_resetRole>(this, __resetRole_name, resetRole_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool resetRole_async(com.XSanGo.Protocol.AMI_Role_resetRole cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_resetRole> result__;
                    try
                    {
                        checkTwowayOnly__(__resetRole_name);
                        result__ = begin_resetRole(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_resetRole>(this, __resetRole_name, resetRole_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> begin_salary()
                {
                    return begin_salary(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> begin_salary(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_salary(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_salary(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_salary(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_salary(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_salary(ctx__, true, cb__, cookie__);
                }

                private const string __salary_name = "salary";

                public void end_salary(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __salary_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> begin_salary(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__salary_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_salary> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_salary>(this, __salary_name, salary_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__salary_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void salary_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_salary cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_salary(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool salary_async(com.XSanGo.Protocol.AMI_Role_salary cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> result__;
                    try
                    {
                        checkTwowayOnly__(__salary_name);
                        result__ = begin_salary();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_salary>(this, __salary_name, salary_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool salary_async(com.XSanGo.Protocol.AMI_Role_salary cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_salary> result__;
                    try
                    {
                        checkTwowayOnly__(__salary_name);
                        result__ = begin_salary(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_salary>(this, __salary_name, salary_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> begin_setHeadImage(string img)
                {
                    return begin_setHeadImage(img, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> begin_setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setHeadImage(img, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setHeadImage(string img, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setHeadImage(img, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setHeadImage(img, ctx__, true, cb__, cookie__);
                }

                private const string __setHeadImage_name = "setHeadImage";

                public void end_setHeadImage(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __setHeadImage_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> begin_setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__setHeadImage_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setHeadImage> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setHeadImage>(this, __setHeadImage_name, setHeadImage_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setHeadImage_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(img);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setHeadImage_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_setHeadImage cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_setHeadImage(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool setHeadImage_async(com.XSanGo.Protocol.AMI_Role_setHeadImage cb__, string img)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> result__;
                    try
                    {
                        checkTwowayOnly__(__setHeadImage_name);
                        result__ = begin_setHeadImage(img);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setHeadImage>(this, __setHeadImage_name, setHeadImage_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setHeadImage_async(com.XSanGo.Protocol.AMI_Role_setHeadImage cb__, string img, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setHeadImage> result__;
                    try
                    {
                        checkTwowayOnly__(__setHeadImage_name);
                        result__ = begin_setHeadImage(img, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setHeadImage>(this, __setHeadImage_name, setHeadImage_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb)
                {
                    return begin_setRoleCallback(cb, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setRoleCallback(cb, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setRoleCallback(cb, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setRoleCallback(cb, ctx__, true, cb__, cookie__);
                }

                private const string __setRoleCallback_name = "setRoleCallback";

                public string end_setRoleCallback(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __setRoleCallback_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        string ret__;
                        IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                        ret__ = is__.readString();
                        outAsync__.endReadParams__();
                        return ret__;
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> begin_setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__setRoleCallback_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setRoleCallback> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setRoleCallback>(this, __setRoleCallback_name, setRoleCallback_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setRoleCallback_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.RoleCallbackPrxHelper.write__(os__, cb);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setRoleCallback_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_setRoleCallback cb__, Ice.ExceptionCallback excb__)
                {
                    string ret__;
                    try
                    {
                        ret__ = end_setRoleCallback(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__(ret__);
                    }
                }

                public bool setRoleCallback_async(com.XSanGo.Protocol.AMI_Role_setRoleCallback cb__, com.XSanGo.Protocol.RoleCallbackPrx cb)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> result__;
                    try
                    {
                        checkTwowayOnly__(__setRoleCallback_name);
                        result__ = begin_setRoleCallback(cb);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setRoleCallback>(this, __setRoleCallback_name, setRoleCallback_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setRoleCallback_async(com.XSanGo.Protocol.AMI_Role_setRoleCallback cb__, com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setRoleCallback> result__;
                    try
                    {
                        checkTwowayOnly__(__setRoleCallback_name);
                        result__ = begin_setRoleCallback(cb, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setRoleCallback>(this, __setRoleCallback_name, setRoleCallback_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> begin_setSexAndName(int sex, string name, string inviteCode)
                {
                    return begin_setSexAndName(sex, name, inviteCode, null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> begin_setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_setSexAndName(sex, name, inviteCode, ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_setSexAndName(int sex, string name, string inviteCode, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setSexAndName(sex, name, inviteCode, null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_setSexAndName(sex, name, inviteCode, ctx__, true, cb__, cookie__);
                }

                private const string __setSexAndName_name = "setSexAndName";

                public void end_setSexAndName(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __setSexAndName_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> begin_setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__setSexAndName_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setSexAndName> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setSexAndName>(this, __setSexAndName_name, setSexAndName_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__setSexAndName_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeInt(sex);
                        os__.writeString(name);
                        os__.writeString(inviteCode);
                        result__.endWriteParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void setSexAndName_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_setSexAndName cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_setSexAndName(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool setSexAndName_async(com.XSanGo.Protocol.AMI_Role_setSexAndName cb__, int sex, string name, string inviteCode)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> result__;
                    try
                    {
                        checkTwowayOnly__(__setSexAndName_name);
                        result__ = begin_setSexAndName(sex, name, inviteCode);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setSexAndName>(this, __setSexAndName_name, setSexAndName_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool setSexAndName_async(com.XSanGo.Protocol.AMI_Role_setSexAndName cb__, int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_setSexAndName> result__;
                    try
                    {
                        checkTwowayOnly__(__setSexAndName_name);
                        result__ = begin_setSexAndName(sex, name, inviteCode, ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_setSexAndName>(this, __setSexAndName_name, setSexAndName_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> begin_xsgPing()
                {
                    return begin_xsgPing(null, false, null, null);
                }

                public Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> begin_xsgPing(_System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    return begin_xsgPing(ctx__, true, null, null);
                }

                public Ice.AsyncResult begin_xsgPing(Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_xsgPing(null, false, cb__, cookie__);
                }

                public Ice.AsyncResult begin_xsgPing(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                {
                    return begin_xsgPing(ctx__, true, cb__, cookie__);
                }

                private const string __xsgPing_name = "xsgPing";

                public void end_xsgPing(Ice.AsyncResult r__)
                {
                    IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                    IceInternal.OutgoingAsync.check__(outAsync__, this, __xsgPing_name);
                    bool ok__ = outAsync__.wait__();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                outAsync__.throwUserException__();
                            }
                            catch(com.XSanGo.Protocol.NoteException)
                            {
                                throw;
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        outAsync__.readEmptyParams__();
                    }
                    catch(Ice.LocalException ex)
                    {
                        Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                        if(obsv__ != null)
                        {
                            obsv__.failed(ex.ice_name());
                        }
                        throw ex;
                    }
                }

                private Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> begin_xsgPing(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
                {
                    checkAsyncTwowayOnly__(__xsgPing_name);
                    IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_xsgPing> result__ =  new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_xsgPing>(this, __xsgPing_name, xsgPing_completed__, cookie__);
                    if(cb__ != null)
                    {
                        result__.whenCompletedWithAsyncCallback(cb__);
                    }
                    try
                    {
                        result__.prepare__(__xsgPing_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                        result__.writeEmptyParams__();
                        result__.send__(true);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        result__.exceptionAsync__(ex__);
                    }
                    return result__;
                }

                private void xsgPing_completed__(Ice.AsyncResult r__, com.XSanGo.Protocol.Callback_Role_xsgPing cb__, Ice.ExceptionCallback excb__)
                {
                    try
                    {
                        end_xsgPing(r__);
                    }
                    catch(Ice.Exception ex__)
                    {
                        if(excb__ != null)
                        {
                            excb__(ex__);
                        }
                        return;
                    }
                    if(cb__ != null)
                    {
                        cb__();
                    }
                }

                public bool xsgPing_async(com.XSanGo.Protocol.AMI_Role_xsgPing cb__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> result__;
                    try
                    {
                        checkTwowayOnly__(__xsgPing_name);
                        result__ = begin_xsgPing();
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_xsgPing>(this, __xsgPing_name, xsgPing_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                public bool xsgPing_async(com.XSanGo.Protocol.AMI_Role_xsgPing cb__, _System.Collections.Generic.Dictionary<string, string> ctx__)
                {
                    Ice.AsyncResult<com.XSanGo.Protocol.Callback_Role_xsgPing> result__;
                    try
                    {
                        checkTwowayOnly__(__xsgPing_name);
                        result__ = begin_xsgPing(ctx__);
                    }
                    catch(Ice.TwowayOnlyException ex)
                    {
                        result__ = new IceInternal.TwowayOutgoingAsync<com.XSanGo.Protocol.Callback_Role_xsgPing>(this, __xsgPing_name, xsgPing_completed__, null);
                        ((IceInternal.OutgoingAsyncBase)result__).exceptionAsync__(ex);
                    }
                    result__.whenCompleted(cb__.response__, cb__.exception__);
                    if(cb__ is Ice.AMISentCallback)
                    {
                        result__.whenSent((Ice.AsyncCallback)cb__.sent__);
                    }
                    return result__.sentSynchronously();
                }

                #endregion

                #region Checked and unchecked cast operations

                public static RolePrx checkedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    RolePrx r = b as RolePrx;
                    if((r == null) && b.ice_isA(ice_staticId()))
                    {
                        RolePrxHelper h = new RolePrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static RolePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    RolePrx r = b as RolePrx;
                    if((r == null) && b.ice_isA(ice_staticId(), ctx))
                    {
                        RolePrxHelper h = new RolePrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static RolePrx checkedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId()))
                        {
                            RolePrxHelper h = new RolePrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static RolePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    try
                    {
                        if(bb.ice_isA(ice_staticId(), ctx))
                        {
                            RolePrxHelper h = new RolePrxHelper();
                            h.copyFrom__(bb);
                            return h;
                        }
                    }
                    catch(Ice.FacetNotExistException)
                    {
                    }
                    return null;
                }

                public static RolePrx uncheckedCast(Ice.ObjectPrx b)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    RolePrx r = b as RolePrx;
                    if(r == null)
                    {
                        RolePrxHelper h = new RolePrxHelper();
                        h.copyFrom__(b);
                        r = h;
                    }
                    return r;
                }

                public static RolePrx uncheckedCast(Ice.ObjectPrx b, string f)
                {
                    if(b == null)
                    {
                        return null;
                    }
                    Ice.ObjectPrx bb = b.ice_facet(f);
                    RolePrxHelper h = new RolePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }

                public static readonly string[] ids__ =
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Role"
                };

                public static string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Marshaling support

                protected override Ice.ObjectDelM_ createDelegateM__()
                {
                    return new RoleDelM_();
                }

                protected override Ice.ObjectDelD_ createDelegateD__()
                {
                    return new RoleDelD_();
                }

                public static void write__(IceInternal.BasicStream os__, RolePrx v__)
                {
                    os__.writeProxy(v__);
                }

                public static RolePrx read__(IceInternal.BasicStream is__)
                {
                    Ice.ObjectPrx proxy = is__.readProxy();
                    if(proxy != null)
                    {
                        RolePrxHelper result = new RolePrxHelper();
                        result.copyFrom__(proxy);
                        return result;
                    }
                    return null;
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleCallbackDel_ : Ice.ObjectDel_
            {
                void showRenameUI(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void showTips(string tips, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface RoleDel_ : Ice.ObjectDel_
            {
                string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string[] getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.RoleView[] getRoleViewList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.Property randomName(int sex, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void rename(string name, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void levelUp(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void salary(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                string getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void xsgPing(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

                void resetRole(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RoleCallbackDelM_ : Ice.ObjectDelM_, RoleCallbackDel_
            {
                public void factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("factionCopyState", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(roleName);
                            os__.writeString(icon);
                            os__.writeInt(vipLevel);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("heroChange", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            if(view == null)
                            {
                                com.XSanGo.Protocol.HeroView tmp__ = new com.XSanGo.Protocol.HeroView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                view.write__(os__);
                            }
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("itemChange", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            if(view == null)
                            {
                                com.XSanGo.Protocol.ItemView tmp__ = new com.XSanGo.Protocol.ItemView();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                view.write__(os__);
                            }
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("loginRankList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            if(listShow == null)
                            {
                                com.XSanGo.Protocol.LoadingRankList tmp__ = new com.XSanGo.Protocol.LoadingRankList();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                listShow.write__(os__);
                            }
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("pushMsgs", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(msgs);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("rolePropertyChange", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            if(pro == null)
                            {
                                com.XSanGo.Protocol.Property tmp__ = new com.XSanGo.Protocol.Property();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                pro.write__(os__);
                            }
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("showRedPointOnMajorUI", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            com.XSanGo.Protocol.MajorUIRedPointNoteSeqHelper.write(os__, points);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void showRenameUI(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("showRenameUI", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void showTips(string tips, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("showTips", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(tips);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RoleDelM_ : Ice.ObjectDelM_, RoleDel_
            {
                public void completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("completeGuide", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(guideId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getDuelStrategyConfig", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.DuelSkillTemplateView[] ret__;
                            ret__ = com.XSanGo.Protocol.DuelSkillTemplateViewSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getOtherPlayInfo", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(targetId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getReportView", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(reportId);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.RoleView[] getRoleViewList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getRoleViewList", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.RoleView[] ret__;
                            ret__ = com.XSanGo.Protocol.RoleViewSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string[] getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("getServerOpenTime", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string[] ret__;
                            ret__ = com.XSanGo.Protocol.StringSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void levelUp(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("levelUp", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("openCeremony", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(id);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.SceneDuelView[] ret__;
                            ret__ = com.XSanGo.Protocol.SceneDuelViewSeqHelper.read(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public com.XSanGo.Protocol.Property randomName(int sex, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("randomName", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(sex);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            com.XSanGo.Protocol.Property ret__;
                            ret__ = null;
                            if(ret__ == null)
                            {
                                ret__ = new com.XSanGo.Protocol.Property();
                            }
                            ret__.read__(is__);
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("readActivityAnnounce", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(id);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        if(og__.hasResponse())
                        {
                            try
                            {
                                if(!ok__)
                                {
                                    try
                                    {
                                        og__.throwUserException();
                                    }
                                    catch(Ice.UserException ex__)
                                    {
                                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                    }
                                }
                                og__.readEmptyParams();
                            }
                            catch(Ice.LocalException ex__)
                            {
                                throw new IceInternal.LocalExceptionWrapper(ex__, false);
                            }
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void rename(string name, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("rename", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(name);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NotEnoughYuanBaoException)
                                {
                                    throw;
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void resetRole(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("resetRole", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void salary(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("salary", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setHeadImage", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeString(img);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setRoleCallback", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            com.XSanGo.Protocol.RoleCallbackPrxHelper.write__(os__, cb);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            IceInternal.BasicStream is__ = og__.startReadParams();
                            string ret__;
                            ret__ = is__.readString();
                            og__.endReadParams();
                            return ret__;
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("setSexAndName", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(sex);
                            os__.writeString(name);
                            os__.writeString(inviteCode);
                            og__.endWriteParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            og__.abort(ex__);
                        }
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }

                public void xsgPing(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    IceInternal.Outgoing og__ = handler__.getOutgoing("xsgPing", Ice.OperationMode.Normal, context__, observer__);
                    try
                    {
                        og__.writeEmptyParams();
                        bool ok__ = og__.invoke();
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(com.XSanGo.Protocol.NoteException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                    finally
                    {
                        handler__.reclaimOutgoing(og__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RoleCallbackDelD_ : Ice.ObjectDelD_, RoleCallbackDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void factionCopyState(string roleName, string icon, int vipLevel, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "factionCopyState", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.factionCopyState(roleName, icon, vipLevel, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void heroChange(com.XSanGo.Protocol.HeroView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "heroChange", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.heroChange(view, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void itemChange(com.XSanGo.Protocol.ItemView view, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "itemChange", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.itemChange(view, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "loginRankList", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.loginRankList(listShow, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void pushMsgs(string msgs, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "pushMsgs", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.pushMsgs(msgs, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void rolePropertyChange(com.XSanGo.Protocol.Property pro, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "rolePropertyChange", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.rolePropertyChange(pro, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "showRedPointOnMajorUI", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.showRedPointOnMajorUI(points, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void showRenameUI(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "showRenameUI", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.showRenameUI(current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void showTips(string tips, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "showTips", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        RoleCallback servant__ = null;
                        try
                        {
                            servant__ = (RoleCallback)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.showTips(tips, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public sealed class RoleDelD_ : Ice.ObjectDelD_, RoleDel_
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void completeGuide(int guideId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "completeGuide", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.completeGuide(guideId, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getDuelStrategyConfig", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.DuelSkillTemplateView[] result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.getDuelStrategyConfig(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string getOtherPlayInfo(string targetId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string getReportView(string reportId, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getReportView", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.getReportView(reportId, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.RoleView[] getRoleViewList(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string[] getServerOpenTime(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "getServerOpenTime", Ice.OperationMode.Normal, context__);
                    string[] result__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        result__ = servant__.getServerOpenTime(current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void levelUp(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "levelUp", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.levelUp(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "openCeremony", Ice.OperationMode.Normal, context__);
                    com.XSanGo.Protocol.SceneDuelView[] result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.openCeremony(id, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public com.XSanGo.Protocol.Property randomName(int sex, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void readActivityAnnounce(int id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "readActivityAnnounce", Ice.OperationMode.Normal, context__);
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        servant__.readActivityAnnounce(id, current__);
                        return Ice.DispatchStatus.DispatchOK;
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void rename(string name, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void resetRole(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void salary(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "salary", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.salary(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void setHeadImage(string img, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "setHeadImage", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.setHeadImage(img, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "setRoleCallback", Ice.OperationMode.Normal, context__);
                    string result__ = null;
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            result__ = servant__.setRoleCallback(cb, current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                    return result__;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void setSexAndName(int sex, string name, string inviteCode, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    throw new Ice.CollocationOptimizationException();
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
                public void xsgPing(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
                {
                    Ice.Current current__ = new Ice.Current();
                    initCurrent__(ref current__, "xsgPing", Ice.OperationMode.Normal, context__);
                    Ice.UserException userException__ = null;
                    IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                    {
                        Role servant__ = null;
                        try
                        {
                            servant__ = (Role)obj__;
                        }
                        catch(_System.InvalidCastException)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }
                        try
                        {
                            servant__.xsgPing(current__);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(Ice.UserException ex__)
                        {
                            userException__ = ex__;
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    };
                    IceInternal.Direct direct__ = null;
                    try
                    {
                        direct__ = new IceInternal.Direct(current__, run__);
                        try
                        {
                            Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                            if(status__ == Ice.DispatchStatus.DispatchUserException)
                            {
                                throw userException__;
                            }
                            _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                        }
                        finally
                        {
                            direct__.destroy();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException)
                    {
                        throw;
                    }
                    catch(Ice.SystemException)
                    {
                        throw;
                    }
                    catch(_System.Exception ex__)
                    {
                        IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                    }
                }
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class RoleCallbackDisp_ : Ice.ObjectImpl, RoleCallback
            {
                #region Slice operations

                public void showRenameUI()
                {
                    showRenameUI(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void showRenameUI(Ice.Current current__);

                public void rolePropertyChange(com.XSanGo.Protocol.Property pro)
                {
                    rolePropertyChange(pro, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void rolePropertyChange(com.XSanGo.Protocol.Property pro, Ice.Current current__);

                public void heroChange(com.XSanGo.Protocol.HeroView view)
                {
                    heroChange(view, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void heroChange(com.XSanGo.Protocol.HeroView view, Ice.Current current__);

                public void itemChange(com.XSanGo.Protocol.ItemView view)
                {
                    itemChange(view, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void itemChange(com.XSanGo.Protocol.ItemView view, Ice.Current current__);

                public void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points)
                {
                    showRedPointOnMajorUI(points, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void showRedPointOnMajorUI(com.XSanGo.Protocol.MajorUIRedPointNote[] points, Ice.Current current__);

                public void showTips(string tips)
                {
                    showTips(tips, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void showTips(string tips, Ice.Current current__);

                public void pushMsgs(string msgs)
                {
                    pushMsgs(msgs, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void pushMsgs(string msgs, Ice.Current current__);

                public void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow)
                {
                    loginRankList(listShow, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void loginRankList(com.XSanGo.Protocol.LoadingRankList listShow, Ice.Current current__);

                public void factionCopyState(string roleName, string icon, int vipLevel)
                {
                    factionCopyState(roleName, icon, vipLevel, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void factionCopyState(string roleName, string icon, int vipLevel, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::RoleCallback"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus showRenameUI___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    obj__.showRenameUI(current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus rolePropertyChange___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.Property pro;
                    pro = null;
                    if(pro == null)
                    {
                        pro = new com.XSanGo.Protocol.Property();
                    }
                    pro.read__(is__);
                    inS__.endReadParams();
                    obj__.rolePropertyChange(pro, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus heroChange___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.HeroView view;
                    view = null;
                    if(view == null)
                    {
                        view = new com.XSanGo.Protocol.HeroView();
                    }
                    view.read__(is__);
                    inS__.endReadParams();
                    obj__.heroChange(view, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus itemChange___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.ItemView view;
                    view = null;
                    if(view == null)
                    {
                        view = new com.XSanGo.Protocol.ItemView();
                    }
                    view.read__(is__);
                    inS__.endReadParams();
                    obj__.itemChange(view, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus showRedPointOnMajorUI___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.MajorUIRedPointNote[] points;
                    points = com.XSanGo.Protocol.MajorUIRedPointNoteSeqHelper.read(is__);
                    inS__.endReadParams();
                    obj__.showRedPointOnMajorUI(points, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus showTips___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string tips;
                    tips = is__.readString();
                    inS__.endReadParams();
                    obj__.showTips(tips, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus pushMsgs___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string msgs;
                    msgs = is__.readString();
                    inS__.endReadParams();
                    obj__.pushMsgs(msgs, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus loginRankList___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.LoadingRankList listShow;
                    listShow = null;
                    if(listShow == null)
                    {
                        listShow = new com.XSanGo.Protocol.LoadingRankList();
                    }
                    listShow.read__(is__);
                    inS__.endReadParams();
                    obj__.loginRankList(listShow, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus factionCopyState___(RoleCallback obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string roleName;
                    string icon;
                    int vipLevel;
                    roleName = is__.readString();
                    icon = is__.readString();
                    vipLevel = is__.readInt();
                    inS__.endReadParams();
                    obj__.factionCopyState(roleName, icon, vipLevel, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                private static string[] all__ =
                {
                    "factionCopyState",
                    "heroChange",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "itemChange",
                    "loginRankList",
                    "pushMsgs",
                    "rolePropertyChange",
                    "showRedPointOnMajorUI",
                    "showRenameUI",
                    "showTips"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return factionCopyState___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return heroChange___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return itemChange___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return loginRankList___(this, inS__, current__);
                        }
                        case 8:
                        {
                            return pushMsgs___(this, inS__, current__);
                        }
                        case 9:
                        {
                            return rolePropertyChange___(this, inS__, current__);
                        }
                        case 10:
                        {
                            return showRedPointOnMajorUI___(this, inS__, current__);
                        }
                        case 11:
                        {
                            return showRenameUI___(this, inS__, current__);
                        }
                        case 12:
                        {
                            return showTips___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class RoleDisp_ : Ice.ObjectImpl, Role
            {
                #region Slice operations

                public string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb)
                {
                    return setRoleCallback(cb, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string setRoleCallback(com.XSanGo.Protocol.RoleCallbackPrx cb, Ice.Current current__);

                public string[] getServerOpenTime()
                {
                    return getServerOpenTime(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string[] getServerOpenTime(Ice.Current current__);

                public void getRoleViewList_async(com.XSanGo.Protocol.AMD_Role_getRoleViewList cb__)
                {
                    getRoleViewList_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void getRoleViewList_async(com.XSanGo.Protocol.AMD_Role_getRoleViewList cb__, Ice.Current current__);

                public void randomName_async(com.XSanGo.Protocol.AMD_Role_randomName cb__, int sex)
                {
                    randomName_async(cb__, sex, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void randomName_async(com.XSanGo.Protocol.AMD_Role_randomName cb__, int sex, Ice.Current current__);

                public void setSexAndName_async(com.XSanGo.Protocol.AMD_Role_setSexAndName cb__, int sex, string name, string inviteCode)
                {
                    setSexAndName_async(cb__, sex, name, inviteCode, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void setSexAndName_async(com.XSanGo.Protocol.AMD_Role_setSexAndName cb__, int sex, string name, string inviteCode, Ice.Current current__);

                public void rename_async(com.XSanGo.Protocol.AMD_Role_rename cb__, string name)
                {
                    rename_async(cb__, name, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void rename_async(com.XSanGo.Protocol.AMD_Role_rename cb__, string name, Ice.Current current__);

                public void levelUp()
                {
                    levelUp(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void levelUp(Ice.Current current__);

                public void readActivityAnnounce(int id)
                {
                    readActivityAnnounce(id, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void readActivityAnnounce(int id, Ice.Current current__);

                public void salary()
                {
                    salary(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void salary(Ice.Current current__);

                public void getOtherPlayInfo_async(com.XSanGo.Protocol.AMD_Role_getOtherPlayInfo cb__, string targetId)
                {
                    getOtherPlayInfo_async(cb__, targetId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void getOtherPlayInfo_async(com.XSanGo.Protocol.AMD_Role_getOtherPlayInfo cb__, string targetId, Ice.Current current__);

                public void setHeadImage(string img)
                {
                    setHeadImage(img, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void setHeadImage(string img, Ice.Current current__);

                public string getReportView(string reportId)
                {
                    return getReportView(reportId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract string getReportView(string reportId, Ice.Current current__);

                public void completeGuide(int guideId)
                {
                    completeGuide(guideId, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void completeGuide(int guideId, Ice.Current current__);

                public com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id)
                {
                    return openCeremony(id, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.SceneDuelView[] openCeremony(int id, Ice.Current current__);

                public com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig()
                {
                    return getDuelStrategyConfig(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract com.XSanGo.Protocol.DuelSkillTemplateView[] getDuelStrategyConfig(Ice.Current current__);

                public void xsgPing()
                {
                    xsgPing(Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void xsgPing(Ice.Current current__);

                public void resetRole_async(com.XSanGo.Protocol.AMD_Role_resetRole cb__)
                {
                    resetRole_async(cb__, Ice.ObjectImpl.defaultCurrent);
                }

                public abstract void resetRole_async(com.XSanGo.Protocol.AMD_Role_resetRole cb__, Ice.Current current__);

                #endregion

                #region Slice type-related members

                public static new readonly string[] ids__ = 
                {
                    "::Ice::Object",
                    "::com::XSanGo::Protocol::Role"
                };

                public override bool ice_isA(string s)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override bool ice_isA(string s, Ice.Current current__)
                {
                    return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                }

                public override string[] ice_ids()
                {
                    return ids__;
                }

                public override string[] ice_ids(Ice.Current current__)
                {
                    return ids__;
                }

                public override string ice_id()
                {
                    return ids__[1];
                }

                public override string ice_id(Ice.Current current__)
                {
                    return ids__[1];
                }

                public static new string ice_staticId()
                {
                    return ids__[1];
                }

                #endregion

                #region Operation dispatch

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setRoleCallback___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    com.XSanGo.Protocol.RoleCallbackPrx cb;
                    cb = com.XSanGo.Protocol.RoleCallbackPrxHelper.read__(is__);
                    inS__.endReadParams();
                    try
                    {
                        string ret__ = obj__.setRoleCallback(cb, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getServerOpenTime___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    string[] ret__ = obj__.getServerOpenTime(current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    com.XSanGo.Protocol.StringSeqHelper.write(os__, ret__);
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getRoleViewList___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Role_getRoleViewList cb__ = new _AMD_Role_getRoleViewList(inS__);
                    try
                    {
                        obj__.getRoleViewList_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus randomName___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int sex;
                    sex = is__.readInt();
                    inS__.endReadParams();
                    AMD_Role_randomName cb__ = new _AMD_Role_randomName(inS__);
                    try
                    {
                        obj__.randomName_async(cb__, sex, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setSexAndName___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int sex;
                    string name;
                    string inviteCode;
                    sex = is__.readInt();
                    name = is__.readString();
                    inviteCode = is__.readString();
                    inS__.endReadParams();
                    AMD_Role_setSexAndName cb__ = new _AMD_Role_setSexAndName(inS__);
                    try
                    {
                        obj__.setSexAndName_async(cb__, sex, name, inviteCode, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus rename___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string name;
                    name = is__.readString();
                    inS__.endReadParams();
                    AMD_Role_rename cb__ = new _AMD_Role_rename(inS__);
                    try
                    {
                        obj__.rename_async(cb__, name, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus levelUp___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.levelUp(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus readActivityAnnounce___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int id;
                    id = is__.readInt();
                    inS__.endReadParams();
                    obj__.readActivityAnnounce(id, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus salary___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.salary(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getOtherPlayInfo___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string targetId;
                    targetId = is__.readString();
                    inS__.endReadParams();
                    AMD_Role_getOtherPlayInfo cb__ = new _AMD_Role_getOtherPlayInfo(inS__);
                    try
                    {
                        obj__.getOtherPlayInfo_async(cb__, targetId, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus setHeadImage___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string img;
                    img = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        obj__.setHeadImage(img, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getReportView___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    string reportId;
                    reportId = is__.readString();
                    inS__.endReadParams();
                    try
                    {
                        string ret__ = obj__.getReportView(reportId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeString(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus completeGuide___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int guideId;
                    guideId = is__.readInt();
                    inS__.endReadParams();
                    obj__.completeGuide(guideId, current__);
                    inS__.writeEmptyParams__();
                    return Ice.DispatchStatus.DispatchOK;
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus openCeremony___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    IceInternal.BasicStream is__ = inS__.startReadParams();
                    int id;
                    id = is__.readInt();
                    inS__.endReadParams();
                    try
                    {
                        com.XSanGo.Protocol.SceneDuelView[] ret__ = obj__.openCeremony(id, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.SceneDuelViewSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus getDuelStrategyConfig___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        com.XSanGo.Protocol.DuelSkillTemplateView[] ret__ = obj__.getDuelStrategyConfig(current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        com.XSanGo.Protocol.DuelSkillTemplateViewSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus xsgPing___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    try
                    {
                        obj__.xsgPing(current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                        return Ice.DispatchStatus.DispatchUserException;
                    }
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                public static Ice.DispatchStatus resetRole___(Role obj__, IceInternal.Incoming inS__, Ice.Current current__)
                {
                    checkMode__(Ice.OperationMode.Normal, current__.mode);
                    inS__.readEmptyParams();
                    AMD_Role_resetRole cb__ = new _AMD_Role_resetRole(inS__);
                    try
                    {
                        obj__.resetRole_async(cb__, current__);
                    }
                    catch(_System.Exception ex__)
                    {
                        cb__.ice_exception(ex__);
                    }
                    return Ice.DispatchStatus.DispatchAsync;
                }

                private static string[] all__ =
                {
                    "completeGuide",
                    "getDuelStrategyConfig",
                    "getOtherPlayInfo",
                    "getReportView",
                    "getRoleViewList",
                    "getServerOpenTime",
                    "ice_id",
                    "ice_ids",
                    "ice_isA",
                    "ice_ping",
                    "levelUp",
                    "openCeremony",
                    "randomName",
                    "readActivityAnnounce",
                    "rename",
                    "resetRole",
                    "salary",
                    "setHeadImage",
                    "setRoleCallback",
                    "setSexAndName",
                    "xsgPing"
                };

                public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                {
                    int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                    if(pos < 0)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    switch(pos)
                    {
                        case 0:
                        {
                            return completeGuide___(this, inS__, current__);
                        }
                        case 1:
                        {
                            return getDuelStrategyConfig___(this, inS__, current__);
                        }
                        case 2:
                        {
                            return getOtherPlayInfo___(this, inS__, current__);
                        }
                        case 3:
                        {
                            return getReportView___(this, inS__, current__);
                        }
                        case 4:
                        {
                            return getRoleViewList___(this, inS__, current__);
                        }
                        case 5:
                        {
                            return getServerOpenTime___(this, inS__, current__);
                        }
                        case 6:
                        {
                            return ice_id___(this, inS__, current__);
                        }
                        case 7:
                        {
                            return ice_ids___(this, inS__, current__);
                        }
                        case 8:
                        {
                            return ice_isA___(this, inS__, current__);
                        }
                        case 9:
                        {
                            return ice_ping___(this, inS__, current__);
                        }
                        case 10:
                        {
                            return levelUp___(this, inS__, current__);
                        }
                        case 11:
                        {
                            return openCeremony___(this, inS__, current__);
                        }
                        case 12:
                        {
                            return randomName___(this, inS__, current__);
                        }
                        case 13:
                        {
                            return readActivityAnnounce___(this, inS__, current__);
                        }
                        case 14:
                        {
                            return rename___(this, inS__, current__);
                        }
                        case 15:
                        {
                            return resetRole___(this, inS__, current__);
                        }
                        case 16:
                        {
                            return salary___(this, inS__, current__);
                        }
                        case 17:
                        {
                            return setHeadImage___(this, inS__, current__);
                        }
                        case 18:
                        {
                            return setRoleCallback___(this, inS__, current__);
                        }
                        case 19:
                        {
                            return setSexAndName___(this, inS__, current__);
                        }
                        case 20:
                        {
                            return xsgPing___(this, inS__, current__);
                        }
                    }

                    _System.Diagnostics.Debug.Assert(false);
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                #endregion

                #region Marshaling support

                protected override void writeImpl__(IceInternal.BasicStream os__)
                {
                    os__.startWriteSlice(ice_staticId(), -1, true);
                    os__.endWriteSlice();
                }

                protected override void readImpl__(IceInternal.BasicStream is__)
                {
                    is__.startReadSlice();
                    is__.endReadSlice();
                }

                #endregion
            }
        }
    }
}

namespace com
{
    namespace XSanGo
    {
        namespace Protocol
        {
            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_showRenameUI : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_rolePropertyChange : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_heroChange : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_itemChange : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_showRedPointOnMajorUI : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_showTips : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_pushMsgs : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_loginRankList : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_RoleCallback_factionCopyState : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_setRoleCallback : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_getServerOpenTime : Ice.AMICallbackBase
            {
                public abstract void ice_response(string[] ret__);

                public void response__(string[] ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_getRoleViewList : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.RoleView[] ret__);

                public void response__(com.XSanGo.Protocol.RoleView[] ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Role_getRoleViewList : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.RoleView[] ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Role_getRoleViewList : IceInternal.IncomingAsync, AMD_Role_getRoleViewList
            {
                public _AMD_Role_getRoleViewList(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.RoleView[] ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            com.XSanGo.Protocol.RoleViewSeqHelper.write(os__, ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_randomName : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.Property ret__);

                public void response__(com.XSanGo.Protocol.Property ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Role_randomName : Ice.AMDCallback
            {
                void ice_response(com.XSanGo.Protocol.Property ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Role_randomName : IceInternal.IncomingAsync, AMD_Role_randomName
            {
                public _AMD_Role_randomName(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(com.XSanGo.Protocol.Property ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            if(ret__ == null)
                            {
                                com.XSanGo.Protocol.Property tmp__ = new com.XSanGo.Protocol.Property();
                                tmp__.write__(os__);
                            }
                            else
                            {
                                ret__.write__(os__);
                            }
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_setSexAndName : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Role_setSexAndName : Ice.AMDCallback
            {
                void ice_response();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Role_setSexAndName : IceInternal.IncomingAsync, AMD_Role_setSexAndName
            {
                public _AMD_Role_setSexAndName(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response()
                {
                    if(validateResponse__(true))
                    {
                        writeEmptyParams__();
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_rename : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Role_rename : Ice.AMDCallback
            {
                void ice_response();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Role_rename : IceInternal.IncomingAsync, AMD_Role_rename
            {
                public _AMD_Role_rename(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response()
                {
                    if(validateResponse__(true))
                    {
                        writeEmptyParams__();
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NotEnoughYuanBaoException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_levelUp : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_readActivityAnnounce : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_salary : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_getOtherPlayInfo : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Role_getOtherPlayInfo : Ice.AMDCallback
            {
                void ice_response(string ret__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Role_getOtherPlayInfo : IceInternal.IncomingAsync, AMD_Role_getOtherPlayInfo
            {
                public _AMD_Role_getOtherPlayInfo(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response(string ret__)
                {
                    if(validateResponse__(true))
                    {
                        try
                        {
                            IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeString(ret__);
                            endWriteParams__(true);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            exception__(ex__);
                            return;
                        }
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_setHeadImage : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_getReportView : Ice.AMICallbackBase
            {
                public abstract void ice_response(string ret__);

                public void response__(string ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_completeGuide : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_openCeremony : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.SceneDuelView[] ret__);

                public void response__(com.XSanGo.Protocol.SceneDuelView[] ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_getDuelStrategyConfig : Ice.AMICallbackBase
            {
                public abstract void ice_response(com.XSanGo.Protocol.DuelSkillTemplateView[] ret__);

                public void response__(com.XSanGo.Protocol.DuelSkillTemplateView[] ret__)
                {
                    ice_response(ret__);
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_xsgPing : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public abstract class AMI_Role_resetRole : Ice.AMICallbackBase
            {
                public abstract void ice_response();

                public void response__()
                {
                    ice_response();
                }
            }

            [_System.Runtime.InteropServices.ComVisible(false)]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public interface AMD_Role_resetRole : Ice.AMDCallback
            {
                void ice_response();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            class _AMD_Role_resetRole : IceInternal.IncomingAsync, AMD_Role_resetRole
            {
                public _AMD_Role_resetRole(IceInternal.Incoming inc) : base(inc)
                {
                }

                public void ice_response()
                {
                    if(validateResponse__(true))
                    {
                        writeEmptyParams__();
                        response__();
                    }
                }

                override public void ice_exception(_System.Exception ex)
                {
                    try
                    {
                        throw ex;
                    }
                    catch(com.XSanGo.Protocol.NoteException ex__)
                    {
                        if(validateResponse__(false))
                        {
                            writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            response__();
                        }
                    }
                    catch(_System.Exception ex__)
                    {
                        base.ice_exception(ex__);
                    }
                }
            }
        }
    }
}
