// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Achieve.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class AchieveProAwardSub implements java.lang.Cloneable, java.io.Serializable
{
    public int progress;

    public IntString[] awards;

    public int status;

    public String tipstx;

    public AchieveProAwardSub()
    {
    }

    public AchieveProAwardSub(int progress, IntString[] awards, int status, String tipstx)
    {
        this.progress = progress;
        this.awards = awards;
        this.status = status;
        this.tipstx = tipstx;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        AchieveProAwardSub _r = null;
        if(rhs instanceof AchieveProAwardSub)
        {
            _r = (AchieveProAwardSub)rhs;
        }

        if(_r != null)
        {
            if(progress != _r.progress)
            {
                return false;
            }
            if(!java.util.Arrays.equals(awards, _r.awards))
            {
                return false;
            }
            if(status != _r.status)
            {
                return false;
            }
            if(tipstx != _r.tipstx)
            {
                if(tipstx == null || _r.tipstx == null || !tipstx.equals(_r.tipstx))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::AchieveProAwardSub");
        __h = IceInternal.HashUtil.hashAdd(__h, progress);
        __h = IceInternal.HashUtil.hashAdd(__h, awards);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        __h = IceInternal.HashUtil.hashAdd(__h, tipstx);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(progress);
        IntStringSeqHelper.write(__os, awards);
        __os.writeInt(status);
        __os.writeString(tipstx);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        progress = __is.readInt();
        awards = IntStringSeqHelper.read(__is);
        status = __is.readInt();
        tipstx = __is.readString();
    }

    public static final long serialVersionUID = 1374360132L;
}
