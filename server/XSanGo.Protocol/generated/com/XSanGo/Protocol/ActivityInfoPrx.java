// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface ActivityInfoPrx extends Ice.ObjectPrx
{
    /**
     * 活动列表 lua格式activityInfoAll
     **/
    public String activityList()
        throws NoteException;

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __ctx The Context map to send with the invocation.
     **/
    public String activityList(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 活动列表 lua格式activityInfoAll
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_activityList();

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_activityList(java.util.Map<String, String> __ctx);

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_activityList(Ice.Callback __cb);

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_activityList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_activityList(Callback_ActivityInfo_activityList __cb);

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_activityList(java.util.Map<String, String> __ctx, Callback_ActivityInfo_activityList __cb);

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __result The asynchronous result object.
     **/
    public String end_activityList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __cb The callback object for the operation.
     **/
    public boolean activityList_async(AMI_ActivityInfo_activityList __cb);

    /**
     * 活动列表 lua格式activityInfoAll
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean activityList_async(AMI_ActivityInfo_activityList __cb, java.util.Map<String, String> __ctx);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     **/
    public String upActivityInfoList()
        throws NoteException;

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __ctx The Context map to send with the invocation.
     **/
    public String upActivityInfoList(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upActivityInfoList();

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upActivityInfoList(java.util.Map<String, String> __ctx);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upActivityInfoList(Ice.Callback __cb);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upActivityInfoList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upActivityInfoList(Callback_ActivityInfo_upActivityInfoList __cb);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upActivityInfoList(java.util.Map<String, String> __ctx, Callback_ActivityInfo_upActivityInfoList __cb);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __result The asynchronous result object.
     **/
    public String end_upActivityInfoList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __cb The callback object for the operation.
     **/
    public boolean upActivityInfoList_async(AMI_ActivityInfo_upActivityInfoList __cb);

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean upActivityInfoList_async(AMI_ActivityInfo_upActivityInfoList __cb, java.util.Map<String, String> __ctx);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     **/
    public boolean getGift(int giftId)
        throws NoteException;

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getGift(int giftId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGift(int giftId);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGift(int giftId, java.util.Map<String, String> __ctx);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGift(int giftId, Ice.Callback __cb);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGift(int giftId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGift(int giftId, Callback_ActivityInfo_getGift __cb);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGift(int giftId, java.util.Map<String, String> __ctx, Callback_ActivityInfo_getGift __cb);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __result The asynchronous result object.
     **/
    public boolean end_getGift(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __cb The callback object for the operation.
     **/
    public boolean getGift_async(AMI_ActivityInfo_getGift __cb, int giftId);

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getGift_async(AMI_ActivityInfo_getGift __cb, int giftId, java.util.Map<String, String> __ctx);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     **/
    public boolean clickMakeVip();

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean clickMakeVip(java.util.Map<String, String> __ctx);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clickMakeVip();

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clickMakeVip(java.util.Map<String, String> __ctx);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clickMakeVip(Ice.Callback __cb);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clickMakeVip(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clickMakeVip(Callback_ActivityInfo_clickMakeVip __cb);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clickMakeVip(java.util.Map<String, String> __ctx, Callback_ActivityInfo_clickMakeVip __cb);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __result The asynchronous result object.
     **/
    public boolean end_clickMakeVip(Ice.AsyncResult __result);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __cb The callback object for the operation.
     **/
    public boolean clickMakeVip_async(AMI_ActivityInfo_clickMakeVip __cb);

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean clickMakeVip_async(AMI_ActivityInfo_clickMakeVip __cb, java.util.Map<String, String> __ctx);

    /**
     * 开始答题 id,id,id
     **/
    public String beginAnswer()
        throws NoteException;

    /**
     * 开始答题 id,id,id
     * @param __ctx The Context map to send with the invocation.
     **/
    public String beginAnswer(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 开始答题 id,id,id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginAnswer();

    /**
     * 开始答题 id,id,id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginAnswer(java.util.Map<String, String> __ctx);

    /**
     * 开始答题 id,id,id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginAnswer(Ice.Callback __cb);

    /**
     * 开始答题 id,id,id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginAnswer(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 开始答题 id,id,id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginAnswer(Callback_ActivityInfo_beginAnswer __cb);

    /**
     * 开始答题 id,id,id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginAnswer(java.util.Map<String, String> __ctx, Callback_ActivityInfo_beginAnswer __cb);

    /**
     * 开始答题 id,id,id
     * @param __result The asynchronous result object.
     **/
    public String end_beginAnswer(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 开始答题 id,id,id
     * @param __cb The callback object for the operation.
     **/
    public boolean beginAnswer_async(AMI_ActivityInfo_beginAnswer __cb);

    /**
     * 开始答题 id,id,id
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean beginAnswer_async(AMI_ActivityInfo_beginAnswer __cb, java.util.Map<String, String> __ctx);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     **/
    public int endAnswer(String str)
        throws NoteException;

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __ctx The Context map to send with the invocation.
     **/
    public int endAnswer(String str, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endAnswer(String str);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endAnswer(String str, java.util.Map<String, String> __ctx);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endAnswer(String str, Ice.Callback __cb);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endAnswer(String str, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endAnswer(String str, Callback_ActivityInfo_endAnswer __cb);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endAnswer(String str, java.util.Map<String, String> __ctx, Callback_ActivityInfo_endAnswer __cb);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __result The asynchronous result object.
     **/
    public int end_endAnswer(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __cb The callback object for the operation.
     **/
    public boolean endAnswer_async(AMI_ActivityInfo_endAnswer __cb, String str);

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean endAnswer_async(AMI_ActivityInfo_endAnswer __cb, String str, java.util.Map<String, String> __ctx);

    public String getSummationActivityViewForCharge()
        throws NoteException;

    public String getSummationActivityViewForCharge(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getSummationActivityViewForCharge();

    public Ice.AsyncResult begin_getSummationActivityViewForCharge(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSummationActivityViewForCharge(Ice.Callback __cb);

    public Ice.AsyncResult begin_getSummationActivityViewForCharge(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSummationActivityViewForCharge(Callback_ActivityInfo_getSummationActivityViewForCharge __cb);

    public Ice.AsyncResult begin_getSummationActivityViewForCharge(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getSummationActivityViewForCharge __cb);

    public String end_getSummationActivityViewForCharge(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getSummationActivityViewForCharge_async(AMI_ActivityInfo_getSummationActivityViewForCharge __cb);

    public boolean getSummationActivityViewForCharge_async(AMI_ActivityInfo_getSummationActivityViewForCharge __cb, java.util.Map<String, String> __ctx);

    public void receiveRewardForSumCharge(int threshold)
        throws NotEnoughYuanBaoException,
               NoteException;

    public void receiveRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_receiveRewardForSumCharge(int threshold);

    public Ice.AsyncResult begin_receiveRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_receiveRewardForSumCharge(int threshold, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveRewardForSumCharge(int threshold, Callback_ActivityInfo_receiveRewardForSumCharge __cb);

    public Ice.AsyncResult begin_receiveRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveRewardForSumCharge __cb);

    public void end_receiveRewardForSumCharge(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean receiveRewardForSumCharge_async(AMI_ActivityInfo_receiveRewardForSumCharge __cb, int threshold);

    public boolean receiveRewardForSumCharge_async(AMI_ActivityInfo_receiveRewardForSumCharge __cb, int threshold, java.util.Map<String, String> __ctx);

    public String getSummationActivityViewForConsume()
        throws NoteException;

    public String getSummationActivityViewForConsume(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getSummationActivityViewForConsume();

    public Ice.AsyncResult begin_getSummationActivityViewForConsume(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSummationActivityViewForConsume(Ice.Callback __cb);

    public Ice.AsyncResult begin_getSummationActivityViewForConsume(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSummationActivityViewForConsume(Callback_ActivityInfo_getSummationActivityViewForConsume __cb);

    public Ice.AsyncResult begin_getSummationActivityViewForConsume(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getSummationActivityViewForConsume __cb);

    public String end_getSummationActivityViewForConsume(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getSummationActivityViewForConsume_async(AMI_ActivityInfo_getSummationActivityViewForConsume __cb);

    public boolean getSummationActivityViewForConsume_async(AMI_ActivityInfo_getSummationActivityViewForConsume __cb, java.util.Map<String, String> __ctx);

    public void receiveRewardForSumConsume(int threshold)
        throws NotEnoughYuanBaoException,
               NoteException;

    public void receiveRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_receiveRewardForSumConsume(int threshold);

    public Ice.AsyncResult begin_receiveRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_receiveRewardForSumConsume(int threshold, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveRewardForSumConsume(int threshold, Callback_ActivityInfo_receiveRewardForSumConsume __cb);

    public Ice.AsyncResult begin_receiveRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveRewardForSumConsume __cb);

    public void end_receiveRewardForSumConsume(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean receiveRewardForSumConsume_async(AMI_ActivityInfo_receiveRewardForSumConsume __cb, int threshold);

    public boolean receiveRewardForSumConsume_async(AMI_ActivityInfo_receiveRewardForSumConsume __cb, int threshold, java.util.Map<String, String> __ctx);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     **/
    public String getInviteActivityView()
        throws NoteException;

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getInviteActivityView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getInviteActivityView();

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getInviteActivityView(java.util.Map<String, String> __ctx);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getInviteActivityView(Ice.Callback __cb);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getInviteActivityView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getInviteActivityView(Callback_ActivityInfo_getInviteActivityView __cb);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getInviteActivityView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getInviteActivityView __cb);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getInviteActivityView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getInviteActivityView_async(AMI_ActivityInfo_getInviteActivityView __cb);

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getInviteActivityView_async(AMI_ActivityInfo_getInviteActivityView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取邀请好友奖励
     **/
    public void receiveRewardForInvite(int threshoId)
        throws NoteException;

    /**
     * 领取邀请好友奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveRewardForInvite(int threshoId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取邀请好友奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveRewardForInvite(int threshoId);

    /**
     * 领取邀请好友奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveRewardForInvite(int threshoId, java.util.Map<String, String> __ctx);

    /**
     * 领取邀请好友奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveRewardForInvite(int threshoId, Ice.Callback __cb);

    /**
     * 领取邀请好友奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveRewardForInvite(int threshoId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取邀请好友奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveRewardForInvite(int threshoId, Callback_ActivityInfo_receiveRewardForInvite __cb);

    /**
     * 领取邀请好友奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveRewardForInvite(int threshoId, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveRewardForInvite __cb);

    /**
     * 领取邀请好友奖励
     * @param __result The asynchronous result object.
     **/
    public void end_receiveRewardForInvite(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取邀请好友奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveRewardForInvite_async(AMI_ActivityInfo_receiveRewardForInvite __cb, int threshoId);

    /**
     * 领取邀请好友奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveRewardForInvite_async(AMI_ActivityInfo_receiveRewardForInvite __cb, int threshoId, java.util.Map<String, String> __ctx);

    public String getFundView()
        throws NoteException;

    public String getFundView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getFundView();

    public Ice.AsyncResult begin_getFundView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFundView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getFundView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getFundView(Callback_ActivityInfo_getFundView __cb);

    public Ice.AsyncResult begin_getFundView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getFundView __cb);

    public String end_getFundView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getFundView_async(AMI_ActivityInfo_getFundView __cb);

    public boolean getFundView_async(AMI_ActivityInfo_getFundView __cb, java.util.Map<String, String> __ctx);

    public void acceptFundReward(int level)
        throws NoteException;

    public void acceptFundReward(int level, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_acceptFundReward(int level);

    public Ice.AsyncResult begin_acceptFundReward(int level, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptFundReward(int level, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptFundReward(int level, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptFundReward(int level, Callback_ActivityInfo_acceptFundReward __cb);

    public Ice.AsyncResult begin_acceptFundReward(int level, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptFundReward __cb);

    public void end_acceptFundReward(Ice.AsyncResult __result)
        throws NoteException;

    public boolean acceptFundReward_async(AMI_ActivityInfo_acceptFundReward __cb, int level);

    public boolean acceptFundReward_async(AMI_ActivityInfo_acceptFundReward __cb, int level, java.util.Map<String, String> __ctx);

    public void buyFund()
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    public void buyFund(java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_buyFund();

    public Ice.AsyncResult begin_buyFund(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_buyFund(Ice.Callback __cb);

    public Ice.AsyncResult begin_buyFund(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_buyFund(Callback_ActivityInfo_buyFund __cb);

    public Ice.AsyncResult begin_buyFund(java.util.Map<String, String> __ctx, Callback_ActivityInfo_buyFund __cb);

    public void end_buyFund(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    public boolean buyFund_async(AMI_ActivityInfo_buyFund __cb);

    public boolean buyFund_async(AMI_ActivityInfo_buyFund __cb, java.util.Map<String, String> __ctx);

    public String getLevelRewardView()
        throws NoteException;

    public String getLevelRewardView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getLevelRewardView();

    public Ice.AsyncResult begin_getLevelRewardView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLevelRewardView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getLevelRewardView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getLevelRewardView(Callback_ActivityInfo_getLevelRewardView __cb);

    public Ice.AsyncResult begin_getLevelRewardView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getLevelRewardView __cb);

    public String end_getLevelRewardView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getLevelRewardView_async(AMI_ActivityInfo_getLevelRewardView __cb);

    public boolean getLevelRewardView_async(AMI_ActivityInfo_getLevelRewardView __cb, java.util.Map<String, String> __ctx);

    public void acceptLevelReward(int level)
        throws NotEnoughMoneyException,
               NoteException;

    public void acceptLevelReward(int level, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_acceptLevelReward(int level);

    public Ice.AsyncResult begin_acceptLevelReward(int level, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptLevelReward(int level, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptLevelReward(int level, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptLevelReward(int level, Callback_ActivityInfo_acceptLevelReward __cb);

    public Ice.AsyncResult begin_acceptLevelReward(int level, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptLevelReward __cb);

    public void end_acceptLevelReward(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean acceptLevelReward_async(AMI_ActivityInfo_acceptLevelReward __cb, int level);

    public boolean acceptLevelReward_async(AMI_ActivityInfo_acceptLevelReward __cb, int level, java.util.Map<String, String> __ctx);

    public String getFirstJiaRewardView()
        throws NoteException;

    public String getFirstJiaRewardView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getFirstJiaRewardView();

    public Ice.AsyncResult begin_getFirstJiaRewardView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFirstJiaRewardView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getFirstJiaRewardView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getFirstJiaRewardView(Callback_ActivityInfo_getFirstJiaRewardView __cb);

    public Ice.AsyncResult begin_getFirstJiaRewardView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getFirstJiaRewardView __cb);

    public String end_getFirstJiaRewardView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getFirstJiaRewardView_async(AMI_ActivityInfo_getFirstJiaRewardView __cb);

    public boolean getFirstJiaRewardView_async(AMI_ActivityInfo_getFirstJiaRewardView __cb, java.util.Map<String, String> __ctx);

    public void acceptFirstJiaReward(int level)
        throws NotEnoughMoneyException,
               NoteException;

    public void acceptFirstJiaReward(int level, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_acceptFirstJiaReward(int level);

    public Ice.AsyncResult begin_acceptFirstJiaReward(int level, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptFirstJiaReward(int level, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptFirstJiaReward(int level, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptFirstJiaReward(int level, Callback_ActivityInfo_acceptFirstJiaReward __cb);

    public Ice.AsyncResult begin_acceptFirstJiaReward(int level, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptFirstJiaReward __cb);

    public void end_acceptFirstJiaReward(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean acceptFirstJiaReward_async(AMI_ActivityInfo_acceptFirstJiaReward __cb, int level);

    public boolean acceptFirstJiaReward_async(AMI_ActivityInfo_acceptFirstJiaReward __cb, int level, java.util.Map<String, String> __ctx);

    public String getDayLoginRewardView()
        throws NoteException;

    public String getDayLoginRewardView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getDayLoginRewardView();

    public Ice.AsyncResult begin_getDayLoginRewardView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getDayLoginRewardView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getDayLoginRewardView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getDayLoginRewardView(Callback_ActivityInfo_getDayLoginRewardView __cb);

    public Ice.AsyncResult begin_getDayLoginRewardView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getDayLoginRewardView __cb);

    public String end_getDayLoginRewardView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getDayLoginRewardView_async(AMI_ActivityInfo_getDayLoginRewardView __cb);

    public boolean getDayLoginRewardView_async(AMI_ActivityInfo_getDayLoginRewardView __cb, java.util.Map<String, String> __ctx);

    public void acceptDayLoginReward(int day)
        throws NotEnoughMoneyException,
               NoteException;

    public void acceptDayLoginReward(int day, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_acceptDayLoginReward(int day);

    public Ice.AsyncResult begin_acceptDayLoginReward(int day, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptDayLoginReward(int day, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptDayLoginReward(int day, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptDayLoginReward(int day, Callback_ActivityInfo_acceptDayLoginReward __cb);

    public Ice.AsyncResult begin_acceptDayLoginReward(int day, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptDayLoginReward __cb);

    public void end_acceptDayLoginReward(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean acceptDayLoginReward_async(AMI_ActivityInfo_acceptDayLoginReward __cb, int day);

    public boolean acceptDayLoginReward_async(AMI_ActivityInfo_acceptDayLoginReward __cb, int day, java.util.Map<String, String> __ctx);

    public String getDayforverLoginRewardView()
        throws NoteException;

    public String getDayforverLoginRewardView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getDayforverLoginRewardView();

    public Ice.AsyncResult begin_getDayforverLoginRewardView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getDayforverLoginRewardView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getDayforverLoginRewardView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getDayforverLoginRewardView(Callback_ActivityInfo_getDayforverLoginRewardView __cb);

    public Ice.AsyncResult begin_getDayforverLoginRewardView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getDayforverLoginRewardView __cb);

    public String end_getDayforverLoginRewardView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getDayforverLoginRewardView_async(AMI_ActivityInfo_getDayforverLoginRewardView __cb);

    public boolean getDayforverLoginRewardView_async(AMI_ActivityInfo_getDayforverLoginRewardView __cb, java.util.Map<String, String> __ctx);

    public void acceptDayforverLoginReward(int day)
        throws NotEnoughMoneyException,
               NoteException;

    public void acceptDayforverLoginReward(int day, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_acceptDayforverLoginReward(int day);

    public Ice.AsyncResult begin_acceptDayforverLoginReward(int day, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptDayforverLoginReward(int day, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptDayforverLoginReward(int day, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptDayforverLoginReward(int day, Callback_ActivityInfo_acceptDayforverLoginReward __cb);

    public Ice.AsyncResult begin_acceptDayforverLoginReward(int day, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptDayforverLoginReward __cb);

    public void end_acceptDayforverLoginReward(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean acceptDayforverLoginReward_async(AMI_ActivityInfo_acceptDayforverLoginReward __cb, int day);

    public boolean acceptDayforverLoginReward_async(AMI_ActivityInfo_acceptDayforverLoginReward __cb, int day, java.util.Map<String, String> __ctx);

    public String getOpenServerActiveView()
        throws NoteException;

    public String getOpenServerActiveView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getOpenServerActiveView();

    public Ice.AsyncResult begin_getOpenServerActiveView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getOpenServerActiveView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getOpenServerActiveView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getOpenServerActiveView(Callback_ActivityInfo_getOpenServerActiveView __cb);

    public Ice.AsyncResult begin_getOpenServerActiveView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getOpenServerActiveView __cb);

    public String end_getOpenServerActiveView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getOpenServerActiveView_async(AMI_ActivityInfo_getOpenServerActiveView __cb);

    public boolean getOpenServerActiveView_async(AMI_ActivityInfo_getOpenServerActiveView __cb, java.util.Map<String, String> __ctx);

    public void acceptOpenServerActiveReward(int active, int nodeId)
        throws NoteException;

    public void acceptOpenServerActiveReward(int active, int nodeId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_acceptOpenServerActiveReward(int active, int nodeId);

    public Ice.AsyncResult begin_acceptOpenServerActiveReward(int active, int nodeId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptOpenServerActiveReward(int active, int nodeId, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptOpenServerActiveReward(int active, int nodeId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptOpenServerActiveReward(int active, int nodeId, Callback_ActivityInfo_acceptOpenServerActiveReward __cb);

    public Ice.AsyncResult begin_acceptOpenServerActiveReward(int active, int nodeId, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptOpenServerActiveReward __cb);

    public void end_acceptOpenServerActiveReward(Ice.AsyncResult __result)
        throws NoteException;

    public boolean acceptOpenServerActiveReward_async(AMI_ActivityInfo_acceptOpenServerActiveReward __cb, int active, int nodeId);

    public boolean acceptOpenServerActiveReward_async(AMI_ActivityInfo_acceptOpenServerActiveReward __cb, int active, int nodeId, java.util.Map<String, String> __ctx);

    public String buysale(int activeId, int day)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    public String buysale(int activeId, int day, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_buysale(int activeId, int day);

    public Ice.AsyncResult begin_buysale(int activeId, int day, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_buysale(int activeId, int day, Ice.Callback __cb);

    public Ice.AsyncResult begin_buysale(int activeId, int day, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_buysale(int activeId, int day, Callback_ActivityInfo_buysale __cb);

    public Ice.AsyncResult begin_buysale(int activeId, int day, java.util.Map<String, String> __ctx, Callback_ActivityInfo_buysale __cb);

    public String end_buysale(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    public boolean buysale_async(AMI_ActivityInfo_buysale __cb, int activeId, int day);

    public boolean buysale_async(AMI_ActivityInfo_buysale __cb, int activeId, int day, java.util.Map<String, String> __ctx);

    public String getSendJunLingView()
        throws NoteException;

    public String getSendJunLingView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getSendJunLingView();

    public Ice.AsyncResult begin_getSendJunLingView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSendJunLingView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getSendJunLingView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSendJunLingView(Callback_ActivityInfo_getSendJunLingView __cb);

    public Ice.AsyncResult begin_getSendJunLingView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getSendJunLingView __cb);

    public String end_getSendJunLingView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getSendJunLingView_async(AMI_ActivityInfo_getSendJunLingView __cb);

    public boolean getSendJunLingView_async(AMI_ActivityInfo_getSendJunLingView __cb, java.util.Map<String, String> __ctx);

    public int acceptJunLing(int id)
        throws NotEnoughYuanBaoException,
               NoteException;

    public int acceptJunLing(int id, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_acceptJunLing(int id);

    public Ice.AsyncResult begin_acceptJunLing(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptJunLing(int id, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptJunLing(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptJunLing(int id, Callback_ActivityInfo_acceptJunLing __cb);

    public Ice.AsyncResult begin_acceptJunLing(int id, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptJunLing __cb);

    public int end_acceptJunLing(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean acceptJunLing_async(AMI_ActivityInfo_acceptJunLing __cb, int id);

    public boolean acceptJunLing_async(AMI_ActivityInfo_acceptJunLing __cb, int id, java.util.Map<String, String> __ctx);

    public String getPowerRewardView()
        throws NoteException;

    public String getPowerRewardView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getPowerRewardView();

    public Ice.AsyncResult begin_getPowerRewardView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPowerRewardView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPowerRewardView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPowerRewardView(Callback_ActivityInfo_getPowerRewardView __cb);

    public Ice.AsyncResult begin_getPowerRewardView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getPowerRewardView __cb);

    public String end_getPowerRewardView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getPowerRewardView_async(AMI_ActivityInfo_getPowerRewardView __cb);

    public boolean getPowerRewardView_async(AMI_ActivityInfo_getPowerRewardView __cb, java.util.Map<String, String> __ctx);

    public void acceptPowerReward(int power)
        throws NoteException;

    public void acceptPowerReward(int power, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_acceptPowerReward(int power);

    public Ice.AsyncResult begin_acceptPowerReward(int power, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_acceptPowerReward(int power, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptPowerReward(int power, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_acceptPowerReward(int power, Callback_ActivityInfo_acceptPowerReward __cb);

    public Ice.AsyncResult begin_acceptPowerReward(int power, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptPowerReward __cb);

    public void end_acceptPowerReward(Ice.AsyncResult __result)
        throws NoteException;

    public boolean acceptPowerReward_async(AMI_ActivityInfo_acceptPowerReward __cb, int power);

    public boolean acceptPowerReward_async(AMI_ActivityInfo_acceptPowerReward __cb, int power, java.util.Map<String, String> __ctx);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     **/
    public String getSeckillView()
        throws NoteException;

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getSeckillView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSeckillView();

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSeckillView(java.util.Map<String, String> __ctx);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSeckillView(Ice.Callback __cb);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSeckillView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSeckillView(Callback_ActivityInfo_getSeckillView __cb);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSeckillView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getSeckillView __cb);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getSeckillView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getSeckillView_async(AMI_ActivityInfo_getSeckillView __cb);

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getSeckillView_async(AMI_ActivityInfo_getSeckillView __cb, java.util.Map<String, String> __ctx);

    /**
     * 秒杀物品
     **/
    public void seckillItem(int id)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 秒杀物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void seckillItem(int id, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 秒杀物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_seckillItem(int id);

    /**
     * 秒杀物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_seckillItem(int id, java.util.Map<String, String> __ctx);

    /**
     * 秒杀物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_seckillItem(int id, Ice.Callback __cb);

    /**
     * 秒杀物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_seckillItem(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 秒杀物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_seckillItem(int id, Callback_ActivityInfo_seckillItem __cb);

    /**
     * 秒杀物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_seckillItem(int id, java.util.Map<String, String> __ctx, Callback_ActivityInfo_seckillItem __cb);

    /**
     * 秒杀物品
     * @param __result The asynchronous result object.
     **/
    public void end_seckillItem(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 秒杀物品
     * @param __cb The callback object for the operation.
     **/
    public boolean seckillItem_async(AMI_ActivityInfo_seckillItem __cb, int id);

    /**
     * 秒杀物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean seckillItem_async(AMI_ActivityInfo_seckillItem __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     **/
    public String getDayChargeView()
        throws NoteException;

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getDayChargeView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayChargeView();

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayChargeView(java.util.Map<String, String> __ctx);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayChargeView(Ice.Callback __cb);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayChargeView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayChargeView(Callback_ActivityInfo_getDayChargeView __cb);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayChargeView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getDayChargeView __cb);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getDayChargeView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getDayChargeView_async(AMI_ActivityInfo_getDayChargeView __cb);

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getDayChargeView_async(AMI_ActivityInfo_getDayChargeView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取日充值奖励
     **/
    public void receiveDayCharge(int threshold)
        throws NoteException;

    /**
     * 领取日充值奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveDayCharge(int threshold, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取日充值奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayCharge(int threshold);

    /**
     * 领取日充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayCharge(int threshold, java.util.Map<String, String> __ctx);

    /**
     * 领取日充值奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayCharge(int threshold, Ice.Callback __cb);

    /**
     * 领取日充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayCharge(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取日充值奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayCharge(int threshold, Callback_ActivityInfo_receiveDayCharge __cb);

    /**
     * 领取日充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayCharge(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveDayCharge __cb);

    /**
     * 领取日充值奖励
     * @param __result The asynchronous result object.
     **/
    public void end_receiveDayCharge(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取日充值奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveDayCharge_async(AMI_ActivityInfo_receiveDayCharge __cb, int threshold);

    /**
     * 领取日充值奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveDayCharge_async(AMI_ActivityInfo_receiveDayCharge __cb, int threshold, java.util.Map<String, String> __ctx);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     **/
    public String getDayConsumeView()
        throws NoteException;

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getDayConsumeView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayConsumeView();

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayConsumeView(java.util.Map<String, String> __ctx);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayConsumeView(Ice.Callback __cb);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayConsumeView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayConsumeView(Callback_ActivityInfo_getDayConsumeView __cb);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDayConsumeView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getDayConsumeView __cb);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getDayConsumeView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getDayConsumeView_async(AMI_ActivityInfo_getDayConsumeView __cb);

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getDayConsumeView_async(AMI_ActivityInfo_getDayConsumeView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取日消费奖励
     **/
    public void receiveDayConsume(int threshold)
        throws NoteException;

    /**
     * 领取日消费奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveDayConsume(int threshold, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取日消费奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayConsume(int threshold);

    /**
     * 领取日消费奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayConsume(int threshold, java.util.Map<String, String> __ctx);

    /**
     * 领取日消费奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayConsume(int threshold, Ice.Callback __cb);

    /**
     * 领取日消费奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayConsume(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取日消费奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayConsume(int threshold, Callback_ActivityInfo_receiveDayConsume __cb);

    /**
     * 领取日消费奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayConsume(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveDayConsume __cb);

    /**
     * 领取日消费奖励
     * @param __result The asynchronous result object.
     **/
    public void end_receiveDayConsume(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取日消费奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveDayConsume_async(AMI_ActivityInfo_receiveDayConsume __cb, int threshold);

    /**
     * 领取日消费奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveDayConsume_async(AMI_ActivityInfo_receiveDayConsume __cb, int threshold, java.util.Map<String, String> __ctx);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     **/
    public String getBigDayChargeView()
        throws NoteException;

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getBigDayChargeView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayChargeView();

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayChargeView(java.util.Map<String, String> __ctx);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayChargeView(Ice.Callback __cb);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayChargeView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayChargeView(Callback_ActivityInfo_getBigDayChargeView __cb);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayChargeView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getBigDayChargeView __cb);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getBigDayChargeView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getBigDayChargeView_async(AMI_ActivityInfo_getBigDayChargeView __cb);

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getBigDayChargeView_async(AMI_ActivityInfo_getBigDayChargeView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取copy日充值奖励
     **/
    public void receiveBigDayCharge(int threshold)
        throws NoteException;

    /**
     * 领取copy日充值奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveBigDayCharge(int threshold, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取copy日充值奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayCharge(int threshold);

    /**
     * 领取copy日充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayCharge(int threshold, java.util.Map<String, String> __ctx);

    /**
     * 领取copy日充值奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayCharge(int threshold, Ice.Callback __cb);

    /**
     * 领取copy日充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayCharge(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取copy日充值奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayCharge(int threshold, Callback_ActivityInfo_receiveBigDayCharge __cb);

    /**
     * 领取copy日充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayCharge(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveBigDayCharge __cb);

    /**
     * 领取copy日充值奖励
     * @param __result The asynchronous result object.
     **/
    public void end_receiveBigDayCharge(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取copy日充值奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveBigDayCharge_async(AMI_ActivityInfo_receiveBigDayCharge __cb, int threshold);

    /**
     * 领取copy日充值奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveBigDayCharge_async(AMI_ActivityInfo_receiveBigDayCharge __cb, int threshold, java.util.Map<String, String> __ctx);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     **/
    public String getBigDayConsumeView()
        throws NoteException;

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getBigDayConsumeView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayConsumeView();

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayConsumeView(java.util.Map<String, String> __ctx);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayConsumeView(Ice.Callback __cb);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayConsumeView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayConsumeView(Callback_ActivityInfo_getBigDayConsumeView __cb);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBigDayConsumeView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getBigDayConsumeView __cb);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getBigDayConsumeView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getBigDayConsumeView_async(AMI_ActivityInfo_getBigDayConsumeView __cb);

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getBigDayConsumeView_async(AMI_ActivityInfo_getBigDayConsumeView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取copy日消费奖励
     **/
    public void receiveBigDayConsume(int threshold)
        throws NoteException;

    /**
     * 领取copy日消费奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveBigDayConsume(int threshold, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取copy日消费奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayConsume(int threshold);

    /**
     * 领取copy日消费奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayConsume(int threshold, java.util.Map<String, String> __ctx);

    /**
     * 领取copy日消费奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayConsume(int threshold, Ice.Callback __cb);

    /**
     * 领取copy日消费奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayConsume(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取copy日消费奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayConsume(int threshold, Callback_ActivityInfo_receiveBigDayConsume __cb);

    /**
     * 领取copy日消费奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveBigDayConsume(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveBigDayConsume __cb);

    /**
     * 领取copy日消费奖励
     * @param __result The asynchronous result object.
     **/
    public void end_receiveBigDayConsume(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取copy日消费奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveBigDayConsume_async(AMI_ActivityInfo_receiveBigDayConsume __cb, int threshold);

    /**
     * 领取copy日消费奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveBigDayConsume_async(AMI_ActivityInfo_receiveBigDayConsume __cb, int threshold, java.util.Map<String, String> __ctx);

    public String getBigSummationActivityViewForCharge()
        throws NoteException;

    public String getBigSummationActivityViewForCharge(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getBigSummationActivityViewForCharge();

    public Ice.AsyncResult begin_getBigSummationActivityViewForCharge(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getBigSummationActivityViewForCharge(Ice.Callback __cb);

    public Ice.AsyncResult begin_getBigSummationActivityViewForCharge(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getBigSummationActivityViewForCharge(Callback_ActivityInfo_getBigSummationActivityViewForCharge __cb);

    public Ice.AsyncResult begin_getBigSummationActivityViewForCharge(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getBigSummationActivityViewForCharge __cb);

    public String end_getBigSummationActivityViewForCharge(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getBigSummationActivityViewForCharge_async(AMI_ActivityInfo_getBigSummationActivityViewForCharge __cb);

    public boolean getBigSummationActivityViewForCharge_async(AMI_ActivityInfo_getBigSummationActivityViewForCharge __cb, java.util.Map<String, String> __ctx);

    public void receiveBigRewardForSumCharge(int threshold)
        throws NotEnoughYuanBaoException,
               NoteException;

    public void receiveBigRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_receiveBigRewardForSumCharge(int threshold);

    public Ice.AsyncResult begin_receiveBigRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_receiveBigRewardForSumCharge(int threshold, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveBigRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveBigRewardForSumCharge(int threshold, Callback_ActivityInfo_receiveBigRewardForSumCharge __cb);

    public Ice.AsyncResult begin_receiveBigRewardForSumCharge(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveBigRewardForSumCharge __cb);

    public void end_receiveBigRewardForSumCharge(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean receiveBigRewardForSumCharge_async(AMI_ActivityInfo_receiveBigRewardForSumCharge __cb, int threshold);

    public boolean receiveBigRewardForSumCharge_async(AMI_ActivityInfo_receiveBigRewardForSumCharge __cb, int threshold, java.util.Map<String, String> __ctx);

    public String getBigSummationActivityViewForConsume()
        throws NoteException;

    public String getBigSummationActivityViewForConsume(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getBigSummationActivityViewForConsume();

    public Ice.AsyncResult begin_getBigSummationActivityViewForConsume(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getBigSummationActivityViewForConsume(Ice.Callback __cb);

    public Ice.AsyncResult begin_getBigSummationActivityViewForConsume(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getBigSummationActivityViewForConsume(Callback_ActivityInfo_getBigSummationActivityViewForConsume __cb);

    public Ice.AsyncResult begin_getBigSummationActivityViewForConsume(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getBigSummationActivityViewForConsume __cb);

    public String end_getBigSummationActivityViewForConsume(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getBigSummationActivityViewForConsume_async(AMI_ActivityInfo_getBigSummationActivityViewForConsume __cb);

    public boolean getBigSummationActivityViewForConsume_async(AMI_ActivityInfo_getBigSummationActivityViewForConsume __cb, java.util.Map<String, String> __ctx);

    public void receiveBigRewardForSumConsume(int threshold)
        throws NotEnoughYuanBaoException,
               NoteException;

    public void receiveBigRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_receiveBigRewardForSumConsume(int threshold);

    public Ice.AsyncResult begin_receiveBigRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_receiveBigRewardForSumConsume(int threshold, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveBigRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveBigRewardForSumConsume(int threshold, Callback_ActivityInfo_receiveBigRewardForSumConsume __cb);

    public Ice.AsyncResult begin_receiveBigRewardForSumConsume(int threshold, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveBigRewardForSumConsume __cb);

    public void end_receiveBigRewardForSumConsume(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean receiveBigRewardForSumConsume_async(AMI_ActivityInfo_receiveBigRewardForSumConsume __cb, int threshold);

    public boolean receiveBigRewardForSumConsume_async(AMI_ActivityInfo_receiveBigRewardForSumConsume __cb, int threshold, java.util.Map<String, String> __ctx);

    public String getFortuneWheelView()
        throws NoteException;

    public String getFortuneWheelView(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getFortuneWheelView();

    public Ice.AsyncResult begin_getFortuneWheelView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFortuneWheelView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getFortuneWheelView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getFortuneWheelView(Callback_ActivityInfo_getFortuneWheelView __cb);

    public Ice.AsyncResult begin_getFortuneWheelView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getFortuneWheelView __cb);

    public String end_getFortuneWheelView(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getFortuneWheelView_async(AMI_ActivityInfo_getFortuneWheelView __cb);

    public boolean getFortuneWheelView_async(AMI_ActivityInfo_getFortuneWheelView __cb, java.util.Map<String, String> __ctx);

    public String doFortuneWheel()
        throws NoteException;

    public String doFortuneWheel(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_doFortuneWheel();

    public Ice.AsyncResult begin_doFortuneWheel(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_doFortuneWheel(Ice.Callback __cb);

    public Ice.AsyncResult begin_doFortuneWheel(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_doFortuneWheel(Callback_ActivityInfo_doFortuneWheel __cb);

    public Ice.AsyncResult begin_doFortuneWheel(java.util.Map<String, String> __ctx, Callback_ActivityInfo_doFortuneWheel __cb);

    public String end_doFortuneWheel(Ice.AsyncResult __result)
        throws NoteException;

    public boolean doFortuneWheel_async(AMI_ActivityInfo_doFortuneWheel __cb);

    public boolean doFortuneWheel_async(AMI_ActivityInfo_doFortuneWheel __cb, java.util.Map<String, String> __ctx);

    public String doFortuneWheelFor10()
        throws NoteException;

    public String doFortuneWheelFor10(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_doFortuneWheelFor10();

    public Ice.AsyncResult begin_doFortuneWheelFor10(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_doFortuneWheelFor10(Ice.Callback __cb);

    public Ice.AsyncResult begin_doFortuneWheelFor10(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_doFortuneWheelFor10(Callback_ActivityInfo_doFortuneWheelFor10 __cb);

    public Ice.AsyncResult begin_doFortuneWheelFor10(java.util.Map<String, String> __ctx, Callback_ActivityInfo_doFortuneWheelFor10 __cb);

    public String end_doFortuneWheelFor10(Ice.AsyncResult __result)
        throws NoteException;

    public boolean doFortuneWheelFor10_async(AMI_ActivityInfo_doFortuneWheelFor10 __cb);

    public boolean doFortuneWheelFor10_async(AMI_ActivityInfo_doFortuneWheelFor10 __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     **/
    public String getCornucopiaView()
        throws NoteException;

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getCornucopiaView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopiaView();

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopiaView(java.util.Map<String, String> __ctx);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopiaView(Ice.Callback __cb);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopiaView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopiaView(Callback_ActivityInfo_getCornucopiaView __cb);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopiaView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getCornucopiaView __cb);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getCornucopiaView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getCornucopiaView_async(AMI_ActivityInfo_getCornucopiaView __cb);

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getCornucopiaView_async(AMI_ActivityInfo_getCornucopiaView __cb, java.util.Map<String, String> __ctx);

    /**
     * 聚宝盆一键购买
     **/
    public void buyAllCornucopia()
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆一键购买
     * @param __ctx The Context map to send with the invocation.
     **/
    public void buyAllCornucopia(java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆一键购买
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyAllCornucopia();

    /**
     * 聚宝盆一键购买
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyAllCornucopia(java.util.Map<String, String> __ctx);

    /**
     * 聚宝盆一键购买
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyAllCornucopia(Ice.Callback __cb);

    /**
     * 聚宝盆一键购买
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyAllCornucopia(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 聚宝盆一键购买
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyAllCornucopia(Callback_ActivityInfo_buyAllCornucopia __cb);

    /**
     * 聚宝盆一键购买
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyAllCornucopia(java.util.Map<String, String> __ctx, Callback_ActivityInfo_buyAllCornucopia __cb);

    /**
     * 聚宝盆一键购买
     * @param __result The asynchronous result object.
     **/
    public void end_buyAllCornucopia(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆一键购买
     * @param __cb The callback object for the operation.
     **/
    public boolean buyAllCornucopia_async(AMI_ActivityInfo_buyAllCornucopia __cb);

    /**
     * 聚宝盆一键购买
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyAllCornucopia_async(AMI_ActivityInfo_buyAllCornucopia __cb, java.util.Map<String, String> __ctx);

    /**
     * 聚宝盆购买单项物品
     **/
    public void buyCornucopia(int id)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆购买单项物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void buyCornucopia(int id, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆购买单项物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyCornucopia(int id);

    /**
     * 聚宝盆购买单项物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyCornucopia(int id, java.util.Map<String, String> __ctx);

    /**
     * 聚宝盆购买单项物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyCornucopia(int id, Ice.Callback __cb);

    /**
     * 聚宝盆购买单项物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyCornucopia(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 聚宝盆购买单项物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyCornucopia(int id, Callback_ActivityInfo_buyCornucopia __cb);

    /**
     * 聚宝盆购买单项物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyCornucopia(int id, java.util.Map<String, String> __ctx, Callback_ActivityInfo_buyCornucopia __cb);

    /**
     * 聚宝盆购买单项物品
     * @param __result The asynchronous result object.
     **/
    public void end_buyCornucopia(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆购买单项物品
     * @param __cb The callback object for the operation.
     **/
    public boolean buyCornucopia_async(AMI_ActivityInfo_buyCornucopia __cb, int id);

    /**
     * 聚宝盆购买单项物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyCornucopia_async(AMI_ActivityInfo_buyCornucopia __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 领取聚宝盆超值礼包
     **/
    public void getSupperCornucopia()
        throws NoteException;

    /**
     * 领取聚宝盆超值礼包
     * @param __ctx The Context map to send with the invocation.
     **/
    public void getSupperCornucopia(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取聚宝盆超值礼包
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSupperCornucopia();

    /**
     * 领取聚宝盆超值礼包
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSupperCornucopia(java.util.Map<String, String> __ctx);

    /**
     * 领取聚宝盆超值礼包
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSupperCornucopia(Ice.Callback __cb);

    /**
     * 领取聚宝盆超值礼包
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSupperCornucopia(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取聚宝盆超值礼包
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSupperCornucopia(Callback_ActivityInfo_getSupperCornucopia __cb);

    /**
     * 领取聚宝盆超值礼包
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSupperCornucopia(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getSupperCornucopia __cb);

    /**
     * 领取聚宝盆超值礼包
     * @param __result The asynchronous result object.
     **/
    public void end_getSupperCornucopia(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取聚宝盆超值礼包
     * @param __cb The callback object for the operation.
     **/
    public boolean getSupperCornucopia_async(AMI_ActivityInfo_getSupperCornucopia __cb);

    /**
     * 领取聚宝盆超值礼包
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getSupperCornucopia_async(AMI_ActivityInfo_getSupperCornucopia __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取聚宝盆普通物品
     **/
    public void getCornucopia(int id)
        throws NoteException;

    /**
     * 领取聚宝盆普通物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void getCornucopia(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取聚宝盆普通物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopia(int id);

    /**
     * 领取聚宝盆普通物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopia(int id, java.util.Map<String, String> __ctx);

    /**
     * 领取聚宝盆普通物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopia(int id, Ice.Callback __cb);

    /**
     * 领取聚宝盆普通物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopia(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取聚宝盆普通物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopia(int id, Callback_ActivityInfo_getCornucopia __cb);

    /**
     * 领取聚宝盆普通物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCornucopia(int id, java.util.Map<String, String> __ctx, Callback_ActivityInfo_getCornucopia __cb);

    /**
     * 领取聚宝盆普通物品
     * @param __result The asynchronous result object.
     **/
    public void end_getCornucopia(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取聚宝盆普通物品
     * @param __cb The callback object for the operation.
     **/
    public boolean getCornucopia_async(AMI_ActivityInfo_getCornucopia __cb, int id);

    /**
     * 领取聚宝盆普通物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getCornucopia_async(AMI_ActivityInfo_getCornucopia __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 一键领取聚宝盆物品
     **/
    public void getAllCornucopia()
        throws NoteException;

    /**
     * 一键领取聚宝盆物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void getAllCornucopia(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 一键领取聚宝盆物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getAllCornucopia();

    /**
     * 一键领取聚宝盆物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getAllCornucopia(java.util.Map<String, String> __ctx);

    /**
     * 一键领取聚宝盆物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getAllCornucopia(Ice.Callback __cb);

    /**
     * 一键领取聚宝盆物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getAllCornucopia(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 一键领取聚宝盆物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getAllCornucopia(Callback_ActivityInfo_getAllCornucopia __cb);

    /**
     * 一键领取聚宝盆物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getAllCornucopia(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getAllCornucopia __cb);

    /**
     * 一键领取聚宝盆物品
     * @param __result The asynchronous result object.
     **/
    public void end_getAllCornucopia(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 一键领取聚宝盆物品
     * @param __cb The callback object for the operation.
     **/
    public boolean getAllCornucopia_async(AMI_ActivityInfo_getAllCornucopia __cb);

    /**
     * 一键领取聚宝盆物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getAllCornucopia_async(AMI_ActivityInfo_getAllCornucopia __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取兑换列表
     **/
    public String getExchangeItems(int itemType)
        throws NoteException;

    /**
     * 获取兑换列表
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getExchangeItems(int itemType, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取兑换列表
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getExchangeItems(int itemType);

    /**
     * 获取兑换列表
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getExchangeItems(int itemType, java.util.Map<String, String> __ctx);

    /**
     * 获取兑换列表
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getExchangeItems(int itemType, Ice.Callback __cb);

    /**
     * 获取兑换列表
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getExchangeItems(int itemType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取兑换列表
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getExchangeItems(int itemType, Callback_ActivityInfo_getExchangeItems __cb);

    /**
     * 获取兑换列表
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getExchangeItems(int itemType, java.util.Map<String, String> __ctx, Callback_ActivityInfo_getExchangeItems __cb);

    /**
     * 获取兑换列表
     * @param __result The asynchronous result object.
     **/
    public String end_getExchangeItems(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取兑换列表
     * @param __cb The callback object for the operation.
     **/
    public boolean getExchangeItems_async(AMI_ActivityInfo_getExchangeItems __cb, int itemType);

    /**
     * 获取兑换列表
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getExchangeItems_async(AMI_ActivityInfo_getExchangeItems __cb, int itemType, java.util.Map<String, String> __ctx);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     **/
    public String doExchangeItems(String exchangeNo, int itemType)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __ctx The Context map to send with the invocation.
     **/
    public String doExchangeItems(String exchangeNo, int itemType, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_doExchangeItems(String exchangeNo, int itemType);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_doExchangeItems(String exchangeNo, int itemType, java.util.Map<String, String> __ctx);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_doExchangeItems(String exchangeNo, int itemType, Ice.Callback __cb);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_doExchangeItems(String exchangeNo, int itemType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_doExchangeItems(String exchangeNo, int itemType, Callback_ActivityInfo_doExchangeItems __cb);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_doExchangeItems(String exchangeNo, int itemType, java.util.Map<String, String> __ctx, Callback_ActivityInfo_doExchangeItems __cb);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __result The asynchronous result object.
     **/
    public String end_doExchangeItems(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __cb The callback object for the operation.
     **/
    public boolean doExchangeItems_async(AMI_ActivityInfo_doExchangeItems __cb, String exchangeNo, int itemType);

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean doExchangeItems_async(AMI_ActivityInfo_doExchangeItems __cb, String exchangeNo, int itemType, java.util.Map<String, String> __ctx);

    /**
     * 等级福利信息, 返回 LevelWealView
     **/
    public LevelWealView levelWealInfo()
        throws NoteException;

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __ctx The Context map to send with the invocation.
     **/
    public LevelWealView levelWealInfo(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 等级福利信息, 返回 LevelWealView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_levelWealInfo();

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_levelWealInfo(java.util.Map<String, String> __ctx);

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_levelWealInfo(Ice.Callback __cb);

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_levelWealInfo(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_levelWealInfo(Callback_ActivityInfo_levelWealInfo __cb);

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_levelWealInfo(java.util.Map<String, String> __ctx, Callback_ActivityInfo_levelWealInfo __cb);

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __result The asynchronous result object.
     **/
    public LevelWealView end_levelWealInfo(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __cb The callback object for the operation.
     **/
    public boolean levelWealInfo_async(AMI_ActivityInfo_levelWealInfo __cb);

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean levelWealInfo_async(AMI_ActivityInfo_levelWealInfo __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取等级福利
     **/
    public int getLevelWeal()
        throws NoteException;

    /**
     * 领取等级福利
     * @param __ctx The Context map to send with the invocation.
     **/
    public int getLevelWeal(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取等级福利
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLevelWeal();

    /**
     * 领取等级福利
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLevelWeal(java.util.Map<String, String> __ctx);

    /**
     * 领取等级福利
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLevelWeal(Ice.Callback __cb);

    /**
     * 领取等级福利
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLevelWeal(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取等级福利
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLevelWeal(Callback_ActivityInfo_getLevelWeal __cb);

    /**
     * 领取等级福利
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLevelWeal(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getLevelWeal __cb);

    /**
     * 领取等级福利
     * @param __result The asynchronous result object.
     **/
    public int end_getLevelWeal(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取等级福利
     * @param __cb The callback object for the operation.
     **/
    public boolean getLevelWeal_async(AMI_ActivityInfo_getLevelWeal __cb);

    /**
     * 领取等级福利
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getLevelWeal_async(AMI_ActivityInfo_getLevelWeal __cb, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     **/
    public String openMarksmanView(int systemType)
        throws NoteException;

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openMarksmanView(int systemType, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanView(int systemType);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanView(int systemType, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanView(int systemType, Ice.Callback __cb);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanView(int systemType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanView(int systemType, Callback_ActivityInfo_openMarksmanView __cb);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanView(int systemType, java.util.Map<String, String> __ctx, Callback_ActivityInfo_openMarksmanView __cb);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __result The asynchronous result object.
     **/
    public String end_openMarksmanView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __cb The callback object for the operation.
     **/
    public boolean openMarksmanView_async(AMI_ActivityInfo_openMarksmanView __cb, int systemType);

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openMarksmanView_async(AMI_ActivityInfo_openMarksmanView __cb, int systemType, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     **/
    public String shootReward(int shootType, int systemType)
        throws NotEnoughException,
               NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __ctx The Context map to send with the invocation.
     **/
    public String shootReward(int shootType, int systemType, java.util.Map<String, String> __ctx)
        throws NotEnoughException,
               NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_shootReward(int shootType, int systemType);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_shootReward(int shootType, int systemType, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_shootReward(int shootType, int systemType, Ice.Callback __cb);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_shootReward(int shootType, int systemType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_shootReward(int shootType, int systemType, Callback_ActivityInfo_shootReward __cb);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_shootReward(int shootType, int systemType, java.util.Map<String, String> __ctx, Callback_ActivityInfo_shootReward __cb);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __result The asynchronous result object.
     **/
    public String end_shootReward(Ice.AsyncResult __result)
        throws NotEnoughException,
               NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __cb The callback object for the operation.
     **/
    public boolean shootReward_async(AMI_ActivityInfo_shootReward __cb, int shootType, int systemType);

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean shootReward_async(AMI_ActivityInfo_shootReward __cb, int shootType, int systemType, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     **/
    public String getScoreReward(int score)
        throws NoteException;

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getScoreReward(int score, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getScoreReward(int score);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getScoreReward(int score, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getScoreReward(int score, Ice.Callback __cb);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getScoreReward(int score, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getScoreReward(int score, Callback_ActivityInfo_getScoreReward __cb);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getScoreReward(int score, java.util.Map<String, String> __ctx, Callback_ActivityInfo_getScoreReward __cb);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __result The asynchronous result object.
     **/
    public String end_getScoreReward(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __cb The callback object for the operation.
     **/
    public boolean getScoreReward_async(AMI_ActivityInfo_getScoreReward __cb, int score);

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getScoreReward_async(AMI_ActivityInfo_getScoreReward __cb, int score, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     **/
    public String openMarksmanScoreRankView()
        throws NoteException;

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openMarksmanScoreRankView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRankView();

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRankView(java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRankView(Ice.Callback __cb);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRankView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRankView(Callback_ActivityInfo_openMarksmanScoreRankView __cb);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRankView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_openMarksmanScoreRankView __cb);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __result The asynchronous result object.
     **/
    public String end_openMarksmanScoreRankView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __cb The callback object for the operation.
     **/
    public boolean openMarksmanScoreRankView_async(AMI_ActivityInfo_openMarksmanScoreRankView __cb);

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openMarksmanScoreRankView_async(AMI_ActivityInfo_openMarksmanScoreRankView __cb, java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     **/
    public String openMarksmanScoreRewardView()
        throws NoteException;

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openMarksmanScoreRewardView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRewardView();

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRewardView(java.util.Map<String, String> __ctx);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRewardView(Ice.Callback __cb);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRewardView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRewardView(Callback_ActivityInfo_openMarksmanScoreRewardView __cb);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openMarksmanScoreRewardView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_openMarksmanScoreRewardView __cb);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __result The asynchronous result object.
     **/
    public String end_openMarksmanScoreRewardView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __cb The callback object for the operation.
     **/
    public boolean openMarksmanScoreRewardView_async(AMI_ActivityInfo_openMarksmanScoreRewardView __cb);

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openMarksmanScoreRewardView_async(AMI_ActivityInfo_openMarksmanScoreRewardView __cb, java.util.Map<String, String> __ctx);

    /**
     * 是否显示我的中奖记录
     **/
    public void showMyRecord(boolean show)
        throws NoteException;

    /**
     * 是否显示我的中奖记录
     * @param __ctx The Context map to send with the invocation.
     **/
    public void showMyRecord(boolean show, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 是否显示我的中奖记录
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMyRecord(boolean show);

    /**
     * 是否显示我的中奖记录
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMyRecord(boolean show, java.util.Map<String, String> __ctx);

    /**
     * 是否显示我的中奖记录
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMyRecord(boolean show, Ice.Callback __cb);

    /**
     * 是否显示我的中奖记录
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMyRecord(boolean show, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 是否显示我的中奖记录
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMyRecord(boolean show, Callback_ActivityInfo_showMyRecord __cb);

    /**
     * 是否显示我的中奖记录
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMyRecord(boolean show, java.util.Map<String, String> __ctx, Callback_ActivityInfo_showMyRecord __cb);

    /**
     * 是否显示我的中奖记录
     * @param __result The asynchronous result object.
     **/
    public void end_showMyRecord(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 是否显示我的中奖记录
     * @param __cb The callback object for the operation.
     **/
    public boolean showMyRecord_async(AMI_ActivityInfo_showMyRecord __cb, boolean show);

    /**
     * 是否显示我的中奖记录
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean showMyRecord_async(AMI_ActivityInfo_showMyRecord __cb, boolean show, java.util.Map<String, String> __ctx);

    /**
     * 累计获得的奖励
     **/
    public String historyAward()
        throws NoteException;

    /**
     * 累计获得的奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public String historyAward(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 累计获得的奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_historyAward();

    /**
     * 累计获得的奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_historyAward(java.util.Map<String, String> __ctx);

    /**
     * 累计获得的奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_historyAward(Ice.Callback __cb);

    /**
     * 累计获得的奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_historyAward(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 累计获得的奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_historyAward(Callback_ActivityInfo_historyAward __cb);

    /**
     * 累计获得的奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_historyAward(java.util.Map<String, String> __ctx, Callback_ActivityInfo_historyAward __cb);

    /**
     * 累计获得的奖励
     * @param __result The asynchronous result object.
     **/
    public String end_historyAward(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 累计获得的奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean historyAward_async(AMI_ActivityInfo_historyAward __cb);

    /**
     * 累计获得的奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean historyAward_async(AMI_ActivityInfo_historyAward __cb, java.util.Map<String, String> __ctx);

    public void receiveApiReward(int actId, int targetCount)
        throws NoteException;

    public void receiveApiReward(int actId, int targetCount, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_receiveApiReward(int actId, int targetCount);

    public Ice.AsyncResult begin_receiveApiReward(int actId, int targetCount, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_receiveApiReward(int actId, int targetCount, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveApiReward(int actId, int targetCount, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_receiveApiReward(int actId, int targetCount, Callback_ActivityInfo_receiveApiReward __cb);

    public Ice.AsyncResult begin_receiveApiReward(int actId, int targetCount, java.util.Map<String, String> __ctx, Callback_ActivityInfo_receiveApiReward __cb);

    public void end_receiveApiReward(Ice.AsyncResult __result)
        throws NoteException;

    public boolean receiveApiReward_async(AMI_ActivityInfo_receiveApiReward __cb, int actId, int targetCount);

    public boolean receiveApiReward_async(AMI_ActivityInfo_receiveApiReward __cb, int actId, int targetCount, java.util.Map<String, String> __ctx);

    /**
     * 大富温主界面, 返回 GridPageView
     **/
    public String gridPageView()
        throws NoteException;

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String gridPageView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 大富温主界面, 返回 GridPageView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_gridPageView();

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_gridPageView(java.util.Map<String, String> __ctx);

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_gridPageView(Ice.Callback __cb);

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_gridPageView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_gridPageView(Callback_ActivityInfo_gridPageView __cb);

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_gridPageView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_gridPageView __cb);

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __result The asynchronous result object.
     **/
    public String end_gridPageView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __cb The callback object for the operation.
     **/
    public boolean gridPageView_async(AMI_ActivityInfo_gridPageView __cb);

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean gridPageView_async(AMI_ActivityInfo_gridPageView __cb, java.util.Map<String, String> __ctx);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     **/
    public String lettoryshopView()
        throws NoteException;

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lettoryshopView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopView();

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopView(java.util.Map<String, String> __ctx);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopView(Ice.Callback __cb);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopView(Callback_ActivityInfo_lettoryshopView __cb);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_lettoryshopView __cb);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __result The asynchronous result object.
     **/
    public String end_lettoryshopView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __cb The callback object for the operation.
     **/
    public boolean lettoryshopView_async(AMI_ActivityInfo_lettoryshopView __cb);

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lettoryshopView_async(AMI_ActivityInfo_lettoryshopView __cb, java.util.Map<String, String> __ctx);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     **/
    public String lettoryshopBuy(int id)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lettoryshopBuy(int id, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopBuy(int id);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopBuy(int id, java.util.Map<String, String> __ctx);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopBuy(int id, Ice.Callback __cb);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopBuy(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopBuy(int id, Callback_ActivityInfo_lettoryshopBuy __cb);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryshopBuy(int id, java.util.Map<String, String> __ctx, Callback_ActivityInfo_lettoryshopBuy __cb);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __result The asynchronous result object.
     **/
    public String end_lettoryshopBuy(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __cb The callback object for the operation.
     **/
    public boolean lettoryshopBuy_async(AMI_ActivityInfo_lettoryshopBuy __cb, int id);

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lettoryshopBuy_async(AMI_ActivityInfo_lettoryshopBuy __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     **/
    public String throwBall(int type, int point)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __ctx The Context map to send with the invocation.
     **/
    public String throwBall(int type, int point, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_throwBall(int type, int point);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_throwBall(int type, int point, java.util.Map<String, String> __ctx);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_throwBall(int type, int point, Ice.Callback __cb);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_throwBall(int type, int point, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_throwBall(int type, int point, Callback_ActivityInfo_throwBall __cb);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_throwBall(int type, int point, java.util.Map<String, String> __ctx, Callback_ActivityInfo_throwBall __cb);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __result The asynchronous result object.
     **/
    public String end_throwBall(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __cb The callback object for the operation.
     **/
    public boolean throwBall_async(AMI_ActivityInfo_throwBall __cb, int type, int point);

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean throwBall_async(AMI_ActivityInfo_throwBall __cb, int type, int point, java.util.Map<String, String> __ctx);

    /**
     * 排行奖励界面, 返回 RankPageView
     **/
    public String lettoryRankView()
        throws NoteException;

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lettoryRankView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 排行奖励界面, 返回 RankPageView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryRankView();

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryRankView(java.util.Map<String, String> __ctx);

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryRankView(Ice.Callback __cb);

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryRankView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryRankView(Callback_ActivityInfo_lettoryRankView __cb);

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lettoryRankView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_lettoryRankView __cb);

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __result The asynchronous result object.
     **/
    public String end_lettoryRankView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __cb The callback object for the operation.
     **/
    public boolean lettoryRankView_async(AMI_ActivityInfo_lettoryRankView __cb);

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lettoryRankView_async(AMI_ActivityInfo_lettoryRankView __cb, java.util.Map<String, String> __ctx);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     **/
    public String lotteryScoreRankView()
        throws NoteException;

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lotteryScoreRankView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryScoreRankView();

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryScoreRankView(java.util.Map<String, String> __ctx);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryScoreRankView(Ice.Callback __cb);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryScoreRankView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryScoreRankView(Callback_ActivityInfo_lotteryScoreRankView __cb);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryScoreRankView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_lotteryScoreRankView __cb);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __result The asynchronous result object.
     **/
    public String end_lotteryScoreRankView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __cb The callback object for the operation.
     **/
    public boolean lotteryScoreRankView_async(AMI_ActivityInfo_lotteryScoreRankView __cb);

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lotteryScoreRankView_async(AMI_ActivityInfo_lotteryScoreRankView __cb, java.util.Map<String, String> __ctx);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     **/
    public String lotteryCycleView()
        throws NoteException;

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lotteryCycleView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryCycleView();

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryCycleView(java.util.Map<String, String> __ctx);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryCycleView(Ice.Callback __cb);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryCycleView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryCycleView(Callback_ActivityInfo_lotteryCycleView __cb);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lotteryCycleView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_lotteryCycleView __cb);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __result The asynchronous result object.
     **/
    public String end_lotteryCycleView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __cb The callback object for the operation.
     **/
    public boolean lotteryCycleView_async(AMI_ActivityInfo_lotteryCycleView __cb);

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lotteryCycleView_async(AMI_ActivityInfo_lotteryCycleView __cb, java.util.Map<String, String> __ctx);

    /**
     * 分享活动主界面, 返回 ShareView
     **/
    public String sharePageView()
        throws NoteException;

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String sharePageView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 分享活动主界面, 返回 ShareView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sharePageView();

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sharePageView(java.util.Map<String, String> __ctx);

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sharePageView(Ice.Callback __cb);

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sharePageView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sharePageView(Callback_ActivityInfo_sharePageView __cb);

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sharePageView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_sharePageView __cb);

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __result The asynchronous result object.
     **/
    public String end_sharePageView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __cb The callback object for the operation.
     **/
    public boolean sharePageView_async(AMI_ActivityInfo_sharePageView __cb);

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean sharePageView_async(AMI_ActivityInfo_sharePageView __cb, java.util.Map<String, String> __ctx);

    /**
     * 分享    ShareSub
     **/
    public String share(int id)
        throws NoteException;

    /**
     * 分享    ShareSub
     * @param __ctx The Context map to send with the invocation.
     **/
    public String share(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 分享    ShareSub
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_share(int id);

    /**
     * 分享    ShareSub
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_share(int id, java.util.Map<String, String> __ctx);

    /**
     * 分享    ShareSub
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_share(int id, Ice.Callback __cb);

    /**
     * 分享    ShareSub
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_share(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 分享    ShareSub
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_share(int id, Callback_ActivityInfo_share __cb);

    /**
     * 分享    ShareSub
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_share(int id, java.util.Map<String, String> __ctx, Callback_ActivityInfo_share __cb);

    /**
     * 分享    ShareSub
     * @param __result The asynchronous result object.
     **/
    public String end_share(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 分享    ShareSub
     * @param __cb The callback object for the operation.
     **/
    public boolean share_async(AMI_ActivityInfo_share __cb, int id);

    /**
     * 分享    ShareSub
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean share_async(AMI_ActivityInfo_share __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 请求资源找回界面, return ResourceBackView
     **/
    public String getResourceBackView()
        throws NoteException;

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getResourceBackView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 请求资源找回界面, return ResourceBackView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getResourceBackView();

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getResourceBackView(java.util.Map<String, String> __ctx);

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getResourceBackView(Ice.Callback __cb);

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getResourceBackView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getResourceBackView(Callback_ActivityInfo_getResourceBackView __cb);

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getResourceBackView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getResourceBackView __cb);

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __result The asynchronous result object.
     **/
    public String end_getResourceBackView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __cb The callback object for the operation.
     **/
    public boolean getResourceBackView_async(AMI_ActivityInfo_getResourceBackView __cb);

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getResourceBackView_async(AMI_ActivityInfo_getResourceBackView __cb, java.util.Map<String, String> __ctx);

    /**
     * 接受奖励，return ItemView
     **/
    public void acceptResourceBack(String date, int type, int slot)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 接受奖励，return ItemView
     * @param __ctx The Context map to send with the invocation.
     **/
    public void acceptResourceBack(String date, int type, int slot, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 接受奖励，return ItemView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBack(String date, int type, int slot);

    /**
     * 接受奖励，return ItemView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBack(String date, int type, int slot, java.util.Map<String, String> __ctx);

    /**
     * 接受奖励，return ItemView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBack(String date, int type, int slot, Ice.Callback __cb);

    /**
     * 接受奖励，return ItemView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBack(String date, int type, int slot, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 接受奖励，return ItemView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBack(String date, int type, int slot, Callback_ActivityInfo_acceptResourceBack __cb);

    /**
     * 接受奖励，return ItemView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBack(String date, int type, int slot, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptResourceBack __cb);

    /**
     * 接受奖励，return ItemView
     * @param __result The asynchronous result object.
     **/
    public void end_acceptResourceBack(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 接受奖励，return ItemView
     * @param __cb The callback object for the operation.
     **/
    public boolean acceptResourceBack_async(AMI_ActivityInfo_acceptResourceBack __cb, String date, int type, int slot);

    /**
     * 接受奖励，return ItemView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean acceptResourceBack_async(AMI_ActivityInfo_acceptResourceBack __cb, String date, int type, int slot, java.util.Map<String, String> __ctx);

    /**
     * 一键找回
     **/
    public void acceptResourceBackOneKey(String date)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 一键找回
     * @param __ctx The Context map to send with the invocation.
     **/
    public void acceptResourceBackOneKey(String date, java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 一键找回
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBackOneKey(String date);

    /**
     * 一键找回
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBackOneKey(String date, java.util.Map<String, String> __ctx);

    /**
     * 一键找回
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBackOneKey(String date, Ice.Callback __cb);

    /**
     * 一键找回
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBackOneKey(String date, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 一键找回
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBackOneKey(String date, Callback_ActivityInfo_acceptResourceBackOneKey __cb);

    /**
     * 一键找回
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptResourceBackOneKey(String date, java.util.Map<String, String> __ctx, Callback_ActivityInfo_acceptResourceBackOneKey __cb);

    /**
     * 一键找回
     * @param __result The asynchronous result object.
     **/
    public void end_acceptResourceBackOneKey(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 一键找回
     * @param __cb The callback object for the operation.
     **/
    public boolean acceptResourceBackOneKey_async(AMI_ActivityInfo_acceptResourceBackOneKey __cb, String date);

    /**
     * 一键找回
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean acceptResourceBackOneKey_async(AMI_ActivityInfo_acceptResourceBackOneKey __cb, String date, java.util.Map<String, String> __ctx);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     **/
    public String getFootballView()
        throws NoteException;

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFootballView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballView();

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballView(java.util.Map<String, String> __ctx);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballView(Ice.Callback __cb);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballView(Callback_ActivityInfo_getFootballView __cb);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballView(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getFootballView __cb);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFootballView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFootballView_async(AMI_ActivityInfo_getFootballView __cb);

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFootballView_async(AMI_ActivityInfo_getFootballView __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     **/
    public String getCountryMatch(int countryId)
        throws NoteException;

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getCountryMatch(int countryId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCountryMatch(int countryId);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCountryMatch(int countryId, java.util.Map<String, String> __ctx);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCountryMatch(int countryId, Ice.Callback __cb);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCountryMatch(int countryId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCountryMatch(int countryId, Callback_ActivityInfo_getCountryMatch __cb);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getCountryMatch(int countryId, java.util.Map<String, String> __ctx, Callback_ActivityInfo_getCountryMatch __cb);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getCountryMatch(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getCountryMatch_async(AMI_ActivityInfo_getCountryMatch __cb, int countryId);

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getCountryMatch_async(AMI_ActivityInfo_getCountryMatch __cb, int countryId, java.util.Map<String, String> __ctx);

    /**
     * 购买奖杯,return:最新奖杯数量
     **/
    public int buyTrophy()
        throws NoteException;

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __ctx The Context map to send with the invocation.
     **/
    public int buyTrophy(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 购买奖杯,return:最新奖杯数量
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyTrophy();

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyTrophy(java.util.Map<String, String> __ctx);

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyTrophy(Ice.Callback __cb);

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyTrophy(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyTrophy(Callback_ActivityInfo_buyTrophy __cb);

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyTrophy(java.util.Map<String, String> __ctx, Callback_ActivityInfo_buyTrophy __cb);

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __result The asynchronous result object.
     **/
    public int end_buyTrophy(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __cb The callback object for the operation.
     **/
    public boolean buyTrophy_async(AMI_ActivityInfo_buyTrophy __cb);

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyTrophy_async(AMI_ActivityInfo_buyTrophy __cb, java.util.Map<String, String> __ctx);

    /**
     * 押注，平局countryId传-1
     **/
    public int footballBet(int id, int countryId, int num)
        throws NoteException;

    /**
     * 押注，平局countryId传-1
     * @param __ctx The Context map to send with the invocation.
     **/
    public int footballBet(int id, int countryId, int num, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 押注，平局countryId传-1
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBet(int id, int countryId, int num);

    /**
     * 押注，平局countryId传-1
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBet(int id, int countryId, int num, java.util.Map<String, String> __ctx);

    /**
     * 押注，平局countryId传-1
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBet(int id, int countryId, int num, Ice.Callback __cb);

    /**
     * 押注，平局countryId传-1
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBet(int id, int countryId, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 押注，平局countryId传-1
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBet(int id, int countryId, int num, Callback_ActivityInfo_footballBet __cb);

    /**
     * 押注，平局countryId传-1
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBet(int id, int countryId, int num, java.util.Map<String, String> __ctx, Callback_ActivityInfo_footballBet __cb);

    /**
     * 押注，平局countryId传-1
     * @param __result The asynchronous result object.
     **/
    public int end_footballBet(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 押注，平局countryId传-1
     * @param __cb The callback object for the operation.
     **/
    public boolean footballBet_async(AMI_ActivityInfo_footballBet __cb, int id, int countryId, int num);

    /**
     * 押注，平局countryId传-1
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean footballBet_async(AMI_ActivityInfo_footballBet __cb, int id, int countryId, int num, java.util.Map<String, String> __ctx);

    /**
     * 商店物品return:FootballShopSeq的lua
     **/
    public String getFootballShops()
        throws NoteException;

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFootballShops(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 商店物品return:FootballShopSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballShops();

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballShops(java.util.Map<String, String> __ctx);

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballShops(Ice.Callback __cb);

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballShops(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballShops(Callback_ActivityInfo_getFootballShops __cb);

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFootballShops(java.util.Map<String, String> __ctx, Callback_ActivityInfo_getFootballShops __cb);

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFootballShops(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFootballShops_async(AMI_ActivityInfo_getFootballShops __cb);

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFootballShops_async(AMI_ActivityInfo_getFootballShops __cb, java.util.Map<String, String> __ctx);

    /**
     * 商店兑换
     **/
    public int footballExchange(int id, int num)
        throws NoteException;

    /**
     * 商店兑换
     * @param __ctx The Context map to send with the invocation.
     **/
    public int footballExchange(int id, int num, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 商店兑换
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballExchange(int id, int num);

    /**
     * 商店兑换
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballExchange(int id, int num, java.util.Map<String, String> __ctx);

    /**
     * 商店兑换
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballExchange(int id, int num, Ice.Callback __cb);

    /**
     * 商店兑换
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballExchange(int id, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 商店兑换
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballExchange(int id, int num, Callback_ActivityInfo_footballExchange __cb);

    /**
     * 商店兑换
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballExchange(int id, int num, java.util.Map<String, String> __ctx, Callback_ActivityInfo_footballExchange __cb);

    /**
     * 商店兑换
     * @param __result The asynchronous result object.
     **/
    public int end_footballExchange(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 商店兑换
     * @param __cb The callback object for the operation.
     **/
    public boolean footballExchange_async(AMI_ActivityInfo_footballExchange __cb, int id, int num);

    /**
     * 商店兑换
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean footballExchange_async(AMI_ActivityInfo_footballExchange __cb, int id, int num, java.util.Map<String, String> __ctx);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     **/
    public String footballRank()
        throws NoteException;

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String footballRank(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballRank();

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballRank(java.util.Map<String, String> __ctx);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballRank(Ice.Callback __cb);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballRank(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballRank(Callback_ActivityInfo_footballRank __cb);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballRank(java.util.Map<String, String> __ctx, Callback_ActivityInfo_footballRank __cb);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_footballRank(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean footballRank_async(AMI_ActivityInfo_footballRank __cb);

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean footballRank_async(AMI_ActivityInfo_footballRank __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     **/
    public String footballBetLogs()
        throws NoteException;

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String footballBetLogs(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBetLogs();

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBetLogs(java.util.Map<String, String> __ctx);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBetLogs(Ice.Callback __cb);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBetLogs(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBetLogs(Callback_ActivityInfo_footballBetLogs __cb);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_footballBetLogs(java.util.Map<String, String> __ctx, Callback_ActivityInfo_footballBetLogs __cb);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_footballBetLogs(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean footballBetLogs_async(AMI_ActivityInfo_footballBetLogs __cb);

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean footballBetLogs_async(AMI_ActivityInfo_footballBetLogs __cb, java.util.Map<String, String> __ctx);
}
