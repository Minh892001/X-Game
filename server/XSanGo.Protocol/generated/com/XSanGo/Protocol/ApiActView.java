// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ApiActView implements java.lang.Cloneable, java.io.Serializable
{
    public int actId;

    public String startTime;

    public String endTime;

    public String title;

    public String intro;

    public String icon;

    public int isGo;

    public String _goto;

    public ApiTargetView[] targets;

    public ApiActView()
    {
    }

    public ApiActView(int actId, String startTime, String endTime, String title, String intro, String icon, int isGo, String _goto, ApiTargetView[] targets)
    {
        this.actId = actId;
        this.startTime = startTime;
        this.endTime = endTime;
        this.title = title;
        this.intro = intro;
        this.icon = icon;
        this.isGo = isGo;
        this._goto = _goto;
        this.targets = targets;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ApiActView _r = null;
        if(rhs instanceof ApiActView)
        {
            _r = (ApiActView)rhs;
        }

        if(_r != null)
        {
            if(actId != _r.actId)
            {
                return false;
            }
            if(startTime != _r.startTime)
            {
                if(startTime == null || _r.startTime == null || !startTime.equals(_r.startTime))
                {
                    return false;
                }
            }
            if(endTime != _r.endTime)
            {
                if(endTime == null || _r.endTime == null || !endTime.equals(_r.endTime))
                {
                    return false;
                }
            }
            if(title != _r.title)
            {
                if(title == null || _r.title == null || !title.equals(_r.title))
                {
                    return false;
                }
            }
            if(intro != _r.intro)
            {
                if(intro == null || _r.intro == null || !intro.equals(_r.intro))
                {
                    return false;
                }
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }
            if(isGo != _r.isGo)
            {
                return false;
            }
            if(_goto != _r._goto)
            {
                if(_goto == null || _r._goto == null || !_goto.equals(_r._goto))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(targets, _r.targets))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ApiActView");
        __h = IceInternal.HashUtil.hashAdd(__h, actId);
        __h = IceInternal.HashUtil.hashAdd(__h, startTime);
        __h = IceInternal.HashUtil.hashAdd(__h, endTime);
        __h = IceInternal.HashUtil.hashAdd(__h, title);
        __h = IceInternal.HashUtil.hashAdd(__h, intro);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        __h = IceInternal.HashUtil.hashAdd(__h, isGo);
        __h = IceInternal.HashUtil.hashAdd(__h, _goto);
        __h = IceInternal.HashUtil.hashAdd(__h, targets);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(actId);
        __os.writeString(startTime);
        __os.writeString(endTime);
        __os.writeString(title);
        __os.writeString(intro);
        __os.writeString(icon);
        __os.writeInt(isGo);
        __os.writeString(_goto);
        ApiTargetViewSeqHelper.write(__os, targets);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        actId = __is.readInt();
        startTime = __is.readString();
        endTime = __is.readString();
        title = __is.readString();
        intro = __is.readString();
        icon = __is.readString();
        isGo = __is.readInt();
        _goto = __is.readString();
        targets = ApiTargetViewSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1382070874L;
}
