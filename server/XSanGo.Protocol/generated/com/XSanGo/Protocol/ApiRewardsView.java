// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ApiRewardsView implements java.lang.Cloneable, java.io.Serializable
{
    public String itemCode;

    public int itemCount;

    public ApiRewardsView()
    {
    }

    public ApiRewardsView(String itemCode, int itemCount)
    {
        this.itemCode = itemCode;
        this.itemCount = itemCount;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ApiRewardsView _r = null;
        if(rhs instanceof ApiRewardsView)
        {
            _r = (ApiRewardsView)rhs;
        }

        if(_r != null)
        {
            if(itemCode != _r.itemCode)
            {
                if(itemCode == null || _r.itemCode == null || !itemCode.equals(_r.itemCode))
                {
                    return false;
                }
            }
            if(itemCount != _r.itemCount)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ApiRewardsView");
        __h = IceInternal.HashUtil.hashAdd(__h, itemCode);
        __h = IceInternal.HashUtil.hashAdd(__h, itemCount);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(itemCode);
        __os.writeInt(itemCount);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        itemCode = __is.readString();
        itemCount = __is.readInt();
    }

    public static final long serialVersionUID = -451877457L;
}
