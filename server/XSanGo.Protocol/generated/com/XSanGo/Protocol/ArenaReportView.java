// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ArenaRank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ArenaReportView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public String name;

    public short level;

    public String icon;

    public int vip;

    public int sex;

    public int rank;

    public int flag;

    public int compositeCombat;

    public int rankChange;

    public int sneerId;

    public Property[] reward;

    public long reportTime;

    public String reportId;

    public String fightId;

    public String fightMovieId;

    public int type;

    public int serverId;

    public String signature;

    public ArenaReportView()
    {
    }

    public ArenaReportView(String id, String name, short level, String icon, int vip, int sex, int rank, int flag, int compositeCombat, int rankChange, int sneerId, Property[] reward, long reportTime, String reportId, String fightId, String fightMovieId, int type, int serverId, String signature)
    {
        this.id = id;
        this.name = name;
        this.level = level;
        this.icon = icon;
        this.vip = vip;
        this.sex = sex;
        this.rank = rank;
        this.flag = flag;
        this.compositeCombat = compositeCombat;
        this.rankChange = rankChange;
        this.sneerId = sneerId;
        this.reward = reward;
        this.reportTime = reportTime;
        this.reportId = reportId;
        this.fightId = fightId;
        this.fightMovieId = fightMovieId;
        this.type = type;
        this.serverId = serverId;
        this.signature = signature;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ArenaReportView _r = null;
        if(rhs instanceof ArenaReportView)
        {
            _r = (ArenaReportView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }
            if(vip != _r.vip)
            {
                return false;
            }
            if(sex != _r.sex)
            {
                return false;
            }
            if(rank != _r.rank)
            {
                return false;
            }
            if(flag != _r.flag)
            {
                return false;
            }
            if(compositeCombat != _r.compositeCombat)
            {
                return false;
            }
            if(rankChange != _r.rankChange)
            {
                return false;
            }
            if(sneerId != _r.sneerId)
            {
                return false;
            }
            if(!java.util.Arrays.equals(reward, _r.reward))
            {
                return false;
            }
            if(reportTime != _r.reportTime)
            {
                return false;
            }
            if(reportId != _r.reportId)
            {
                if(reportId == null || _r.reportId == null || !reportId.equals(_r.reportId))
                {
                    return false;
                }
            }
            if(fightId != _r.fightId)
            {
                if(fightId == null || _r.fightId == null || !fightId.equals(_r.fightId))
                {
                    return false;
                }
            }
            if(fightMovieId != _r.fightMovieId)
            {
                if(fightMovieId == null || _r.fightMovieId == null || !fightMovieId.equals(_r.fightMovieId))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                return false;
            }
            if(serverId != _r.serverId)
            {
                return false;
            }
            if(signature != _r.signature)
            {
                if(signature == null || _r.signature == null || !signature.equals(_r.signature))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ArenaReportView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        __h = IceInternal.HashUtil.hashAdd(__h, vip);
        __h = IceInternal.HashUtil.hashAdd(__h, sex);
        __h = IceInternal.HashUtil.hashAdd(__h, rank);
        __h = IceInternal.HashUtil.hashAdd(__h, flag);
        __h = IceInternal.HashUtil.hashAdd(__h, compositeCombat);
        __h = IceInternal.HashUtil.hashAdd(__h, rankChange);
        __h = IceInternal.HashUtil.hashAdd(__h, sneerId);
        __h = IceInternal.HashUtil.hashAdd(__h, reward);
        __h = IceInternal.HashUtil.hashAdd(__h, reportTime);
        __h = IceInternal.HashUtil.hashAdd(__h, reportId);
        __h = IceInternal.HashUtil.hashAdd(__h, fightId);
        __h = IceInternal.HashUtil.hashAdd(__h, fightMovieId);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, serverId);
        __h = IceInternal.HashUtil.hashAdd(__h, signature);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeString(name);
        __os.writeShort(level);
        __os.writeString(icon);
        __os.writeInt(vip);
        __os.writeInt(sex);
        __os.writeInt(rank);
        __os.writeInt(flag);
        __os.writeInt(compositeCombat);
        __os.writeInt(rankChange);
        __os.writeInt(sneerId);
        PropertySeqHelper.write(__os, reward);
        __os.writeLong(reportTime);
        __os.writeString(reportId);
        __os.writeString(fightId);
        __os.writeString(fightMovieId);
        __os.writeInt(type);
        __os.writeInt(serverId);
        __os.writeString(signature);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        name = __is.readString();
        level = __is.readShort();
        icon = __is.readString();
        vip = __is.readInt();
        sex = __is.readInt();
        rank = __is.readInt();
        flag = __is.readInt();
        compositeCombat = __is.readInt();
        rankChange = __is.readInt();
        sneerId = __is.readInt();
        reward = PropertySeqHelper.read(__is);
        reportTime = __is.readLong();
        reportId = __is.readString();
        fightId = __is.readString();
        fightMovieId = __is.readString();
        type = __is.readInt();
        serverId = __is.readInt();
        signature = __is.readString();
    }

    public static final long serialVersionUID = -1334835597L;
}
