// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Copy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class BigCopyView implements java.lang.Cloneable, java.io.Serializable
{
    public CopyDetail[] copyJunior;

    public CopyDetail[] copySenior;

    public CopyDetail[] copyTop;

    public int buff;

    public BigCopyView()
    {
    }

    public BigCopyView(CopyDetail[] copyJunior, CopyDetail[] copySenior, CopyDetail[] copyTop, int buff)
    {
        this.copyJunior = copyJunior;
        this.copySenior = copySenior;
        this.copyTop = copyTop;
        this.buff = buff;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        BigCopyView _r = null;
        if(rhs instanceof BigCopyView)
        {
            _r = (BigCopyView)rhs;
        }

        if(_r != null)
        {
            if(!java.util.Arrays.equals(copyJunior, _r.copyJunior))
            {
                return false;
            }
            if(!java.util.Arrays.equals(copySenior, _r.copySenior))
            {
                return false;
            }
            if(!java.util.Arrays.equals(copyTop, _r.copyTop))
            {
                return false;
            }
            if(buff != _r.buff)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::BigCopyView");
        __h = IceInternal.HashUtil.hashAdd(__h, copyJunior);
        __h = IceInternal.HashUtil.hashAdd(__h, copySenior);
        __h = IceInternal.HashUtil.hashAdd(__h, copyTop);
        __h = IceInternal.HashUtil.hashAdd(__h, buff);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        CopyDetailSeqHelper.write(__os, copyJunior);
        CopyDetailSeqHelper.write(__os, copySenior);
        CopyDetailSeqHelper.write(__os, copyTop);
        __os.writeInt(buff);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        copyJunior = CopyDetailSeqHelper.read(__is);
        copySenior = CopyDetailSeqHelper.read(__is);
        copyTop = CopyDetailSeqHelper.read(__is);
        buff = __is.readInt();
    }

    public static final long serialVersionUID = 932272516L;
}
