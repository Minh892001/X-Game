// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Copy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class CaptureView implements java.lang.Cloneable, java.io.Serializable
{
    public int catchHeroId;

    public int releaseExp;

    public ItemView[] killItems;

    public String releaseMsg;

    public String killMsg;

    public boolean handle;

    public int employTime;

    public CaptureView()
    {
    }

    public CaptureView(int catchHeroId, int releaseExp, ItemView[] killItems, String releaseMsg, String killMsg, boolean handle, int employTime)
    {
        this.catchHeroId = catchHeroId;
        this.releaseExp = releaseExp;
        this.killItems = killItems;
        this.releaseMsg = releaseMsg;
        this.killMsg = killMsg;
        this.handle = handle;
        this.employTime = employTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CaptureView _r = null;
        if(rhs instanceof CaptureView)
        {
            _r = (CaptureView)rhs;
        }

        if(_r != null)
        {
            if(catchHeroId != _r.catchHeroId)
            {
                return false;
            }
            if(releaseExp != _r.releaseExp)
            {
                return false;
            }
            if(!java.util.Arrays.equals(killItems, _r.killItems))
            {
                return false;
            }
            if(releaseMsg != _r.releaseMsg)
            {
                if(releaseMsg == null || _r.releaseMsg == null || !releaseMsg.equals(_r.releaseMsg))
                {
                    return false;
                }
            }
            if(killMsg != _r.killMsg)
            {
                if(killMsg == null || _r.killMsg == null || !killMsg.equals(_r.killMsg))
                {
                    return false;
                }
            }
            if(handle != _r.handle)
            {
                return false;
            }
            if(employTime != _r.employTime)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CaptureView");
        __h = IceInternal.HashUtil.hashAdd(__h, catchHeroId);
        __h = IceInternal.HashUtil.hashAdd(__h, releaseExp);
        __h = IceInternal.HashUtil.hashAdd(__h, killItems);
        __h = IceInternal.HashUtil.hashAdd(__h, releaseMsg);
        __h = IceInternal.HashUtil.hashAdd(__h, killMsg);
        __h = IceInternal.HashUtil.hashAdd(__h, handle);
        __h = IceInternal.HashUtil.hashAdd(__h, employTime);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(catchHeroId);
        __os.writeInt(releaseExp);
        ItemViewSeqHelper.write(__os, killItems);
        __os.writeString(releaseMsg);
        __os.writeString(killMsg);
        __os.writeBool(handle);
        __os.writeInt(employTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        catchHeroId = __is.readInt();
        releaseExp = __is.readInt();
        killItems = ItemViewSeqHelper.read(__is);
        releaseMsg = __is.readString();
        killMsg = __is.readString();
        handle = __is.readBool();
        employTime = __is.readInt();
    }

    public static final long serialVersionUID = 1136118728L;
}
