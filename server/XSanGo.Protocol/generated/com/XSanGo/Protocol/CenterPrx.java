// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Center.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface CenterPrx extends Ice.ObjectPrx
{
    public void setCallback(CenterCallbackPrx cb);

    public void setCallback(CenterCallbackPrx cb, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCallback(CenterCallbackPrx cb);

    public Ice.AsyncResult begin_setCallback(CenterCallbackPrx cb, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCallback(CenterCallbackPrx cb, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCallback(CenterCallbackPrx cb, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCallback(CenterCallbackPrx cb, Callback_Center_setCallback __cb);

    public Ice.AsyncResult begin_setCallback(CenterCallbackPrx cb, java.util.Map<String, String> __ctx, Callback_Center_setCallback __cb);

    public void end_setCallback(Ice.AsyncResult __result);

    public boolean setCallback_async(AMI_Center_setCallback __cb, CenterCallbackPrx cb);

    public boolean setCallback_async(AMI_Center_setCallback __cb, CenterCallbackPrx cb, java.util.Map<String, String> __ctx);

    public ServerDetail ping();

    public ServerDetail ping(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ping();

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ping(Ice.Callback __cb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_ping(Callback_Center_ping __cb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx, Callback_Center_ping __cb);

    public ServerDetail end_ping(Ice.AsyncResult __result);

    public boolean ping_async(AMI_Center_ping __cb);

    public boolean ping_async(AMI_Center_ping __cb, java.util.Map<String, String> __ctx);

    public void sendTocken(int id, String account, String tocken, DeviceInfo device)
        throws NoteException;

    public void sendTocken(int id, String account, String tocken, DeviceInfo device, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendTocken(int id, String account, String tocken, DeviceInfo device);

    public Ice.AsyncResult begin_sendTocken(int id, String account, String tocken, DeviceInfo device, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendTocken(int id, String account, String tocken, DeviceInfo device, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendTocken(int id, String account, String tocken, DeviceInfo device, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendTocken(int id, String account, String tocken, DeviceInfo device, Callback_Center_sendTocken __cb);

    public Ice.AsyncResult begin_sendTocken(int id, String account, String tocken, DeviceInfo device, java.util.Map<String, String> __ctx, Callback_Center_sendTocken __cb);

    public void end_sendTocken(Ice.AsyncResult __result)
        throws NoteException;

    public boolean sendTocken_async(AMI_Center_sendTocken __cb, int id, String account, String tocken, DeviceInfo device);

    public boolean sendTocken_async(AMI_Center_sendTocken __cb, int id, String account, String tocken, DeviceInfo device, java.util.Map<String, String> __ctx);

    public String findRoleViewList(String accountName);

    public String findRoleViewList(String accountName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewList(String accountName);

    public Ice.AsyncResult begin_findRoleViewList(String accountName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewList(String accountName, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewList(String accountName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewList(String accountName, Callback_Center_findRoleViewList __cb);

    public Ice.AsyncResult begin_findRoleViewList(String accountName, java.util.Map<String, String> __ctx, Callback_Center_findRoleViewList __cb);

    public String end_findRoleViewList(Ice.AsyncResult __result);

    public boolean findRoleViewList_async(AMI_Center_findRoleViewList __cb, String accountName);

    public boolean findRoleViewList_async(AMI_Center_findRoleViewList __cb, String accountName, java.util.Map<String, String> __ctx);

    public String findRoleViewListByRole(String roleName);

    public String findRoleViewListByRole(String roleName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewListByRole(String roleName);

    public Ice.AsyncResult begin_findRoleViewListByRole(String roleName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewListByRole(String roleName, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewListByRole(String roleName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewListByRole(String roleName, Callback_Center_findRoleViewListByRole __cb);

    public Ice.AsyncResult begin_findRoleViewListByRole(String roleName, java.util.Map<String, String> __ctx, Callback_Center_findRoleViewListByRole __cb);

    public String end_findRoleViewListByRole(Ice.AsyncResult __result);

    public boolean findRoleViewListByRole_async(AMI_Center_findRoleViewListByRole __cb, String roleName);

    public boolean findRoleViewListByRole_async(AMI_Center_findRoleViewListByRole __cb, String roleName, java.util.Map<String, String> __ctx);

    public String findRoleViewListById(String roleId);

    public String findRoleViewListById(String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewListById(String roleId);

    public Ice.AsyncResult begin_findRoleViewListById(String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewListById(String roleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewListById(String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewListById(String roleId, Callback_Center_findRoleViewListById __cb);

    public Ice.AsyncResult begin_findRoleViewListById(String roleId, java.util.Map<String, String> __ctx, Callback_Center_findRoleViewListById __cb);

    public String end_findRoleViewListById(Ice.AsyncResult __result);

    public boolean findRoleViewListById_async(AMI_Center_findRoleViewListById __cb, String roleId);

    public boolean findRoleViewListById_async(AMI_Center_findRoleViewListById __cb, String roleId, java.util.Map<String, String> __ctx);

    public String getRecentMessages();

    public String getRecentMessages(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRecentMessages();

    public Ice.AsyncResult begin_getRecentMessages(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRecentMessages(Ice.Callback __cb);

    public Ice.AsyncResult begin_getRecentMessages(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getRecentMessages(Callback_Center_getRecentMessages __cb);

    public Ice.AsyncResult begin_getRecentMessages(java.util.Map<String, String> __ctx, Callback_Center_getRecentMessages __cb);

    public String end_getRecentMessages(Ice.AsyncResult __result);

    public boolean getRecentMessages_async(AMI_Center_getRecentMessages __cb);

    public boolean getRecentMessages_async(AMI_Center_getRecentMessages __cb, java.util.Map<String, String> __ctx);

    public void silence(String roleId, String releaseTime);

    public void silence(String roleId, String releaseTime, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_silence(String roleId, String releaseTime);

    public Ice.AsyncResult begin_silence(String roleId, String releaseTime, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_silence(String roleId, String releaseTime, Ice.Callback __cb);

    public Ice.AsyncResult begin_silence(String roleId, String releaseTime, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_silence(String roleId, String releaseTime, Callback_Center_silence __cb);

    public Ice.AsyncResult begin_silence(String roleId, String releaseTime, java.util.Map<String, String> __ctx, Callback_Center_silence __cb);

    public void end_silence(Ice.AsyncResult __result);

    public boolean silence_async(AMI_Center_silence __cb, String roleId, String releaseTime);

    public boolean silence_async(AMI_Center_silence __cb, String roleId, String releaseTime, java.util.Map<String, String> __ctx);

    public void systemAnnounce(String announce);

    public void systemAnnounce(String announce, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_systemAnnounce(String announce);

    public Ice.AsyncResult begin_systemAnnounce(String announce, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_systemAnnounce(String announce, Ice.Callback __cb);

    public Ice.AsyncResult begin_systemAnnounce(String announce, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_systemAnnounce(String announce, Callback_Center_systemAnnounce __cb);

    public Ice.AsyncResult begin_systemAnnounce(String announce, java.util.Map<String, String> __ctx, Callback_Center_systemAnnounce __cb);

    public void end_systemAnnounce(Ice.AsyncResult __result);

    public boolean systemAnnounce_async(AMI_Center_systemAnnounce __cb, String announce);

    public boolean systemAnnounce_async(AMI_Center_systemAnnounce __cb, String announce, java.util.Map<String, String> __ctx);

    public void kick(String account, String roleId);

    public void kick(String account, String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kick(String account, String roleId);

    public Ice.AsyncResult begin_kick(String account, String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kick(String account, String roleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_kick(String account, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_kick(String account, String roleId, Callback_Center_kick __cb);

    public Ice.AsyncResult begin_kick(String account, String roleId, java.util.Map<String, String> __ctx, Callback_Center_kick __cb);

    public void end_kick(Ice.AsyncResult __result);

    public boolean kick_async(AMI_Center_kick __cb, String account, String roleId);

    public boolean kick_async(AMI_Center_kick __cb, String account, String roleId, java.util.Map<String, String> __ctx);

    public void charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency);

    public void charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency);

    public Ice.AsyncResult begin_charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency, Ice.Callback __cb);

    public Ice.AsyncResult begin_charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency, Callback_Center_charge __cb);

    public Ice.AsyncResult begin_charge(String roleId, int yuan, CustomChargeParams params, String orderId, String currency, java.util.Map<String, String> __ctx, Callback_Center_charge __cb);

    public void end_charge(Ice.AsyncResult __result);

    public boolean charge_async(AMI_Center_charge __cb, String roleId, int yuan, CustomChargeParams params, String orderId, String currency);

    public boolean charge_async(AMI_Center_charge __cb, String roleId, int yuan, CustomChargeParams params, String orderId, String currency, java.util.Map<String, String> __ctx);

    public String[] getItemConfig()
        throws NoteException;

    public String[] getItemConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getItemConfig();

    public Ice.AsyncResult begin_getItemConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getItemConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getItemConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getItemConfig(Callback_Center_getItemConfig __cb);

    public Ice.AsyncResult begin_getItemConfig(java.util.Map<String, String> __ctx, Callback_Center_getItemConfig __cb);

    public String[] end_getItemConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getItemConfig_async(AMI_Center_getItemConfig __cb);

    public boolean getItemConfig_async(AMI_Center_getItemConfig __cb, java.util.Map<String, String> __ctx);

    public String[] getPropertyConfig()
        throws NoteException;

    public String[] getPropertyConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getPropertyConfig();

    public Ice.AsyncResult begin_getPropertyConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPropertyConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPropertyConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPropertyConfig(Callback_Center_getPropertyConfig __cb);

    public Ice.AsyncResult begin_getPropertyConfig(java.util.Map<String, String> __ctx, Callback_Center_getPropertyConfig __cb);

    public String[] end_getPropertyConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getPropertyConfig_async(AMI_Center_getPropertyConfig __cb);

    public boolean getPropertyConfig_async(AMI_Center_getPropertyConfig __cb, java.util.Map<String, String> __ctx);

    public IntString[] getPlayerSkillConfig()
        throws NoteException;

    public IntString[] getPlayerSkillConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getPlayerSkillConfig();

    public Ice.AsyncResult begin_getPlayerSkillConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPlayerSkillConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPlayerSkillConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPlayerSkillConfig(Callback_Center_getPlayerSkillConfig __cb);

    public Ice.AsyncResult begin_getPlayerSkillConfig(java.util.Map<String, String> __ctx, Callback_Center_getPlayerSkillConfig __cb);

    public IntString[] end_getPlayerSkillConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getPlayerSkillConfig_async(AMI_Center_getPlayerSkillConfig __cb);

    public boolean getPlayerSkillConfig_async(AMI_Center_getPlayerSkillConfig __cb, java.util.Map<String, String> __ctx);

    public IntString[] getHeroSkillConfig()
        throws NoteException;

    public IntString[] getHeroSkillConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getHeroSkillConfig();

    public Ice.AsyncResult begin_getHeroSkillConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getHeroSkillConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getHeroSkillConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getHeroSkillConfig(Callback_Center_getHeroSkillConfig __cb);

    public Ice.AsyncResult begin_getHeroSkillConfig(java.util.Map<String, String> __ctx, Callback_Center_getHeroSkillConfig __cb);

    public IntString[] end_getHeroSkillConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getHeroSkillConfig_async(AMI_Center_getHeroSkillConfig __cb);

    public boolean getHeroSkillConfig_async(AMI_Center_getHeroSkillConfig __cb, java.util.Map<String, String> __ctx);

    public IntString[] getRelationConfig()
        throws NoteException;

    public IntString[] getRelationConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getRelationConfig();

    public Ice.AsyncResult begin_getRelationConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRelationConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getRelationConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getRelationConfig(Callback_Center_getRelationConfig __cb);

    public Ice.AsyncResult begin_getRelationConfig(java.util.Map<String, String> __ctx, Callback_Center_getRelationConfig __cb);

    public IntString[] end_getRelationConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getRelationConfig_async(AMI_Center_getRelationConfig __cb);

    public boolean getRelationConfig_async(AMI_Center_getRelationConfig __cb, java.util.Map<String, String> __ctx);

    public void sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName)
        throws NoteException;

    public void sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName);

    public Ice.AsyncResult begin_sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName, Callback_Center_sendServerMail __cb);

    public Ice.AsyncResult begin_sendServerMail(String title, String body, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx, Callback_Center_sendServerMail __cb);

    public void end_sendServerMail(Ice.AsyncResult __result)
        throws NoteException;

    public boolean sendServerMail_async(AMI_Center_sendServerMail __cb, String title, String body, Property[] attach, String conditionParams, String senderName);

    public boolean sendServerMail_async(AMI_Center_sendServerMail __cb, String title, String body, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx);

    public void sendMail(String targetName, String title, String body, Property[] attach, String senderName)
        throws NoteException;

    public void sendMail(String targetName, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendMail(String targetName, String title, String body, Property[] attach, String senderName);

    public Ice.AsyncResult begin_sendMail(String targetName, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendMail(String targetName, String title, String body, Property[] attach, String senderName, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendMail(String targetName, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendMail(String targetName, String title, String body, Property[] attach, String senderName, Callback_Center_sendMail __cb);

    public Ice.AsyncResult begin_sendMail(String targetName, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx, Callback_Center_sendMail __cb);

    public void end_sendMail(Ice.AsyncResult __result)
        throws NoteException;

    public boolean sendMail_async(AMI_Center_sendMail __cb, String targetName, String title, String body, Property[] attach, String senderName);

    public boolean sendMail_async(AMI_Center_sendMail __cb, String targetName, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx);

    public void sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName)
        throws NoteException;

    public void sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName);

    public Ice.AsyncResult begin_sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName, Callback_Center_sendMailByRoleId __cb);

    public Ice.AsyncResult begin_sendMailByRoleId(String roleId, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx, Callback_Center_sendMailByRoleId __cb);

    public void end_sendMailByRoleId(Ice.AsyncResult __result)
        throws NoteException;

    public boolean sendMailByRoleId_async(AMI_Center_sendMailByRoleId __cb, String roleId, String title, String body, Property[] attach, String senderName);

    public boolean sendMailByRoleId_async(AMI_Center_sendMailByRoleId __cb, String roleId, String title, String body, Property[] attach, String senderName, java.util.Map<String, String> __ctx);

    public void executeGroovyScript(String script)
        throws NoteException;

    public void executeGroovyScript(String script, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_executeGroovyScript(String script);

    public Ice.AsyncResult begin_executeGroovyScript(String script, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_executeGroovyScript(String script, Ice.Callback __cb);

    public Ice.AsyncResult begin_executeGroovyScript(String script, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_executeGroovyScript(String script, Callback_Center_executeGroovyScript __cb);

    public Ice.AsyncResult begin_executeGroovyScript(String script, java.util.Map<String, String> __ctx, Callback_Center_executeGroovyScript __cb);

    public void end_executeGroovyScript(Ice.AsyncResult __result)
        throws NoteException;

    public boolean executeGroovyScript_async(AMI_Center_executeGroovyScript __cb, String script);

    public boolean executeGroovyScript_async(AMI_Center_executeGroovyScript __cb, String script, java.util.Map<String, String> __ctx);

    /**
     * 根据CDK查询玩家信息
     **/
    public String queryRoleByCDK(String cdk)
        throws NoteException;

    /**
     * 根据CDK查询玩家信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String queryRoleByCDK(String cdk, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 根据CDK查询玩家信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRoleByCDK(String cdk);

    /**
     * 根据CDK查询玩家信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRoleByCDK(String cdk, java.util.Map<String, String> __ctx);

    /**
     * 根据CDK查询玩家信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRoleByCDK(String cdk, Ice.Callback __cb);

    /**
     * 根据CDK查询玩家信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRoleByCDK(String cdk, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据CDK查询玩家信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRoleByCDK(String cdk, Callback_Center_queryRoleByCDK __cb);

    /**
     * 根据CDK查询玩家信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRoleByCDK(String cdk, java.util.Map<String, String> __ctx, Callback_Center_queryRoleByCDK __cb);

    /**
     * 根据CDK查询玩家信息
     * @param __result The asynchronous result object.
     **/
    public String end_queryRoleByCDK(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     **/
    public GmFactionView[] getFactionList(String factionName)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmFactionView[] getFactionList(String factionName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(String factionName);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(String factionName, java.util.Map<String, String> __ctx);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(String factionName, Ice.Callback __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(String factionName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(String factionName, Callback_Center_getFactionList __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(String factionName, java.util.Map<String, String> __ctx, Callback_Center_getFactionList __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __result The asynchronous result object.
     **/
    public GmFactionView[] end_getFactionList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionList_async(AMI_Center_getFactionList __cb, String factionName);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionList_async(AMI_Center_getFactionList __cb, String factionName, java.util.Map<String, String> __ctx);

    /**
     * 获取公会所有成员
     **/
    public GmFactionMemberView[] getFactionMemberList(String factionName)
        throws NoteException;

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmFactionMemberView[] getFactionMemberList(String factionName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会所有成员
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(String factionName);

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(String factionName, java.util.Map<String, String> __ctx);

    /**
     * 获取公会所有成员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(String factionName, Ice.Callback __cb);

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(String factionName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会所有成员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(String factionName, Callback_Center_getFactionMemberList __cb);

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(String factionName, java.util.Map<String, String> __ctx, Callback_Center_getFactionMemberList __cb);

    /**
     * 获取公会所有成员
     * @param __result The asynchronous result object.
     **/
    public GmFactionMemberView[] end_getFactionMemberList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会所有成员
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionMemberList_async(AMI_Center_getFactionMemberList __cb, String factionName);

    /**
     * 获取公会所有成员
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionMemberList_async(AMI_Center_getFactionMemberList __cb, String factionName, java.util.Map<String, String> __ctx);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     **/
    public GmRankView[] getRankList(int type)
        throws NoteException;

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmRankView[] getRankList(int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int type);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int type, java.util.Map<String, String> __ctx);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int type, Ice.Callback __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int type, Callback_Center_getRankList __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int type, java.util.Map<String, String> __ctx, Callback_Center_getRankList __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __result The asynchronous result object.
     **/
    public GmRankView[] end_getRankList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 充值记录查询
     **/
    public GmPayView getPayLog(String roleName)
        throws NoteException;

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmPayView getPayLog(String roleName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 充值记录查询
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(String roleName);

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(String roleName, java.util.Map<String, String> __ctx);

    /**
     * 充值记录查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(String roleName, Ice.Callback __cb);

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(String roleName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 充值记录查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(String roleName, Callback_Center_getPayLog __cb);

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(String roleName, java.util.Map<String, String> __ctx, Callback_Center_getPayLog __cb);

    /**
     * 充值记录查询
     * @param __result The asynchronous result object.
     **/
    public GmPayView end_getPayLog(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 根据金额获取充值选项
     **/
    public String getChargeItem(int yuan);

    /**
     * 根据金额获取充值选项
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getChargeItem(int yuan, java.util.Map<String, String> __ctx);

    /**
     * 根据金额获取充值选项
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChargeItem(int yuan);

    /**
     * 根据金额获取充值选项
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChargeItem(int yuan, java.util.Map<String, String> __ctx);

    /**
     * 根据金额获取充值选项
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChargeItem(int yuan, Ice.Callback __cb);

    /**
     * 根据金额获取充值选项
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChargeItem(int yuan, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据金额获取充值选项
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChargeItem(int yuan, Callback_Center_getChargeItem __cb);

    /**
     * 根据金额获取充值选项
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChargeItem(int yuan, java.util.Map<String, String> __ctx, Callback_Center_getChargeItem __cb);

    /**
     * 根据金额获取充值选项
     * @param __result The asynchronous result object.
     **/
    public String end_getChargeItem(Ice.AsyncResult __result);

    /**
     * 根据金额获取充值选项
     * @param __cb The callback object for the operation.
     **/
    public boolean getChargeItem_async(AMI_Center_getChargeItem __cb, int yuan);

    /**
     * 根据金额获取充值选项
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getChargeItem_async(AMI_Center_getChargeItem __cb, int yuan, java.util.Map<String, String> __ctx);

    /**
     * 查询物品数量
     **/
    public String queryItemNum(String roleName, String itemId);

    /**
     * 查询物品数量
     * @param __ctx The Context map to send with the invocation.
     **/
    public String queryItemNum(String roleName, String itemId, java.util.Map<String, String> __ctx);

    /**
     * 查询物品数量
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryItemNum(String roleName, String itemId);

    /**
     * 查询物品数量
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryItemNum(String roleName, String itemId, java.util.Map<String, String> __ctx);

    /**
     * 查询物品数量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryItemNum(String roleName, String itemId, Ice.Callback __cb);

    /**
     * 查询物品数量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryItemNum(String roleName, String itemId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询物品数量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryItemNum(String roleName, String itemId, Callback_Center_queryItemNum __cb);

    /**
     * 查询物品数量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryItemNum(String roleName, String itemId, java.util.Map<String, String> __ctx, Callback_Center_queryItemNum __cb);

    /**
     * 查询物品数量
     * @param __result The asynchronous result object.
     **/
    public String end_queryItemNum(Ice.AsyncResult __result);

    /**
     * 查询物品数量
     * @param __cb The callback object for the operation.
     **/
    public boolean queryItemNum_async(AMI_Center_queryItemNum __cb, String roleName, String itemId);

    /**
     * 查询物品数量
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean queryItemNum_async(AMI_Center_queryItemNum __cb, String roleName, String itemId, java.util.Map<String, String> __ctx);

    /**
     * 删除物品
     **/
    public String deleteItem(String roleId, String itemId, int num);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public String deleteItem(String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 删除物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(String roleId, String itemId, int num);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 删除物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(String roleId, String itemId, int num, Ice.Callback __cb);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(String roleId, String itemId, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 删除物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(String roleId, String itemId, int num, Callback_Center_deleteItem __cb);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(String roleId, String itemId, int num, java.util.Map<String, String> __ctx, Callback_Center_deleteItem __cb);

    /**
     * 删除物品
     * @param __result The asynchronous result object.
     **/
    public String end_deleteItem(Ice.AsyncResult __result);

    /**
     * 删除物品
     * @param __cb The callback object for the operation.
     **/
    public boolean deleteItem_async(AMI_Center_deleteItem __cb, String roleId, String itemId, int num);

    /**
     * 删除物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean deleteItem_async(AMI_Center_deleteItem __cb, String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 获取角色相关数据
     **/
    public byte[] getRoleDB(String roleId)
        throws NoteException;

    /**
     * 获取角色相关数据
     * @param __ctx The Context map to send with the invocation.
     **/
    public byte[] getRoleDB(String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取角色相关数据
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRoleDB(String roleId);

    /**
     * 获取角色相关数据
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRoleDB(String roleId, java.util.Map<String, String> __ctx);

    /**
     * 获取角色相关数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRoleDB(String roleId, Ice.Callback __cb);

    /**
     * 获取角色相关数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRoleDB(String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取角色相关数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRoleDB(String roleId, Callback_Center_getRoleDB __cb);

    /**
     * 获取角色相关数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRoleDB(String roleId, java.util.Map<String, String> __ctx, Callback_Center_getRoleDB __cb);

    /**
     * 获取角色相关数据
     * @param __result The asynchronous result object.
     **/
    public byte[] end_getRoleDB(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 导入role数据
     **/
    public void saveRoleData(int serverId, byte[] data, String roleId)
        throws NoteException;

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     **/
    public void saveRoleData(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 导入role数据
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveRoleData(int serverId, byte[] data, String roleId);

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveRoleData(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 导入role数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveRoleData(int serverId, byte[] data, String roleId, Ice.Callback __cb);

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveRoleData(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 导入role数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveRoleData(int serverId, byte[] data, String roleId, Callback_Center_saveRoleData __cb);

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveRoleData(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx, Callback_Center_saveRoleData __cb);

    /**
     * 导入role数据
     * @param __result The asynchronous result object.
     **/
    public void end_saveRoleData(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 根据roleName模糊查询
     **/
    public String findRoleViewListBySimpleRole(String roleName);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     **/
    public String findRoleViewListBySimpleRole(String roleName, java.util.Map<String, String> __ctx);

    /**
     * 根据roleName模糊查询
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleRole(String roleName);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleRole(String roleName, java.util.Map<String, String> __ctx);

    /**
     * 根据roleName模糊查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleRole(String roleName, Ice.Callback __cb);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleRole(String roleName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据roleName模糊查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleRole(String roleName, Callback_Center_findRoleViewListBySimpleRole __cb);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleRole(String roleName, java.util.Map<String, String> __ctx, Callback_Center_findRoleViewListBySimpleRole __cb);

    /**
     * 根据roleName模糊查询
     * @param __result The asynchronous result object.
     **/
    public String end_findRoleViewListBySimpleRole(Ice.AsyncResult __result);

    /**
     * 根据roleName模糊查询
     * @param __cb The callback object for the operation.
     **/
    public boolean findRoleViewListBySimpleRole_async(AMI_Center_findRoleViewListBySimpleRole __cb, String roleName);

    /**
     * 根据roleName模糊查询
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean findRoleViewListBySimpleRole_async(AMI_Center_findRoleViewListBySimpleRole __cb, String roleName, java.util.Map<String, String> __ctx);

    /**
     * 根据账号模糊查询
     **/
    public String findRoleViewListBySimpleAccount(String account);

    /**
     * 根据账号模糊查询
     * @param __ctx The Context map to send with the invocation.
     **/
    public String findRoleViewListBySimpleAccount(String account, java.util.Map<String, String> __ctx);

    /**
     * 根据账号模糊查询
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleAccount(String account);

    /**
     * 根据账号模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleAccount(String account, java.util.Map<String, String> __ctx);

    /**
     * 根据账号模糊查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleAccount(String account, Ice.Callback __cb);

    /**
     * 根据账号模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleAccount(String account, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据账号模糊查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleAccount(String account, Callback_Center_findRoleViewListBySimpleAccount __cb);

    /**
     * 根据账号模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findRoleViewListBySimpleAccount(String account, java.util.Map<String, String> __ctx, Callback_Center_findRoleViewListBySimpleAccount __cb);

    /**
     * 根据账号模糊查询
     * @param __result The asynchronous result object.
     **/
    public String end_findRoleViewListBySimpleAccount(Ice.AsyncResult __result);

    /**
     * 根据账号模糊查询
     * @param __cb The callback object for the operation.
     **/
    public boolean findRoleViewListBySimpleAccount_async(AMI_Center_findRoleViewListBySimpleAccount __cb, String account);

    /**
     * 根据账号模糊查询
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean findRoleViewListBySimpleAccount_async(AMI_Center_findRoleViewListBySimpleAccount __cb, String account, java.util.Map<String, String> __ctx);
}
