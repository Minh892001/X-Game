// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface ChatCallbackPrx extends Ice.ObjectPrx
{
    public void messageReceived(String senderId, String senderName, String msg);

    public void messageReceived(String senderId, String senderName, String msg, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_messageReceived(String senderId, String senderName, String msg);

    public Ice.AsyncResult begin_messageReceived(String senderId, String senderName, String msg, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_messageReceived(String senderId, String senderName, String msg, Ice.Callback __cb);

    public Ice.AsyncResult begin_messageReceived(String senderId, String senderName, String msg, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_messageReceived(String senderId, String senderName, String msg, Callback_ChatCallback_messageReceived __cb);

    public Ice.AsyncResult begin_messageReceived(String senderId, String senderName, String msg, java.util.Map<String, String> __ctx, Callback_ChatCallback_messageReceived __cb);

    public void end_messageReceived(Ice.AsyncResult __result);

    public boolean messageReceived_async(AMI_ChatCallback_messageReceived __cb, String senderId, String senderName, String msg);

    public boolean messageReceived_async(AMI_ChatCallback_messageReceived __cb, String senderId, String senderName, String msg, java.util.Map<String, String> __ctx);

    public void confirm(String text);

    public void confirm(String text, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_confirm(String text);

    public Ice.AsyncResult begin_confirm(String text, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_confirm(String text, Ice.Callback __cb);

    public Ice.AsyncResult begin_confirm(String text, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_confirm(String text, Callback_ChatCallback_confirm __cb);

    public Ice.AsyncResult begin_confirm(String text, java.util.Map<String, String> __ctx, Callback_ChatCallback_confirm __cb);

    public void end_confirm(Ice.AsyncResult __result);

    public boolean confirm_async(AMI_ChatCallback_confirm __cb, String text);

    public boolean confirm_async(AMI_ChatCallback_confirm __cb, String text, java.util.Map<String, String> __ctx);

    public void redPointSmit(int type, boolean show);

    public void redPointSmit(int type, boolean show, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_redPointSmit(int type, boolean show);

    public Ice.AsyncResult begin_redPointSmit(int type, boolean show, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_redPointSmit(int type, boolean show, Ice.Callback __cb);

    public Ice.AsyncResult begin_redPointSmit(int type, boolean show, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_redPointSmit(int type, boolean show, Callback_ChatCallback_redPointSmit __cb);

    public Ice.AsyncResult begin_redPointSmit(int type, boolean show, java.util.Map<String, String> __ctx, Callback_ChatCallback_redPointSmit __cb);

    public void end_redPointSmit(Ice.AsyncResult __result);

    public boolean redPointSmit_async(AMI_ChatCallback_redPointSmit __cb, int type, boolean show);

    public boolean redPointSmit_async(AMI_ChatCallback_redPointSmit __cb, int type, boolean show, java.util.Map<String, String> __ctx);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     **/
    public void updateDoubleCard(String intPairSeq);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public void updateDoubleCard(String intPairSeq, java.util.Map<String, String> __ctx);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateDoubleCard(String intPairSeq);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateDoubleCard(String intPairSeq, java.util.Map<String, String> __ctx);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateDoubleCard(String intPairSeq, Ice.Callback __cb);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateDoubleCard(String intPairSeq, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateDoubleCard(String intPairSeq, Callback_ChatCallback_updateDoubleCard __cb);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateDoubleCard(String intPairSeq, java.util.Map<String, String> __ctx, Callback_ChatCallback_updateDoubleCard __cb);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __result The asynchronous result object.
     **/
    public void end_updateDoubleCard(Ice.AsyncResult __result);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean updateDoubleCard_async(AMI_ChatCallback_updateDoubleCard __cb, String intPairSeq);

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean updateDoubleCard_async(AMI_ChatCallback_updateDoubleCard __cb, String intPairSeq, java.util.Map<String, String> __ctx);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     **/
    public void refreshHarmRank(String harmRanks);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public void refreshHarmRank(String harmRanks, java.util.Map<String, String> __ctx);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshHarmRank(String harmRanks);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshHarmRank(String harmRanks, java.util.Map<String, String> __ctx);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshHarmRank(String harmRanks, Ice.Callback __cb);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshHarmRank(String harmRanks, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshHarmRank(String harmRanks, Callback_ChatCallback_refreshHarmRank __cb);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshHarmRank(String harmRanks, java.util.Map<String, String> __ctx, Callback_ChatCallback_refreshHarmRank __cb);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __result The asynchronous result object.
     **/
    public void end_refreshHarmRank(Ice.AsyncResult __result);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean refreshHarmRank_async(AMI_ChatCallback_refreshHarmRank __cb, String harmRanks);

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean refreshHarmRank_async(AMI_ChatCallback_refreshHarmRank __cb, String harmRanks, java.util.Map<String, String> __ctx);

    /**
     * 登录后获取彩蛋视图
     **/
    public void getColorfulEggView(String view);

    /**
     * 登录后获取彩蛋视图
     * @param __ctx The Context map to send with the invocation.
     **/
    public void getColorfulEggView(String view, java.util.Map<String, String> __ctx);

    /**
     * 登录后获取彩蛋视图
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getColorfulEggView(String view);

    /**
     * 登录后获取彩蛋视图
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getColorfulEggView(String view, java.util.Map<String, String> __ctx);

    /**
     * 登录后获取彩蛋视图
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getColorfulEggView(String view, Ice.Callback __cb);

    /**
     * 登录后获取彩蛋视图
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getColorfulEggView(String view, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 登录后获取彩蛋视图
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getColorfulEggView(String view, Callback_ChatCallback_getColorfulEggView __cb);

    /**
     * 登录后获取彩蛋视图
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getColorfulEggView(String view, java.util.Map<String, String> __ctx, Callback_ChatCallback_getColorfulEggView __cb);

    /**
     * 登录后获取彩蛋视图
     * @param __result The asynchronous result object.
     **/
    public void end_getColorfulEggView(Ice.AsyncResult __result);

    /**
     * 登录后获取彩蛋视图
     * @param __cb The callback object for the operation.
     **/
    public boolean getColorfulEggView_async(AMI_ChatCallback_getColorfulEggView __cb, String view);

    /**
     * 登录后获取彩蛋视图
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getColorfulEggView_async(AMI_ChatCallback_getColorfulEggView __cb, String view, java.util.Map<String, String> __ctx);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     **/
    public void refreshTreasure(String view);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public void refreshTreasure(String view, java.util.Map<String, String> __ctx);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshTreasure(String view);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshTreasure(String view, java.util.Map<String, String> __ctx);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshTreasure(String view, Ice.Callback __cb);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshTreasure(String view, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshTreasure(String view, Callback_ChatCallback_refreshTreasure __cb);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_refreshTreasure(String view, java.util.Map<String, String> __ctx, Callback_ChatCallback_refreshTreasure __cb);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __result The asynchronous result object.
     **/
    public void end_refreshTreasure(Ice.AsyncResult __result);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean refreshTreasure_async(AMI_ChatCallback_refreshTreasure __cb, String view);

    /**
     * 更新寻宝数据，返回TreasureView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean refreshTreasure_async(AMI_ChatCallback_refreshTreasure __cb, String view, java.util.Map<String, String> __ctx);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     **/
    public void showMainUIButton(String status);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __ctx The Context map to send with the invocation.
     **/
    public void showMainUIButton(String status, java.util.Map<String, String> __ctx);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMainUIButton(String status);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMainUIButton(String status, java.util.Map<String, String> __ctx);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMainUIButton(String status, Ice.Callback __cb);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMainUIButton(String status, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMainUIButton(String status, Callback_ChatCallback_showMainUIButton __cb);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_showMainUIButton(String status, java.util.Map<String, String> __ctx, Callback_ChatCallback_showMainUIButton __cb);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __result The asynchronous result object.
     **/
    public void end_showMainUIButton(Ice.AsyncResult __result);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __cb The callback object for the operation.
     **/
    public boolean showMainUIButton_async(AMI_ChatCallback_showMainUIButton __cb, String status);

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean showMainUIButton_async(AMI_ChatCallback_showMainUIButton __cb, String status, java.util.Map<String, String> __ctx);
}
