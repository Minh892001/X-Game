// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ChatSetView implements java.lang.Cloneable, java.io.Serializable
{
    public int privateSet;

    public String privateColor;

    public String privateUserColor;

    public int worldSet;

    public String worldColor;

    public String worldUserColor;

    public int factionSet;

    public String factionColor;

    public String factionUserColor;

    public int groupSet;

    public String groupColor;

    public String groupUserColor;

    public ChatSetView()
    {
    }

    public ChatSetView(int privateSet, String privateColor, String privateUserColor, int worldSet, String worldColor, String worldUserColor, int factionSet, String factionColor, String factionUserColor, int groupSet, String groupColor, String groupUserColor)
    {
        this.privateSet = privateSet;
        this.privateColor = privateColor;
        this.privateUserColor = privateUserColor;
        this.worldSet = worldSet;
        this.worldColor = worldColor;
        this.worldUserColor = worldUserColor;
        this.factionSet = factionSet;
        this.factionColor = factionColor;
        this.factionUserColor = factionUserColor;
        this.groupSet = groupSet;
        this.groupColor = groupColor;
        this.groupUserColor = groupUserColor;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ChatSetView _r = null;
        if(rhs instanceof ChatSetView)
        {
            _r = (ChatSetView)rhs;
        }

        if(_r != null)
        {
            if(privateSet != _r.privateSet)
            {
                return false;
            }
            if(privateColor != _r.privateColor)
            {
                if(privateColor == null || _r.privateColor == null || !privateColor.equals(_r.privateColor))
                {
                    return false;
                }
            }
            if(privateUserColor != _r.privateUserColor)
            {
                if(privateUserColor == null || _r.privateUserColor == null || !privateUserColor.equals(_r.privateUserColor))
                {
                    return false;
                }
            }
            if(worldSet != _r.worldSet)
            {
                return false;
            }
            if(worldColor != _r.worldColor)
            {
                if(worldColor == null || _r.worldColor == null || !worldColor.equals(_r.worldColor))
                {
                    return false;
                }
            }
            if(worldUserColor != _r.worldUserColor)
            {
                if(worldUserColor == null || _r.worldUserColor == null || !worldUserColor.equals(_r.worldUserColor))
                {
                    return false;
                }
            }
            if(factionSet != _r.factionSet)
            {
                return false;
            }
            if(factionColor != _r.factionColor)
            {
                if(factionColor == null || _r.factionColor == null || !factionColor.equals(_r.factionColor))
                {
                    return false;
                }
            }
            if(factionUserColor != _r.factionUserColor)
            {
                if(factionUserColor == null || _r.factionUserColor == null || !factionUserColor.equals(_r.factionUserColor))
                {
                    return false;
                }
            }
            if(groupSet != _r.groupSet)
            {
                return false;
            }
            if(groupColor != _r.groupColor)
            {
                if(groupColor == null || _r.groupColor == null || !groupColor.equals(_r.groupColor))
                {
                    return false;
                }
            }
            if(groupUserColor != _r.groupUserColor)
            {
                if(groupUserColor == null || _r.groupUserColor == null || !groupUserColor.equals(_r.groupUserColor))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ChatSetView");
        __h = IceInternal.HashUtil.hashAdd(__h, privateSet);
        __h = IceInternal.HashUtil.hashAdd(__h, privateColor);
        __h = IceInternal.HashUtil.hashAdd(__h, privateUserColor);
        __h = IceInternal.HashUtil.hashAdd(__h, worldSet);
        __h = IceInternal.HashUtil.hashAdd(__h, worldColor);
        __h = IceInternal.HashUtil.hashAdd(__h, worldUserColor);
        __h = IceInternal.HashUtil.hashAdd(__h, factionSet);
        __h = IceInternal.HashUtil.hashAdd(__h, factionColor);
        __h = IceInternal.HashUtil.hashAdd(__h, factionUserColor);
        __h = IceInternal.HashUtil.hashAdd(__h, groupSet);
        __h = IceInternal.HashUtil.hashAdd(__h, groupColor);
        __h = IceInternal.HashUtil.hashAdd(__h, groupUserColor);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(privateSet);
        __os.writeString(privateColor);
        __os.writeString(privateUserColor);
        __os.writeInt(worldSet);
        __os.writeString(worldColor);
        __os.writeString(worldUserColor);
        __os.writeInt(factionSet);
        __os.writeString(factionColor);
        __os.writeString(factionUserColor);
        __os.writeInt(groupSet);
        __os.writeString(groupColor);
        __os.writeString(groupUserColor);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        privateSet = __is.readInt();
        privateColor = __is.readString();
        privateUserColor = __is.readString();
        worldSet = __is.readInt();
        worldColor = __is.readString();
        worldUserColor = __is.readString();
        factionSet = __is.readInt();
        factionColor = __is.readString();
        factionUserColor = __is.readString();
        groupSet = __is.readInt();
        groupColor = __is.readString();
        groupUserColor = __is.readString();
    }

    public static final long serialVersionUID = 626364713L;
}
