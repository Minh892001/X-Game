// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `AttackCastle.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ClearResultView implements java.lang.Cloneable, java.io.Serializable
{
    public CopyClearResultView[] normalResult;

    public HeroSoulPair[] heroResult;

    public ClearResultView()
    {
    }

    public ClearResultView(CopyClearResultView[] normalResult, HeroSoulPair[] heroResult)
    {
        this.normalResult = normalResult;
        this.heroResult = heroResult;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ClearResultView _r = null;
        if(rhs instanceof ClearResultView)
        {
            _r = (ClearResultView)rhs;
        }

        if(_r != null)
        {
            if(!java.util.Arrays.equals(normalResult, _r.normalResult))
            {
                return false;
            }
            if(!java.util.Arrays.equals(heroResult, _r.heroResult))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ClearResultView");
        __h = IceInternal.HashUtil.hashAdd(__h, normalResult);
        __h = IceInternal.HashUtil.hashAdd(__h, heroResult);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        CopyClearResultViewSeqHelper.write(__os, normalResult);
        HeroSoulPairSeqHelper.write(__os, heroResult);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        normalResult = CopyClearResultViewSeqHelper.read(__is);
        heroResult = HeroSoulPairSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1123562034L;
}
