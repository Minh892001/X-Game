// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ClientConfig implements java.lang.Cloneable, java.io.Serializable
{
    public String version;

    public String channel;

    public String mac;

    public String xmdmm;

    public String xmamg;

    public ClientConfig()
    {
    }

    public ClientConfig(String version, String channel, String mac, String xmdmm, String xmamg)
    {
        this.version = version;
        this.channel = channel;
        this.mac = mac;
        this.xmdmm = xmdmm;
        this.xmamg = xmamg;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ClientConfig _r = null;
        if(rhs instanceof ClientConfig)
        {
            _r = (ClientConfig)rhs;
        }

        if(_r != null)
        {
            if(version != _r.version)
            {
                if(version == null || _r.version == null || !version.equals(_r.version))
                {
                    return false;
                }
            }
            if(channel != _r.channel)
            {
                if(channel == null || _r.channel == null || !channel.equals(_r.channel))
                {
                    return false;
                }
            }
            if(mac != _r.mac)
            {
                if(mac == null || _r.mac == null || !mac.equals(_r.mac))
                {
                    return false;
                }
            }
            if(xmdmm != _r.xmdmm)
            {
                if(xmdmm == null || _r.xmdmm == null || !xmdmm.equals(_r.xmdmm))
                {
                    return false;
                }
            }
            if(xmamg != _r.xmamg)
            {
                if(xmamg == null || _r.xmamg == null || !xmamg.equals(_r.xmamg))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ClientConfig");
        __h = IceInternal.HashUtil.hashAdd(__h, version);
        __h = IceInternal.HashUtil.hashAdd(__h, channel);
        __h = IceInternal.HashUtil.hashAdd(__h, mac);
        __h = IceInternal.HashUtil.hashAdd(__h, xmdmm);
        __h = IceInternal.HashUtil.hashAdd(__h, xmamg);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(version);
        __os.writeString(channel);
        __os.writeString(mac);
        __os.writeString(xmdmm);
        __os.writeString(xmamg);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        version = __is.readString();
        channel = __is.readString();
        mac = __is.readString();
        xmdmm = __is.readString();
        xmamg = __is.readString();
    }

    public static final long serialVersionUID = 1888905629L;
}
