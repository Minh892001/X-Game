// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class CommodityView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public ItemType iType;

    public String templateId;

    public int num;

    public Money price;

    public boolean alreadyBuy;

    public int group;

    public CommodityView()
    {
    }

    public CommodityView(String id, ItemType iType, String templateId, int num, Money price, boolean alreadyBuy, int group)
    {
        this.id = id;
        this.iType = iType;
        this.templateId = templateId;
        this.num = num;
        this.price = price;
        this.alreadyBuy = alreadyBuy;
        this.group = group;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CommodityView _r = null;
        if(rhs instanceof CommodityView)
        {
            _r = (CommodityView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(iType != _r.iType)
            {
                if(iType == null || _r.iType == null || !iType.equals(_r.iType))
                {
                    return false;
                }
            }
            if(templateId != _r.templateId)
            {
                if(templateId == null || _r.templateId == null || !templateId.equals(_r.templateId))
                {
                    return false;
                }
            }
            if(num != _r.num)
            {
                return false;
            }
            if(price != _r.price)
            {
                if(price == null || _r.price == null || !price.equals(_r.price))
                {
                    return false;
                }
            }
            if(alreadyBuy != _r.alreadyBuy)
            {
                return false;
            }
            if(group != _r.group)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CommodityView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, iType);
        __h = IceInternal.HashUtil.hashAdd(__h, templateId);
        __h = IceInternal.HashUtil.hashAdd(__h, num);
        __h = IceInternal.HashUtil.hashAdd(__h, price);
        __h = IceInternal.HashUtil.hashAdd(__h, alreadyBuy);
        __h = IceInternal.HashUtil.hashAdd(__h, group);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        iType.__write(__os);
        __os.writeString(templateId);
        __os.writeInt(num);
        price.__write(__os);
        __os.writeBool(alreadyBuy);
        __os.writeInt(group);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        iType = ItemType.__read(__is);
        templateId = __is.readString();
        num = __is.readInt();
        price = new Money();
        price.__read(__is);
        alreadyBuy = __is.readBool();
        group = __is.readInt();
    }

    public static final long serialVersionUID = -226690316L;
}
