// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Copy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class CopyDetail implements java.lang.Cloneable, java.io.Serializable
{
    public int copyId;

    public int star;

    public SmallCopyView smallView;

    public CopyDetail()
    {
    }

    public CopyDetail(int copyId, int star, SmallCopyView smallView)
    {
        this.copyId = copyId;
        this.star = star;
        this.smallView = smallView;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CopyDetail _r = null;
        if(rhs instanceof CopyDetail)
        {
            _r = (CopyDetail)rhs;
        }

        if(_r != null)
        {
            if(copyId != _r.copyId)
            {
                return false;
            }
            if(star != _r.star)
            {
                return false;
            }
            if(smallView != _r.smallView)
            {
                if(smallView == null || _r.smallView == null || !smallView.equals(_r.smallView))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CopyDetail");
        __h = IceInternal.HashUtil.hashAdd(__h, copyId);
        __h = IceInternal.HashUtil.hashAdd(__h, star);
        __h = IceInternal.HashUtil.hashAdd(__h, smallView);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(copyId);
        __os.writeInt(star);
        smallView.__write(__os);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        copyId = __is.readInt();
        star = __is.readInt();
        smallView = new SmallCopyView();
        smallView.__read(__is);
    }

    public static final long serialVersionUID = -1474119955L;
}
