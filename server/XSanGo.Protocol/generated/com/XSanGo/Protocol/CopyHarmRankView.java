// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class CopyHarmRankView implements java.lang.Cloneable, java.io.Serializable
{
    public int rank;

    public int harm;

    public int scale;

    public FactionMemberView member;

    public CopyHarmRankView()
    {
    }

    public CopyHarmRankView(int rank, int harm, int scale, FactionMemberView member)
    {
        this.rank = rank;
        this.harm = harm;
        this.scale = scale;
        this.member = member;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CopyHarmRankView _r = null;
        if(rhs instanceof CopyHarmRankView)
        {
            _r = (CopyHarmRankView)rhs;
        }

        if(_r != null)
        {
            if(rank != _r.rank)
            {
                return false;
            }
            if(harm != _r.harm)
            {
                return false;
            }
            if(scale != _r.scale)
            {
                return false;
            }
            if(member != _r.member)
            {
                if(member == null || _r.member == null || !member.equals(_r.member))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CopyHarmRankView");
        __h = IceInternal.HashUtil.hashAdd(__h, rank);
        __h = IceInternal.HashUtil.hashAdd(__h, harm);
        __h = IceInternal.HashUtil.hashAdd(__h, scale);
        __h = IceInternal.HashUtil.hashAdd(__h, member);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(rank);
        __os.writeInt(harm);
        __os.writeInt(scale);
        member.__write(__os);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        rank = __is.readInt();
        harm = __is.readInt();
        scale = __is.readInt();
        member = new FactionMemberView();
        member.__read(__is);
    }

    public static final long serialVersionUID = 443939024L;
}
