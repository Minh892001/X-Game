// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Copy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 关卡占领列表
 **/
public class CopyOccupy implements java.lang.Cloneable, java.io.Serializable
{
    public int copyId;

    public int diff;

    public int sectionId;

    public String sectionName;

    public String copyName;

    public boolean isCanLevy;

    public CopyOccupy()
    {
    }

    public CopyOccupy(int copyId, int diff, int sectionId, String sectionName, String copyName, boolean isCanLevy)
    {
        this.copyId = copyId;
        this.diff = diff;
        this.sectionId = sectionId;
        this.sectionName = sectionName;
        this.copyName = copyName;
        this.isCanLevy = isCanLevy;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CopyOccupy _r = null;
        if(rhs instanceof CopyOccupy)
        {
            _r = (CopyOccupy)rhs;
        }

        if(_r != null)
        {
            if(copyId != _r.copyId)
            {
                return false;
            }
            if(diff != _r.diff)
            {
                return false;
            }
            if(sectionId != _r.sectionId)
            {
                return false;
            }
            if(sectionName != _r.sectionName)
            {
                if(sectionName == null || _r.sectionName == null || !sectionName.equals(_r.sectionName))
                {
                    return false;
                }
            }
            if(copyName != _r.copyName)
            {
                if(copyName == null || _r.copyName == null || !copyName.equals(_r.copyName))
                {
                    return false;
                }
            }
            if(isCanLevy != _r.isCanLevy)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CopyOccupy");
        __h = IceInternal.HashUtil.hashAdd(__h, copyId);
        __h = IceInternal.HashUtil.hashAdd(__h, diff);
        __h = IceInternal.HashUtil.hashAdd(__h, sectionId);
        __h = IceInternal.HashUtil.hashAdd(__h, sectionName);
        __h = IceInternal.HashUtil.hashAdd(__h, copyName);
        __h = IceInternal.HashUtil.hashAdd(__h, isCanLevy);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(copyId);
        __os.writeInt(diff);
        __os.writeInt(sectionId);
        __os.writeString(sectionName);
        __os.writeString(copyName);
        __os.writeBool(isCanLevy);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        copyId = __is.readInt();
        diff = __is.readInt();
        sectionId = __is.readInt();
        sectionName = __is.readString();
        copyName = __is.readString();
        isCanLevy = __is.readBool();
    }

    public static final long serialVersionUID = -314156037L;
}
