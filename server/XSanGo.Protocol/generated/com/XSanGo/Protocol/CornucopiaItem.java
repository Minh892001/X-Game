// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class CornucopiaItem implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public String itemId;

    public String itemName;

    public int num;

    public int price;

    public String tips;

    public boolean isBuy;

    public boolean isReceive;

    public int remainDays;

    public CornucopiaItem()
    {
    }

    public CornucopiaItem(int id, String itemId, String itemName, int num, int price, String tips, boolean isBuy, boolean isReceive, int remainDays)
    {
        this.id = id;
        this.itemId = itemId;
        this.itemName = itemName;
        this.num = num;
        this.price = price;
        this.tips = tips;
        this.isBuy = isBuy;
        this.isReceive = isReceive;
        this.remainDays = remainDays;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CornucopiaItem _r = null;
        if(rhs instanceof CornucopiaItem)
        {
            _r = (CornucopiaItem)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(itemId != _r.itemId)
            {
                if(itemId == null || _r.itemId == null || !itemId.equals(_r.itemId))
                {
                    return false;
                }
            }
            if(itemName != _r.itemName)
            {
                if(itemName == null || _r.itemName == null || !itemName.equals(_r.itemName))
                {
                    return false;
                }
            }
            if(num != _r.num)
            {
                return false;
            }
            if(price != _r.price)
            {
                return false;
            }
            if(tips != _r.tips)
            {
                if(tips == null || _r.tips == null || !tips.equals(_r.tips))
                {
                    return false;
                }
            }
            if(isBuy != _r.isBuy)
            {
                return false;
            }
            if(isReceive != _r.isReceive)
            {
                return false;
            }
            if(remainDays != _r.remainDays)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CornucopiaItem");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, itemId);
        __h = IceInternal.HashUtil.hashAdd(__h, itemName);
        __h = IceInternal.HashUtil.hashAdd(__h, num);
        __h = IceInternal.HashUtil.hashAdd(__h, price);
        __h = IceInternal.HashUtil.hashAdd(__h, tips);
        __h = IceInternal.HashUtil.hashAdd(__h, isBuy);
        __h = IceInternal.HashUtil.hashAdd(__h, isReceive);
        __h = IceInternal.HashUtil.hashAdd(__h, remainDays);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeString(itemId);
        __os.writeString(itemName);
        __os.writeInt(num);
        __os.writeInt(price);
        __os.writeString(tips);
        __os.writeBool(isBuy);
        __os.writeBool(isReceive);
        __os.writeInt(remainDays);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        itemId = __is.readString();
        itemName = __is.readString();
        num = __is.readInt();
        price = __is.readInt();
        tips = __is.readString();
        isBuy = __is.readBool();
        isReceive = __is.readBool();
        remainDays = __is.readInt();
    }

    public static final long serialVersionUID = 474969831L;
}
