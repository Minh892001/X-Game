// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `CrossServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 跨服PVP
 **/
public class CrossPvpView implements java.lang.Cloneable, java.io.Serializable
{
    public int type;

    public CrossRoleView leftRoleView;

    public PvpOpponentFormationView leftPvpView;

    public CrossRoleView rightRoleView;

    public PvpOpponentFormationView rightPvpView;

    public String sceneName;

    public int sceneID;

    public CrossPvpView()
    {
    }

    public CrossPvpView(int type, CrossRoleView leftRoleView, PvpOpponentFormationView leftPvpView, CrossRoleView rightRoleView, PvpOpponentFormationView rightPvpView, String sceneName, int sceneID)
    {
        this.type = type;
        this.leftRoleView = leftRoleView;
        this.leftPvpView = leftPvpView;
        this.rightRoleView = rightRoleView;
        this.rightPvpView = rightPvpView;
        this.sceneName = sceneName;
        this.sceneID = sceneID;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CrossPvpView _r = null;
        if(rhs instanceof CrossPvpView)
        {
            _r = (CrossPvpView)rhs;
        }

        if(_r != null)
        {
            if(type != _r.type)
            {
                return false;
            }
            if(leftRoleView != _r.leftRoleView)
            {
                if(leftRoleView == null || _r.leftRoleView == null || !leftRoleView.equals(_r.leftRoleView))
                {
                    return false;
                }
            }
            if(leftPvpView != _r.leftPvpView)
            {
                if(leftPvpView == null || _r.leftPvpView == null || !leftPvpView.equals(_r.leftPvpView))
                {
                    return false;
                }
            }
            if(rightRoleView != _r.rightRoleView)
            {
                if(rightRoleView == null || _r.rightRoleView == null || !rightRoleView.equals(_r.rightRoleView))
                {
                    return false;
                }
            }
            if(rightPvpView != _r.rightPvpView)
            {
                if(rightPvpView == null || _r.rightPvpView == null || !rightPvpView.equals(_r.rightPvpView))
                {
                    return false;
                }
            }
            if(sceneName != _r.sceneName)
            {
                if(sceneName == null || _r.sceneName == null || !sceneName.equals(_r.sceneName))
                {
                    return false;
                }
            }
            if(sceneID != _r.sceneID)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CrossPvpView");
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, leftRoleView);
        __h = IceInternal.HashUtil.hashAdd(__h, leftPvpView);
        __h = IceInternal.HashUtil.hashAdd(__h, rightRoleView);
        __h = IceInternal.HashUtil.hashAdd(__h, rightPvpView);
        __h = IceInternal.HashUtil.hashAdd(__h, sceneName);
        __h = IceInternal.HashUtil.hashAdd(__h, sceneID);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(type);
        leftRoleView.__write(__os);
        leftPvpView.__write(__os);
        rightRoleView.__write(__os);
        rightPvpView.__write(__os);
        __os.writeString(sceneName);
        __os.writeInt(sceneID);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        type = __is.readInt();
        leftRoleView = new CrossRoleView();
        leftRoleView.__read(__is);
        leftPvpView = new PvpOpponentFormationView();
        leftPvpView.__read(__is);
        rightRoleView = new CrossRoleView();
        rightRoleView.__read(__is);
        rightPvpView = new PvpOpponentFormationView();
        rightPvpView.__read(__is);
        sceneName = __is.readString();
        sceneID = __is.readInt();
    }

    public static final long serialVersionUID = -532531552L;
}
