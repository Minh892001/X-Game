// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `CrossServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 挑战对手
 **/
public class CrossRivalView implements java.lang.Cloneable, java.io.Serializable
{
    public CrossRoleView roleView;

    public PvpOpponentFormationView pvpView;

    public int score;

    public int winScore;

    public boolean isWin;

    public CrossRivalView()
    {
    }

    public CrossRivalView(CrossRoleView roleView, PvpOpponentFormationView pvpView, int score, int winScore, boolean isWin)
    {
        this.roleView = roleView;
        this.pvpView = pvpView;
        this.score = score;
        this.winScore = winScore;
        this.isWin = isWin;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CrossRivalView _r = null;
        if(rhs instanceof CrossRivalView)
        {
            _r = (CrossRivalView)rhs;
        }

        if(_r != null)
        {
            if(roleView != _r.roleView)
            {
                if(roleView == null || _r.roleView == null || !roleView.equals(_r.roleView))
                {
                    return false;
                }
            }
            if(pvpView != _r.pvpView)
            {
                if(pvpView == null || _r.pvpView == null || !pvpView.equals(_r.pvpView))
                {
                    return false;
                }
            }
            if(score != _r.score)
            {
                return false;
            }
            if(winScore != _r.winScore)
            {
                return false;
            }
            if(isWin != _r.isWin)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CrossRivalView");
        __h = IceInternal.HashUtil.hashAdd(__h, roleView);
        __h = IceInternal.HashUtil.hashAdd(__h, pvpView);
        __h = IceInternal.HashUtil.hashAdd(__h, score);
        __h = IceInternal.HashUtil.hashAdd(__h, winScore);
        __h = IceInternal.HashUtil.hashAdd(__h, isWin);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        roleView.__write(__os);
        pvpView.__write(__os);
        __os.writeInt(score);
        __os.writeInt(winScore);
        __os.writeBool(isWin);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        roleView = new CrossRoleView();
        roleView.__read(__is);
        pvpView = new PvpOpponentFormationView();
        pvpView.__read(__is);
        score = __is.readInt();
        winScore = __is.readInt();
        isWin = __is.readBool();
    }

    public static final long serialVersionUID = -134142052L;
}
