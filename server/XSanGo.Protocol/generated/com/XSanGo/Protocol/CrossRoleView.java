// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `CrossServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 跨服角色数据
 **/
public class CrossRoleView implements java.lang.Cloneable, java.io.Serializable
{
    public String roleId;

    public String roleName;

    public String headImg;

    public int level;

    public int vipLevel;

    public int serverId;

    public int sex;

    public String factionName;

    public CrossRoleView()
    {
    }

    public CrossRoleView(String roleId, String roleName, String headImg, int level, int vipLevel, int serverId, int sex, String factionName)
    {
        this.roleId = roleId;
        this.roleName = roleName;
        this.headImg = headImg;
        this.level = level;
        this.vipLevel = vipLevel;
        this.serverId = serverId;
        this.sex = sex;
        this.factionName = factionName;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CrossRoleView _r = null;
        if(rhs instanceof CrossRoleView)
        {
            _r = (CrossRoleView)rhs;
        }

        if(_r != null)
        {
            if(roleId != _r.roleId)
            {
                if(roleId == null || _r.roleId == null || !roleId.equals(_r.roleId))
                {
                    return false;
                }
            }
            if(roleName != _r.roleName)
            {
                if(roleName == null || _r.roleName == null || !roleName.equals(_r.roleName))
                {
                    return false;
                }
            }
            if(headImg != _r.headImg)
            {
                if(headImg == null || _r.headImg == null || !headImg.equals(_r.headImg))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(vipLevel != _r.vipLevel)
            {
                return false;
            }
            if(serverId != _r.serverId)
            {
                return false;
            }
            if(sex != _r.sex)
            {
                return false;
            }
            if(factionName != _r.factionName)
            {
                if(factionName == null || _r.factionName == null || !factionName.equals(_r.factionName))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::CrossRoleView");
        __h = IceInternal.HashUtil.hashAdd(__h, roleId);
        __h = IceInternal.HashUtil.hashAdd(__h, roleName);
        __h = IceInternal.HashUtil.hashAdd(__h, headImg);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, vipLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, serverId);
        __h = IceInternal.HashUtil.hashAdd(__h, sex);
        __h = IceInternal.HashUtil.hashAdd(__h, factionName);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(roleId);
        __os.writeString(roleName);
        __os.writeString(headImg);
        __os.writeInt(level);
        __os.writeInt(vipLevel);
        __os.writeInt(serverId);
        __os.writeInt(sex);
        __os.writeString(factionName);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        roleId = __is.readString();
        roleName = __is.readString();
        headImg = __is.readString();
        level = __is.readInt();
        vipLevel = __is.readInt();
        serverId = __is.readInt();
        sex = __is.readInt();
        factionName = __is.readString();
    }

    public static final long serialVersionUID = -1887517760L;
}
