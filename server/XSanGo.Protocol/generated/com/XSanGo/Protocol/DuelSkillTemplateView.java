// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class DuelSkillTemplateView implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public String target;

    public String effectProperty;

    public int effectValue;

    public int time;

    public String desc;

    public String icon;

    public DuelSkillTemplateView()
    {
    }

    public DuelSkillTemplateView(int id, String target, String effectProperty, int effectValue, int time, String desc, String icon)
    {
        this.id = id;
        this.target = target;
        this.effectProperty = effectProperty;
        this.effectValue = effectValue;
        this.time = time;
        this.desc = desc;
        this.icon = icon;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        DuelSkillTemplateView _r = null;
        if(rhs instanceof DuelSkillTemplateView)
        {
            _r = (DuelSkillTemplateView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(target != _r.target)
            {
                if(target == null || _r.target == null || !target.equals(_r.target))
                {
                    return false;
                }
            }
            if(effectProperty != _r.effectProperty)
            {
                if(effectProperty == null || _r.effectProperty == null || !effectProperty.equals(_r.effectProperty))
                {
                    return false;
                }
            }
            if(effectValue != _r.effectValue)
            {
                return false;
            }
            if(time != _r.time)
            {
                return false;
            }
            if(desc != _r.desc)
            {
                if(desc == null || _r.desc == null || !desc.equals(_r.desc))
                {
                    return false;
                }
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::DuelSkillTemplateView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, target);
        __h = IceInternal.HashUtil.hashAdd(__h, effectProperty);
        __h = IceInternal.HashUtil.hashAdd(__h, effectValue);
        __h = IceInternal.HashUtil.hashAdd(__h, time);
        __h = IceInternal.HashUtil.hashAdd(__h, desc);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeString(target);
        __os.writeString(effectProperty);
        __os.writeInt(effectValue);
        __os.writeInt(time);
        __os.writeString(desc);
        __os.writeString(icon);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        target = __is.readString();
        effectProperty = __is.readString();
        effectValue = __is.readInt();
        time = __is.readInt();
        desc = __is.readString();
        icon = __is.readString();
    }

    public static final long serialVersionUID = -1533434404L;
}
