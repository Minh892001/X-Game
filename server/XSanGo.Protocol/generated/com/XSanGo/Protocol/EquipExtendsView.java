// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class EquipExtendsView implements java.lang.Cloneable, java.io.Serializable
{
    public EquipType type;

    public int level;

    public byte star;

    public int starExp;

    public int battlePower;

    public GrowableProperty[] growableProperties;

    public Property[] properties;

    public IntString[] gems;

    public EquipExtendsView()
    {
    }

    public EquipExtendsView(EquipType type, int level, byte star, int starExp, int battlePower, GrowableProperty[] growableProperties, Property[] properties, IntString[] gems)
    {
        this.type = type;
        this.level = level;
        this.star = star;
        this.starExp = starExp;
        this.battlePower = battlePower;
        this.growableProperties = growableProperties;
        this.properties = properties;
        this.gems = gems;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        EquipExtendsView _r = null;
        if(rhs instanceof EquipExtendsView)
        {
            _r = (EquipExtendsView)rhs;
        }

        if(_r != null)
        {
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(star != _r.star)
            {
                return false;
            }
            if(starExp != _r.starExp)
            {
                return false;
            }
            if(battlePower != _r.battlePower)
            {
                return false;
            }
            if(!java.util.Arrays.equals(growableProperties, _r.growableProperties))
            {
                return false;
            }
            if(!java.util.Arrays.equals(properties, _r.properties))
            {
                return false;
            }
            if(!java.util.Arrays.equals(gems, _r.gems))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::EquipExtendsView");
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, star);
        __h = IceInternal.HashUtil.hashAdd(__h, starExp);
        __h = IceInternal.HashUtil.hashAdd(__h, battlePower);
        __h = IceInternal.HashUtil.hashAdd(__h, growableProperties);
        __h = IceInternal.HashUtil.hashAdd(__h, properties);
        __h = IceInternal.HashUtil.hashAdd(__h, gems);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        type.__write(__os);
        __os.writeInt(level);
        __os.writeByte(star);
        __os.writeInt(starExp);
        __os.writeInt(battlePower);
        GrowablePropertySeqHelper.write(__os, growableProperties);
        PropertySeqHelper.write(__os, properties);
        IntStringSeqHelper.write(__os, gems);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        type = EquipType.__read(__is);
        level = __is.readInt();
        star = __is.readByte();
        starExp = __is.readInt();
        battlePower = __is.readInt();
        growableProperties = GrowablePropertySeqHelper.read(__is);
        properties = PropertySeqHelper.read(__is);
        gems = IntStringSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1730449859L;
}
