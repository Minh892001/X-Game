// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ExchangeResult implements java.lang.Cloneable, java.io.Serializable
{
    public int flag;

    public int leftExchageNum;

    public ExchangeItems[] itemConfigs;

    public ExchangeResult()
    {
    }

    public ExchangeResult(int flag, int leftExchageNum, ExchangeItems[] itemConfigs)
    {
        this.flag = flag;
        this.leftExchageNum = leftExchageNum;
        this.itemConfigs = itemConfigs;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ExchangeResult _r = null;
        if(rhs instanceof ExchangeResult)
        {
            _r = (ExchangeResult)rhs;
        }

        if(_r != null)
        {
            if(flag != _r.flag)
            {
                return false;
            }
            if(leftExchageNum != _r.leftExchageNum)
            {
                return false;
            }
            if(!java.util.Arrays.equals(itemConfigs, _r.itemConfigs))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ExchangeResult");
        __h = IceInternal.HashUtil.hashAdd(__h, flag);
        __h = IceInternal.HashUtil.hashAdd(__h, leftExchageNum);
        __h = IceInternal.HashUtil.hashAdd(__h, itemConfigs);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(flag);
        __os.writeInt(leftExchageNum);
        ExchangeItemConfigSeqHelper.write(__os, itemConfigs);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        flag = __is.readInt();
        leftExchageNum = __is.readInt();
        itemConfigs = ExchangeItemConfigSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1335696803L;
}
