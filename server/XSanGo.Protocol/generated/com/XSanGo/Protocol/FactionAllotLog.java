// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 公会仓库分配日志
 **/
public class FactionAllotLog implements java.lang.Cloneable, java.io.Serializable
{
    public String datetime;

    public String bossName;

    public int bossVip;

    public String targetName;

    public int targetVip;

    public String itemName;

    public FactionAllotLog()
    {
    }

    public FactionAllotLog(String datetime, String bossName, int bossVip, String targetName, int targetVip, String itemName)
    {
        this.datetime = datetime;
        this.bossName = bossName;
        this.bossVip = bossVip;
        this.targetName = targetName;
        this.targetVip = targetVip;
        this.itemName = itemName;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FactionAllotLog _r = null;
        if(rhs instanceof FactionAllotLog)
        {
            _r = (FactionAllotLog)rhs;
        }

        if(_r != null)
        {
            if(datetime != _r.datetime)
            {
                if(datetime == null || _r.datetime == null || !datetime.equals(_r.datetime))
                {
                    return false;
                }
            }
            if(bossName != _r.bossName)
            {
                if(bossName == null || _r.bossName == null || !bossName.equals(_r.bossName))
                {
                    return false;
                }
            }
            if(bossVip != _r.bossVip)
            {
                return false;
            }
            if(targetName != _r.targetName)
            {
                if(targetName == null || _r.targetName == null || !targetName.equals(_r.targetName))
                {
                    return false;
                }
            }
            if(targetVip != _r.targetVip)
            {
                return false;
            }
            if(itemName != _r.itemName)
            {
                if(itemName == null || _r.itemName == null || !itemName.equals(_r.itemName))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FactionAllotLog");
        __h = IceInternal.HashUtil.hashAdd(__h, datetime);
        __h = IceInternal.HashUtil.hashAdd(__h, bossName);
        __h = IceInternal.HashUtil.hashAdd(__h, bossVip);
        __h = IceInternal.HashUtil.hashAdd(__h, targetName);
        __h = IceInternal.HashUtil.hashAdd(__h, targetVip);
        __h = IceInternal.HashUtil.hashAdd(__h, itemName);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(datetime);
        __os.writeString(bossName);
        __os.writeInt(bossVip);
        __os.writeString(targetName);
        __os.writeInt(targetVip);
        __os.writeString(itemName);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        datetime = __is.readString();
        bossName = __is.readString();
        bossVip = __is.readInt();
        targetName = __is.readString();
        targetVip = __is.readInt();
        itemName = __is.readString();
    }

    public static final long serialVersionUID = -1877873691L;
}
