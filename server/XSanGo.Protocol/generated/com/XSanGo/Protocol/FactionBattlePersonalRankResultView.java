// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 公会战个人排行榜
 **/
public class FactionBattlePersonalRankResultView implements java.lang.Cloneable, java.io.Serializable
{
    public FactionBattlePersonalRankView[] ranks;

    public int rank;

    public int badge;

    public boolean isShowAward;

    public FactionBattleRankAwardView[] rankAwardResults;

    public byte selectedIndex;

    public FactionBattlePersonalRankResultView()
    {
    }

    public FactionBattlePersonalRankResultView(FactionBattlePersonalRankView[] ranks, int rank, int badge, boolean isShowAward, FactionBattleRankAwardView[] rankAwardResults, byte selectedIndex)
    {
        this.ranks = ranks;
        this.rank = rank;
        this.badge = badge;
        this.isShowAward = isShowAward;
        this.rankAwardResults = rankAwardResults;
        this.selectedIndex = selectedIndex;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FactionBattlePersonalRankResultView _r = null;
        if(rhs instanceof FactionBattlePersonalRankResultView)
        {
            _r = (FactionBattlePersonalRankResultView)rhs;
        }

        if(_r != null)
        {
            if(!java.util.Arrays.equals(ranks, _r.ranks))
            {
                return false;
            }
            if(rank != _r.rank)
            {
                return false;
            }
            if(badge != _r.badge)
            {
                return false;
            }
            if(isShowAward != _r.isShowAward)
            {
                return false;
            }
            if(!java.util.Arrays.equals(rankAwardResults, _r.rankAwardResults))
            {
                return false;
            }
            if(selectedIndex != _r.selectedIndex)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FactionBattlePersonalRankResultView");
        __h = IceInternal.HashUtil.hashAdd(__h, ranks);
        __h = IceInternal.HashUtil.hashAdd(__h, rank);
        __h = IceInternal.HashUtil.hashAdd(__h, badge);
        __h = IceInternal.HashUtil.hashAdd(__h, isShowAward);
        __h = IceInternal.HashUtil.hashAdd(__h, rankAwardResults);
        __h = IceInternal.HashUtil.hashAdd(__h, selectedIndex);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        PersonalRankViewsHelper.write(__os, ranks);
        __os.writeInt(rank);
        __os.writeInt(badge);
        __os.writeBool(isShowAward);
        RankAwardViewsHelper.write(__os, rankAwardResults);
        __os.writeByte(selectedIndex);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        ranks = PersonalRankViewsHelper.read(__is);
        rank = __is.readInt();
        badge = __is.readInt();
        isShowAward = __is.readBool();
        rankAwardResults = RankAwardViewsHelper.read(__is);
        selectedIndex = __is.readByte();
    }

    public static final long serialVersionUID = -981989700L;
}
