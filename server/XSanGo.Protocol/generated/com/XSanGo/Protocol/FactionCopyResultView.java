// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class FactionCopyResultView implements java.lang.Cloneable, java.io.Serializable
{
    public int copyId;

    public int stageNum;

    public MonsterView[] monsters;

    public ItemView[] items;

    public ItemView[] killItems;

    public ItemView[] bloodItems;

    public AdditionType addType;

    public int addValue;

    public FactionCopyResultView()
    {
    }

    public FactionCopyResultView(int copyId, int stageNum, MonsterView[] monsters, ItemView[] items, ItemView[] killItems, ItemView[] bloodItems, AdditionType addType, int addValue)
    {
        this.copyId = copyId;
        this.stageNum = stageNum;
        this.monsters = monsters;
        this.items = items;
        this.killItems = killItems;
        this.bloodItems = bloodItems;
        this.addType = addType;
        this.addValue = addValue;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FactionCopyResultView _r = null;
        if(rhs instanceof FactionCopyResultView)
        {
            _r = (FactionCopyResultView)rhs;
        }

        if(_r != null)
        {
            if(copyId != _r.copyId)
            {
                return false;
            }
            if(stageNum != _r.stageNum)
            {
                return false;
            }
            if(!java.util.Arrays.equals(monsters, _r.monsters))
            {
                return false;
            }
            if(!java.util.Arrays.equals(items, _r.items))
            {
                return false;
            }
            if(!java.util.Arrays.equals(killItems, _r.killItems))
            {
                return false;
            }
            if(!java.util.Arrays.equals(bloodItems, _r.bloodItems))
            {
                return false;
            }
            if(addType != _r.addType)
            {
                if(addType == null || _r.addType == null || !addType.equals(_r.addType))
                {
                    return false;
                }
            }
            if(addValue != _r.addValue)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FactionCopyResultView");
        __h = IceInternal.HashUtil.hashAdd(__h, copyId);
        __h = IceInternal.HashUtil.hashAdd(__h, stageNum);
        __h = IceInternal.HashUtil.hashAdd(__h, monsters);
        __h = IceInternal.HashUtil.hashAdd(__h, items);
        __h = IceInternal.HashUtil.hashAdd(__h, killItems);
        __h = IceInternal.HashUtil.hashAdd(__h, bloodItems);
        __h = IceInternal.HashUtil.hashAdd(__h, addType);
        __h = IceInternal.HashUtil.hashAdd(__h, addValue);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(copyId);
        __os.writeInt(stageNum);
        MonsterViewSeqHelper.write(__os, monsters);
        ItemViewSeqHelper.write(__os, items);
        ItemViewSeqHelper.write(__os, killItems);
        ItemViewSeqHelper.write(__os, bloodItems);
        addType.__write(__os);
        __os.writeInt(addValue);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        copyId = __is.readInt();
        stageNum = __is.readInt();
        monsters = MonsterViewSeqHelper.read(__is);
        items = ItemViewSeqHelper.read(__is);
        killItems = ItemViewSeqHelper.read(__is);
        bloodItems = ItemViewSeqHelper.read(__is);
        addType = AdditionType.__read(__is);
        addValue = __is.readInt();
    }

    public static final long serialVersionUID = -145047519L;
}
