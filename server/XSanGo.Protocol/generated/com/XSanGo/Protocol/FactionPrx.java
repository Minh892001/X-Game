// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface FactionPrx extends Ice.ObjectPrx
{
    public void createFaction(String name, String icon)
        throws NotEnoughYuanBaoException,
               NoteException;

    public void createFaction(String name, String icon, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_createFaction(String name, String icon);

    public Ice.AsyncResult begin_createFaction(String name, String icon, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_createFaction(String name, String icon, Ice.Callback __cb);

    public Ice.AsyncResult begin_createFaction(String name, String icon, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_createFaction(String name, String icon, Callback_Faction_createFaction __cb);

    public Ice.AsyncResult begin_createFaction(String name, String icon, java.util.Map<String, String> __ctx, Callback_Faction_createFaction __cb);

    public void end_createFaction(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean createFaction_async(AMI_Faction_createFaction __cb, String name, String icon);

    public boolean createFaction_async(AMI_Faction_createFaction __cb, String name, String icon, java.util.Map<String, String> __ctx);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     **/
    public String getFactionList(int orderBy);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionList(int orderBy, java.util.Map<String, String> __ctx);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int orderBy);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int orderBy, java.util.Map<String, String> __ctx);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int orderBy, Ice.Callback __cb);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int orderBy, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int orderBy, Callback_Faction_getFactionList __cb);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int orderBy, java.util.Map<String, String> __ctx, Callback_Faction_getFactionList __cb);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionList(Ice.AsyncResult __result);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionList_async(AMI_Faction_getFactionList __cb, int orderBy);

    /**
     * 获取帮派列表，返回FactionListViewSeq的lua orderBy=0-人数 1-等级 2-随机
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionList_async(AMI_Faction_getFactionList __cb, int orderBy, java.util.Map<String, String> __ctx);

    public void applyFor(String factionId)
        throws NoteException;

    public void applyFor(String factionId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_applyFor(String factionId);

    public Ice.AsyncResult begin_applyFor(String factionId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_applyFor(String factionId, Ice.Callback __cb);

    public Ice.AsyncResult begin_applyFor(String factionId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_applyFor(String factionId, Callback_Faction_applyFor __cb);

    public Ice.AsyncResult begin_applyFor(String factionId, java.util.Map<String, String> __ctx, Callback_Faction_applyFor __cb);

    public void end_applyFor(Ice.AsyncResult __result)
        throws NoteException;

    public boolean applyFor_async(AMI_Faction_applyFor __cb, String factionId);

    public boolean applyFor_async(AMI_Faction_applyFor __cb, String factionId, java.util.Map<String, String> __ctx);

    public void cancelApplication(String factionId);

    public void cancelApplication(String factionId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_cancelApplication(String factionId);

    public Ice.AsyncResult begin_cancelApplication(String factionId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_cancelApplication(String factionId, Ice.Callback __cb);

    public Ice.AsyncResult begin_cancelApplication(String factionId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_cancelApplication(String factionId, Callback_Faction_cancelApplication __cb);

    public Ice.AsyncResult begin_cancelApplication(String factionId, java.util.Map<String, String> __ctx, Callback_Faction_cancelApplication __cb);

    public void end_cancelApplication(Ice.AsyncResult __result);

    public boolean cancelApplication_async(AMI_Faction_cancelApplication __cb, String factionId);

    public boolean cancelApplication_async(AMI_Faction_cancelApplication __cb, String factionId, java.util.Map<String, String> __ctx);

    public String getMyFaction()
        throws NoteException;

    public String getMyFaction(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getMyFaction();

    public Ice.AsyncResult begin_getMyFaction(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMyFaction(Ice.Callback __cb);

    public Ice.AsyncResult begin_getMyFaction(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMyFaction(Callback_Faction_getMyFaction __cb);

    public Ice.AsyncResult begin_getMyFaction(java.util.Map<String, String> __ctx, Callback_Faction_getMyFaction __cb);

    public String end_getMyFaction(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getMyFaction_async(AMI_Faction_getMyFaction __cb);

    public boolean getMyFaction_async(AMI_Faction_getMyFaction __cb, java.util.Map<String, String> __ctx);

    public String getJoinRequestList()
        throws NoteException;

    public String getJoinRequestList(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getJoinRequestList();

    public Ice.AsyncResult begin_getJoinRequestList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getJoinRequestList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getJoinRequestList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getJoinRequestList(Callback_Faction_getJoinRequestList __cb);

    public Ice.AsyncResult begin_getJoinRequestList(java.util.Map<String, String> __ctx, Callback_Faction_getJoinRequestList __cb);

    public String end_getJoinRequestList(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getJoinRequestList_async(AMI_Faction_getJoinRequestList __cb);

    public boolean getJoinRequestList_async(AMI_Faction_getJoinRequestList __cb, java.util.Map<String, String> __ctx);

    public void approveJoin(String applyId)
        throws NoteException;

    public void approveJoin(String applyId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_approveJoin(String applyId);

    public Ice.AsyncResult begin_approveJoin(String applyId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_approveJoin(String applyId, Ice.Callback __cb);

    public Ice.AsyncResult begin_approveJoin(String applyId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_approveJoin(String applyId, Callback_Faction_approveJoin __cb);

    public Ice.AsyncResult begin_approveJoin(String applyId, java.util.Map<String, String> __ctx, Callback_Faction_approveJoin __cb);

    public void end_approveJoin(Ice.AsyncResult __result)
        throws NoteException;

    public boolean approveJoin_async(AMI_Faction_approveJoin __cb, String applyId);

    public boolean approveJoin_async(AMI_Faction_approveJoin __cb, String applyId, java.util.Map<String, String> __ctx);

    public void denyJoin(String applyId);

    public void denyJoin(String applyId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_denyJoin(String applyId);

    public Ice.AsyncResult begin_denyJoin(String applyId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_denyJoin(String applyId, Ice.Callback __cb);

    public Ice.AsyncResult begin_denyJoin(String applyId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_denyJoin(String applyId, Callback_Faction_denyJoin __cb);

    public Ice.AsyncResult begin_denyJoin(String applyId, java.util.Map<String, String> __ctx, Callback_Faction_denyJoin __cb);

    public void end_denyJoin(Ice.AsyncResult __result);

    public boolean denyJoin_async(AMI_Faction_denyJoin __cb, String applyId);

    public boolean denyJoin_async(AMI_Faction_denyJoin __cb, String applyId, java.util.Map<String, String> __ctx);

    /**
     * 退出公会
     **/
    public void divorce()
        throws NoteException;

    /**
     * 退出公会
     * @param __ctx The Context map to send with the invocation.
     **/
    public void divorce(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 退出公会
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_divorce();

    /**
     * 退出公会
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_divorce(java.util.Map<String, String> __ctx);

    /**
     * 退出公会
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_divorce(Ice.Callback __cb);

    /**
     * 退出公会
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_divorce(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 退出公会
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_divorce(Callback_Faction_divorce __cb);

    /**
     * 退出公会
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_divorce(java.util.Map<String, String> __ctx, Callback_Faction_divorce __cb);

    /**
     * 退出公会
     * @param __result The asynchronous result object.
     **/
    public void end_divorce(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 退出公会
     * @param __cb The callback object for the operation.
     **/
    public boolean divorce_async(AMI_Faction_divorce __cb);

    /**
     * 退出公会
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean divorce_async(AMI_Faction_divorce __cb, java.util.Map<String, String> __ctx);

    public void deleteMember(String roleId)
        throws NoteException;

    public void deleteMember(String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_deleteMember(String roleId);

    public Ice.AsyncResult begin_deleteMember(String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteMember(String roleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteMember(String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteMember(String roleId, Callback_Faction_deleteMember __cb);

    public Ice.AsyncResult begin_deleteMember(String roleId, java.util.Map<String, String> __ctx, Callback_Faction_deleteMember __cb);

    public void end_deleteMember(Ice.AsyncResult __result)
        throws NoteException;

    public boolean deleteMember_async(AMI_Faction_deleteMember __cb, String roleId);

    public boolean deleteMember_async(AMI_Faction_deleteMember __cb, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 修改公会公告
     **/
    public void updateNotice(String newNotice)
        throws NoteException;

    /**
     * 修改公会公告
     * @param __ctx The Context map to send with the invocation.
     **/
    public void updateNotice(String newNotice, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 修改公会公告
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateNotice(String newNotice);

    /**
     * 修改公会公告
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateNotice(String newNotice, java.util.Map<String, String> __ctx);

    /**
     * 修改公会公告
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateNotice(String newNotice, Ice.Callback __cb);

    /**
     * 修改公会公告
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateNotice(String newNotice, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 修改公会公告
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateNotice(String newNotice, Callback_Faction_updateNotice __cb);

    /**
     * 修改公会公告
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateNotice(String newNotice, java.util.Map<String, String> __ctx, Callback_Faction_updateNotice __cb);

    /**
     * 修改公会公告
     * @param __result The asynchronous result object.
     **/
    public void end_updateNotice(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 修改公会公告
     * @param __cb The callback object for the operation.
     **/
    public boolean updateNotice_async(AMI_Faction_updateNotice __cb, String newNotice);

    /**
     * 修改公会公告
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean updateNotice_async(AMI_Faction_updateNotice __cb, String newNotice, java.util.Map<String, String> __ctx);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     **/
    public String findFaction(String idOrName)
        throws NoteException;

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String findFaction(String idOrName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFaction(String idOrName);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFaction(String idOrName, java.util.Map<String, String> __ctx);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFaction(String idOrName, Ice.Callback __cb);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFaction(String idOrName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFaction(String idOrName, Callback_Faction_findFaction __cb);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFaction(String idOrName, java.util.Map<String, String> __ctx, Callback_Faction_findFaction __cb);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_findFaction(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean findFaction_async(AMI_Faction_findFaction __cb, String idOrName);

    /**
     * 查找公会 返回FactionListViewSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean findFaction_async(AMI_Faction_findFaction __cb, String idOrName, java.util.Map<String, String> __ctx);

    /**
     * 转让公会(升为会长)
     **/
    public void transferFaction(String targetId)
        throws NoteException;

    /**
     * 转让公会(升为会长)
     * @param __ctx The Context map to send with the invocation.
     **/
    public void transferFaction(String targetId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 转让公会(升为会长)
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transferFaction(String targetId);

    /**
     * 转让公会(升为会长)
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transferFaction(String targetId, java.util.Map<String, String> __ctx);

    /**
     * 转让公会(升为会长)
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transferFaction(String targetId, Ice.Callback __cb);

    /**
     * 转让公会(升为会长)
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transferFaction(String targetId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 转让公会(升为会长)
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transferFaction(String targetId, Callback_Faction_transferFaction __cb);

    /**
     * 转让公会(升为会长)
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transferFaction(String targetId, java.util.Map<String, String> __ctx, Callback_Faction_transferFaction __cb);

    /**
     * 转让公会(升为会长)
     * @param __result The asynchronous result object.
     **/
    public void end_transferFaction(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 转让公会(升为会长)
     * @param __cb The callback object for the operation.
     **/
    public boolean transferFaction_async(AMI_Faction_transferFaction __cb, String targetId);

    /**
     * 转让公会(升为会长)
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean transferFaction_async(AMI_Faction_transferFaction __cb, String targetId, java.util.Map<String, String> __ctx);

    /**
     * 升为长老
     **/
    public void upElder(String targetId)
        throws NoteException;

    /**
     * 升为长老
     * @param __ctx The Context map to send with the invocation.
     **/
    public void upElder(String targetId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 升为长老
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upElder(String targetId);

    /**
     * 升为长老
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upElder(String targetId, java.util.Map<String, String> __ctx);

    /**
     * 升为长老
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upElder(String targetId, Ice.Callback __cb);

    /**
     * 升为长老
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upElder(String targetId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 升为长老
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upElder(String targetId, Callback_Faction_upElder __cb);

    /**
     * 升为长老
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_upElder(String targetId, java.util.Map<String, String> __ctx, Callback_Faction_upElder __cb);

    /**
     * 升为长老
     * @param __result The asynchronous result object.
     **/
    public void end_upElder(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 升为长老
     * @param __cb The callback object for the operation.
     **/
    public boolean upElder_async(AMI_Faction_upElder __cb, String targetId);

    /**
     * 升为长老
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean upElder_async(AMI_Faction_upElder __cb, String targetId, java.util.Map<String, String> __ctx);

    /**
     * 设置成普通会员
     **/
    public void setCommon(String targetId)
        throws NoteException;

    /**
     * 设置成普通会员
     * @param __ctx The Context map to send with the invocation.
     **/
    public void setCommon(String targetId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 设置成普通会员
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setCommon(String targetId);

    /**
     * 设置成普通会员
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setCommon(String targetId, java.util.Map<String, String> __ctx);

    /**
     * 设置成普通会员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setCommon(String targetId, Ice.Callback __cb);

    /**
     * 设置成普通会员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setCommon(String targetId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 设置成普通会员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setCommon(String targetId, Callback_Faction_setCommon __cb);

    /**
     * 设置成普通会员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setCommon(String targetId, java.util.Map<String, String> __ctx, Callback_Faction_setCommon __cb);

    /**
     * 设置成普通会员
     * @param __result The asynchronous result object.
     **/
    public void end_setCommon(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 设置成普通会员
     * @param __cb The callback object for the operation.
     **/
    public boolean setCommon_async(AMI_Faction_setCommon __cb, String targetId);

    /**
     * 设置成普通会员
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean setCommon_async(AMI_Faction_setCommon __cb, String targetId, java.util.Map<String, String> __ctx);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     **/
    public void factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay)
        throws NoteException;

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __ctx The Context map to send with the invocation.
     **/
    public void factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, java.util.Map<String, String> __ctx);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, Ice.Callback __cb);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, Callback_Faction_factionConfig __cb);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionConfig(String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, java.util.Map<String, String> __ctx, Callback_Faction_factionConfig __cb);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __result The asynchronous result object.
     **/
    public void end_factionConfig(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __cb The callback object for the operation.
     **/
    public boolean factionConfig_async(AMI_Faction_factionConfig __cb, String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay);

    /**
     * 公会设置 joinType 0-直接加入 1-验证加入 2-拒绝加入
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean factionConfig_async(AMI_Faction_factionConfig __cb, String icon, String qq, String notice, int joinType, int joinLevel, int joinVip, String manifesto, int deleteDay, java.util.Map<String, String> __ctx);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     **/
    public String getFactionHistorys();

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionHistorys(java.util.Map<String, String> __ctx);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionHistorys();

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionHistorys(java.util.Map<String, String> __ctx);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionHistorys(Ice.Callback __cb);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionHistorys(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionHistorys(Callback_Faction_getFactionHistorys __cb);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionHistorys(java.util.Map<String, String> __ctx, Callback_Faction_getFactionHistorys __cb);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionHistorys(Ice.AsyncResult __result);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionHistorys_async(AMI_Faction_getFactionHistorys __cb);

    /**
     * 查看公会动态(历史记录) 返回FactionHistoryViewSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionHistorys_async(AMI_Faction_getFactionHistorys __cb, java.util.Map<String, String> __ctx);

    /**
     * 公会捐赠 num-捐赠数量
     **/
    public void donation(int num)
        throws NoteException;

    /**
     * 公会捐赠 num-捐赠数量
     * @param __ctx The Context map to send with the invocation.
     **/
    public void donation(int num, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会捐赠 num-捐赠数量
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donation(int num);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donation(int num, java.util.Map<String, String> __ctx);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donation(int num, Ice.Callback __cb);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donation(int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donation(int num, Callback_Faction_donation __cb);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donation(int num, java.util.Map<String, String> __ctx, Callback_Faction_donation __cb);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __result The asynchronous result object.
     **/
    public void end_donation(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会捐赠 num-捐赠数量
     * @param __cb The callback object for the operation.
     **/
    public boolean donation_async(AMI_Faction_donation __cb, int num);

    /**
     * 公会捐赠 num-捐赠数量
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean donation_async(AMI_Faction_donation __cb, int num, java.util.Map<String, String> __ctx);

    /**
     * 公会改名
     **/
    public void rename(String newName)
        throws NoteException;

    /**
     * 公会改名
     * @param __ctx The Context map to send with the invocation.
     **/
    public void rename(String newName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会改名
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rename(String newName);

    /**
     * 公会改名
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rename(String newName, java.util.Map<String, String> __ctx);

    /**
     * 公会改名
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rename(String newName, Ice.Callback __cb);

    /**
     * 公会改名
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rename(String newName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会改名
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rename(String newName, Callback_Faction_rename __cb);

    /**
     * 公会改名
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rename(String newName, java.util.Map<String, String> __ctx, Callback_Faction_rename __cb);

    /**
     * 公会改名
     * @param __result The asynchronous result object.
     **/
    public void end_rename(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会改名
     * @param __cb The callback object for the operation.
     **/
    public boolean rename_async(AMI_Faction_rename __cb, String newName);

    /**
     * 公会改名
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean rename_async(AMI_Faction_rename __cb, String newName, java.util.Map<String, String> __ctx);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     **/
    public String factionCopyList()
        throws NoteException;

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __ctx The Context map to send with the invocation.
     **/
    public String factionCopyList(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyList();

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyList(java.util.Map<String, String> __ctx);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyList(Ice.Callback __cb);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyList(Callback_Faction_factionCopyList __cb);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyList(java.util.Map<String, String> __ctx, Callback_Faction_factionCopyList __cb);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __result The asynchronous result object.
     **/
    public String end_factionCopyList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __cb The callback object for the operation.
     **/
    public boolean factionCopyList_async(AMI_Faction_factionCopyList __cb);

    /**
     * 打开副本列表界面 返回IntIntPair,first-已开启的副本ID,second-可开启副本次数
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean factionCopyList_async(AMI_Faction_factionCopyList __cb, java.util.Map<String, String> __ctx);

    /**
     * 开启副本 返回还可开启的次数
     **/
    public int openFactionCopy(int copyId)
        throws NoteException;

    /**
     * 开启副本 返回还可开启的次数
     * @param __ctx The Context map to send with the invocation.
     **/
    public int openFactionCopy(int copyId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 开启副本 返回还可开启的次数
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionCopy(int copyId);

    /**
     * 开启副本 返回还可开启的次数
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionCopy(int copyId, java.util.Map<String, String> __ctx);

    /**
     * 开启副本 返回还可开启的次数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionCopy(int copyId, Ice.Callback __cb);

    /**
     * 开启副本 返回还可开启的次数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionCopy(int copyId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 开启副本 返回还可开启的次数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionCopy(int copyId, Callback_Faction_openFactionCopy __cb);

    /**
     * 开启副本 返回还可开启的次数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionCopy(int copyId, java.util.Map<String, String> __ctx, Callback_Faction_openFactionCopy __cb);

    /**
     * 开启副本 返回还可开启的次数
     * @param __result The asynchronous result object.
     **/
    public int end_openFactionCopy(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 开启副本 返回还可开启的次数
     * @param __cb The callback object for the operation.
     **/
    public boolean openFactionCopy_async(AMI_Faction_openFactionCopy __cb, int copyId);

    /**
     * 开启副本 返回还可开启的次数
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openFactionCopy_async(AMI_Faction_openFactionCopy __cb, int copyId, java.util.Map<String, String> __ctx);

    /**
     * 关闭开启的副本
     **/
    public void closeFactionCopy()
        throws NoteException;

    /**
     * 关闭开启的副本
     * @param __ctx The Context map to send with the invocation.
     **/
    public void closeFactionCopy(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 关闭开启的副本
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_closeFactionCopy();

    /**
     * 关闭开启的副本
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_closeFactionCopy(java.util.Map<String, String> __ctx);

    /**
     * 关闭开启的副本
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_closeFactionCopy(Ice.Callback __cb);

    /**
     * 关闭开启的副本
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_closeFactionCopy(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 关闭开启的副本
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_closeFactionCopy(Callback_Faction_closeFactionCopy __cb);

    /**
     * 关闭开启的副本
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_closeFactionCopy(java.util.Map<String, String> __ctx, Callback_Faction_closeFactionCopy __cb);

    /**
     * 关闭开启的副本
     * @param __result The asynchronous result object.
     **/
    public void end_closeFactionCopy(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 关闭开启的副本
     * @param __cb The callback object for the operation.
     **/
    public boolean closeFactionCopy_async(AMI_Faction_closeFactionCopy __cb);

    /**
     * 关闭开启的副本
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean closeFactionCopy_async(AMI_Faction_closeFactionCopy __cb, java.util.Map<String, String> __ctx);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     **/
    public String factionCopyInfo()
        throws NoteException;

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String factionCopyInfo(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyInfo();

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyInfo(java.util.Map<String, String> __ctx);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyInfo(Ice.Callback __cb);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyInfo(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyInfo(Callback_Faction_factionCopyInfo __cb);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_factionCopyInfo(java.util.Map<String, String> __ctx, Callback_Faction_factionCopyInfo __cb);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_factionCopyInfo(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean factionCopyInfo_async(AMI_Faction_factionCopyInfo __cb);

    /**
     * 副本进度等信息 返回FactionCopyInfoView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean factionCopyInfo_async(AMI_Faction_factionCopyInfo __cb, java.util.Map<String, String> __ctx);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     **/
    public FactionCopyResultView beginChallenge()
        throws NoteException;

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __ctx The Context map to send with the invocation.
     **/
    public FactionCopyResultView beginChallenge(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginChallenge();

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginChallenge(java.util.Map<String, String> __ctx);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginChallenge(Ice.Callback __cb);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginChallenge(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginChallenge(Callback_Faction_beginChallenge __cb);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginChallenge(java.util.Map<String, String> __ctx, Callback_Faction_beginChallenge __cb);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __result The asynchronous result object.
     **/
    public FactionCopyResultView end_beginChallenge(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __cb The callback object for the operation.
     **/
    public boolean beginChallenge_async(AMI_Faction_beginChallenge __cb);

    /**
     * 开始挑战副本 返回FactionCopyResultView
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean beginChallenge_async(AMI_Faction_beginChallenge __cb, java.util.Map<String, String> __ctx);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     **/
    public void endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood)
        throws NoteException;

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __ctx The Context map to send with the invocation.
     **/
    public void endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, java.util.Map<String, String> __ctx);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, Ice.Callback __cb);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, Callback_Faction_endChallenge __cb);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endChallenge(MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, java.util.Map<String, String> __ctx, Callback_Faction_endChallenge __cb);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __result The asynchronous result object.
     **/
    public void end_endChallenge(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __cb The callback object for the operation.
     **/
    public boolean endChallenge_async(AMI_Faction_endChallenge __cb, MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood);

    /**
     * 结束挑战副本 需要告诉服务器所有怪物的血量和怒气、是否击杀小怪、是否触发boss掉血量、总掉血量
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean endChallenge_async(AMI_Faction_endChallenge __cb, MonsterView[] monsterViews, boolean isKill, boolean isHurtBlood, int dropBlood, java.util.Map<String, String> __ctx);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     **/
    public String getFactionShops()
        throws NoteException;

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionShops(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionShops();

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionShops(java.util.Map<String, String> __ctx);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionShops(Ice.Callback __cb);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionShops(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionShops(Callback_Faction_getFactionShops __cb);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionShops(java.util.Map<String, String> __ctx, Callback_Faction_getFactionShops __cb);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionShops(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionShops_async(AMI_Faction_getFactionShops __cb);

    /**
     * 获取公会商店商品，返回FactionShopView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionShops_async(AMI_Faction_getFactionShops __cb, java.util.Map<String, String> __ctx);

    /**
     * 购买公会商品
     **/
    public void buyFactionShop(int id)
        throws NoteException;

    /**
     * 购买公会商品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void buyFactionShop(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 购买公会商品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyFactionShop(int id);

    /**
     * 购买公会商品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyFactionShop(int id, java.util.Map<String, String> __ctx);

    /**
     * 购买公会商品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyFactionShop(int id, Ice.Callback __cb);

    /**
     * 购买公会商品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyFactionShop(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 购买公会商品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyFactionShop(int id, Callback_Faction_buyFactionShop __cb);

    /**
     * 购买公会商品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyFactionShop(int id, java.util.Map<String, String> __ctx, Callback_Faction_buyFactionShop __cb);

    /**
     * 购买公会商品
     * @param __result The asynchronous result object.
     **/
    public void end_buyFactionShop(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 购买公会商品
     * @param __cb The callback object for the operation.
     **/
    public boolean buyFactionShop_async(AMI_Faction_buyFactionShop __cb, int id);

    /**
     * 购买公会商品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyFactionShop_async(AMI_Faction_buyFactionShop __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 获取公会战信息，返回GvgView的lua
     **/
    public String getGvgInfo()
        throws NoteException;

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getGvgInfo(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会战信息，返回GvgView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGvgInfo();

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGvgInfo(java.util.Map<String, String> __ctx);

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGvgInfo(Ice.Callback __cb);

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGvgInfo(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGvgInfo(Callback_Faction_getGvgInfo __cb);

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getGvgInfo(java.util.Map<String, String> __ctx, Callback_Faction_getGvgInfo __cb);

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getGvgInfo(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getGvgInfo_async(AMI_Faction_getGvgInfo __cb);

    /**
     * 获取公会战信息，返回GvgView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getGvgInfo_async(AMI_Faction_getGvgInfo __cb, java.util.Map<String, String> __ctx);

    /**
     * 公会战报名
     **/
    public void applyGvg()
        throws NoteException;

    /**
     * 公会战报名
     * @param __ctx The Context map to send with the invocation.
     **/
    public void applyGvg(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会战报名
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyGvg();

    /**
     * 公会战报名
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyGvg(java.util.Map<String, String> __ctx);

    /**
     * 公会战报名
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyGvg(Ice.Callback __cb);

    /**
     * 公会战报名
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyGvg(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战报名
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyGvg(Callback_Faction_applyGvg __cb);

    /**
     * 公会战报名
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyGvg(java.util.Map<String, String> __ctx, Callback_Faction_applyGvg __cb);

    /**
     * 公会战报名
     * @param __result The asynchronous result object.
     **/
    public void end_applyGvg(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会战报名
     * @param __cb The callback object for the operation.
     **/
    public boolean applyGvg_async(AMI_Faction_applyGvg __cb);

    /**
     * 公会战报名
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean applyGvg_async(AMI_Faction_applyGvg __cb, java.util.Map<String, String> __ctx);

    /**
     * 选择对手，返回RivalView数组的lua
     **/
    public String selectRival(int index)
        throws NoteException;

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String selectRival(int index, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 选择对手，返回RivalView数组的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_selectRival(int index);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_selectRival(int index, java.util.Map<String, String> __ctx);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_selectRival(int index, Ice.Callback __cb);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_selectRival(int index, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_selectRival(int index, Callback_Faction_selectRival __cb);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_selectRival(int index, java.util.Map<String, String> __ctx, Callback_Faction_selectRival __cb);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __result The asynchronous result object.
     **/
    public String end_selectRival(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean selectRival_async(AMI_Faction_selectRival __cb, int index);

    /**
     * 选择对手，返回RivalView数组的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean selectRival_async(AMI_Faction_selectRival __cb, int index, java.util.Map<String, String> __ctx);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     **/
    public String getMemberRank()
        throws NoteException;

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getMemberRank(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getMemberRank();

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getMemberRank(java.util.Map<String, String> __ctx);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getMemberRank(Ice.Callback __cb);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getMemberRank(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getMemberRank(Callback_Faction_getMemberRank __cb);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getMemberRank(java.util.Map<String, String> __ctx, Callback_Faction_getMemberRank __cb);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getMemberRank(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getMemberRank_async(AMI_Faction_getMemberRank __cb);

    /**
     * 获取公会战个人排行榜，返回MemberRankView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getMemberRank_async(AMI_Faction_getMemberRank __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     **/
    public String getFactionRank()
        throws NoteException;

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionRank(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionRank();

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionRank(java.util.Map<String, String> __ctx);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionRank(Ice.Callback __cb);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionRank(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionRank(Callback_Faction_getFactionRank __cb);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionRank(java.util.Map<String, String> __ctx, Callback_Faction_getFactionRank __cb);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionRank(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionRank_async(AMI_Faction_getFactionRank __cb);

    /**
     * 获取公会战公会排行榜，返回FactionRankView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionRank_async(AMI_Faction_getFactionRank __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     **/
    public GvgChallengeView getRivalFormation(String roleId)
        throws NoteException;

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public GvgChallengeView getRivalFormation(String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRivalFormation(String roleId);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRivalFormation(String roleId, java.util.Map<String, String> __ctx);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRivalFormation(String roleId, Ice.Callback __cb);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRivalFormation(String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRivalFormation(String roleId, Callback_Faction_getRivalFormation __cb);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRivalFormation(String roleId, java.util.Map<String, String> __ctx, Callback_Faction_getRivalFormation __cb);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __result The asynchronous result object.
     **/
    public GvgChallengeView end_getRivalFormation(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getRivalFormation_async(AMI_Faction_getRivalFormation __cb, String roleId);

    /**
     * 获取部队阵容，返回GvgChallengeView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getRivalFormation_async(AMI_Faction_getRivalFormation __cb, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 公会战开始战斗，返回战报ID
     **/
    public String beginGvg()
        throws NoteException;

    /**
     * 公会战开始战斗，返回战报ID
     * @param __ctx The Context map to send with the invocation.
     **/
    public String beginGvg(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会战开始战斗，返回战报ID
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginGvg();

    /**
     * 公会战开始战斗，返回战报ID
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginGvg(java.util.Map<String, String> __ctx);

    /**
     * 公会战开始战斗，返回战报ID
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginGvg(Ice.Callback __cb);

    /**
     * 公会战开始战斗，返回战报ID
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginGvg(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战开始战斗，返回战报ID
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginGvg(Callback_Faction_beginGvg __cb);

    /**
     * 公会战开始战斗，返回战报ID
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_beginGvg(java.util.Map<String, String> __ctx, Callback_Faction_beginGvg __cb);

    /**
     * 公会战开始战斗，返回战报ID
     * @param __result The asynchronous result object.
     **/
    public String end_beginGvg(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会战开始战斗，返回战报ID
     * @param __cb The callback object for the operation.
     **/
    public boolean beginGvg_async(AMI_Faction_beginGvg __cb);

    /**
     * 公会战开始战斗，返回战报ID
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean beginGvg_async(AMI_Faction_beginGvg __cb, java.util.Map<String, String> __ctx);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     **/
    public String endGvg(boolean isWin, int heroNum)
        throws NoteException;

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __ctx The Context map to send with the invocation.
     **/
    public String endGvg(boolean isWin, int heroNum, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endGvg(boolean isWin, int heroNum);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endGvg(boolean isWin, int heroNum, java.util.Map<String, String> __ctx);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endGvg(boolean isWin, int heroNum, Ice.Callback __cb);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endGvg(boolean isWin, int heroNum, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endGvg(boolean isWin, int heroNum, Callback_Faction_endGvg __cb);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endGvg(boolean isWin, int heroNum, java.util.Map<String, String> __ctx, Callback_Faction_endGvg __cb);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __result The asynchronous result object.
     **/
    public String end_endGvg(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __cb The callback object for the operation.
     **/
    public boolean endGvg_async(AMI_Faction_endGvg __cb, boolean isWin, int heroNum);

    /**
     * 公会战结束战斗，heroNum-剩余武将数量，返回IntIntPair的lua
     * IntIntPair：first-星级，second-增加荣誉
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean endGvg_async(AMI_Faction_endGvg __cb, boolean isWin, int heroNum, java.util.Map<String, String> __ctx);

    /**
     * 公会战死亡复活
     **/
    public void reviveGvg()
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 公会战死亡复活
     * @param __ctx The Context map to send with the invocation.
     **/
    public void reviveGvg(java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 公会战死亡复活
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reviveGvg();

    /**
     * 公会战死亡复活
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reviveGvg(java.util.Map<String, String> __ctx);

    /**
     * 公会战死亡复活
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reviveGvg(Ice.Callback __cb);

    /**
     * 公会战死亡复活
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reviveGvg(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战死亡复活
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reviveGvg(Callback_Faction_reviveGvg __cb);

    /**
     * 公会战死亡复活
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reviveGvg(java.util.Map<String, String> __ctx, Callback_Faction_reviveGvg __cb);

    /**
     * 公会战死亡复活
     * @param __result The asynchronous result object.
     **/
    public void end_reviveGvg(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 公会战死亡复活
     * @param __cb The callback object for the operation.
     **/
    public boolean reviveGvg_async(AMI_Faction_reviveGvg __cb);

    /**
     * 公会战死亡复活
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean reviveGvg_async(AMI_Faction_reviveGvg __cb, java.util.Map<String, String> __ctx);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     **/
    public String getHarmRank()
        throws NoteException;

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getHarmRank(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getHarmRank();

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getHarmRank(java.util.Map<String, String> __ctx);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getHarmRank(Ice.Callback __cb);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getHarmRank(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getHarmRank(Callback_Faction_getHarmRank __cb);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getHarmRank(java.util.Map<String, String> __ctx, Callback_Faction_getHarmRank __cb);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getHarmRank(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getHarmRank_async(AMI_Faction_getHarmRank __cb);

    /**
     * 伤害排行榜，返回CopyHarmRankView数组的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getHarmRank_async(AMI_Faction_getHarmRank __cb, java.util.Map<String, String> __ctx);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     **/
    public int sendFactionMail(int type, String title, String content)
        throws NoteException;

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __ctx The Context map to send with the invocation.
     **/
    public int sendFactionMail(int type, String title, String content, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sendFactionMail(int type, String title, String content);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sendFactionMail(int type, String title, String content, java.util.Map<String, String> __ctx);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sendFactionMail(int type, String title, String content, Ice.Callback __cb);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sendFactionMail(int type, String title, String content, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sendFactionMail(int type, String title, String content, Callback_Faction_sendFactionMail __cb);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_sendFactionMail(int type, String title, String content, java.util.Map<String, String> __ctx, Callback_Faction_sendFactionMail __cb);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __result The asynchronous result object.
     **/
    public int end_sendFactionMail(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __cb The callback object for the operation.
     **/
    public boolean sendFactionMail_async(AMI_Faction_sendFactionMail __cb, int type, String title, String content);

    /**
     * 发送公会邮件返回还可发送次数，type=0-所有,1-会长长老,2-普通人员
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean sendFactionMail_async(AMI_Faction_sendFactionMail __cb, int type, String title, String content, java.util.Map<String, String> __ctx);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     **/
    public String getFactionMailLog()
        throws NoteException;

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionMailLog(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMailLog();

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMailLog(java.util.Map<String, String> __ctx);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMailLog(Ice.Callback __cb);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMailLog(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMailLog(Callback_Faction_getFactionMailLog __cb);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMailLog(java.util.Map<String, String> __ctx, Callback_Faction_getFactionMailLog __cb);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionMailLog(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionMailLog_async(AMI_Faction_getFactionMailLog __cb);

    /**
     * 当日公会邮件发送记录，返回FactionMailLogSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionMailLog_async(AMI_Faction_getFactionMailLog __cb, java.util.Map<String, String> __ctx);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     **/
    public String openWarehouse()
        throws NoteException;

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openWarehouse(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openWarehouse();

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openWarehouse(java.util.Map<String, String> __ctx);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openWarehouse(Ice.Callback __cb);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openWarehouse(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openWarehouse(Callback_Faction_openWarehouse __cb);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openWarehouse(java.util.Map<String, String> __ctx, Callback_Faction_openWarehouse __cb);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_openWarehouse(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean openWarehouse_async(AMI_Faction_openWarehouse __cb);

    /**
     * 打开仓库界面，返回FactionWarehouseView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openWarehouse_async(AMI_Faction_openWarehouse __cb, java.util.Map<String, String> __ctx);

    /**
     * 仓库分配物品
     **/
    public void warehouseAllot(String roleId, String itemId, int num)
        throws NoteException;

    /**
     * 仓库分配物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void warehouseAllot(String roleId, String itemId, int num, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 仓库分配物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_warehouseAllot(String roleId, String itemId, int num);

    /**
     * 仓库分配物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_warehouseAllot(String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 仓库分配物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_warehouseAllot(String roleId, String itemId, int num, Ice.Callback __cb);

    /**
     * 仓库分配物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_warehouseAllot(String roleId, String itemId, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 仓库分配物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_warehouseAllot(String roleId, String itemId, int num, Callback_Faction_warehouseAllot __cb);

    /**
     * 仓库分配物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_warehouseAllot(String roleId, String itemId, int num, java.util.Map<String, String> __ctx, Callback_Faction_warehouseAllot __cb);

    /**
     * 仓库分配物品
     * @param __result The asynchronous result object.
     **/
    public void end_warehouseAllot(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 仓库分配物品
     * @param __cb The callback object for the operation.
     **/
    public boolean warehouseAllot_async(AMI_Faction_warehouseAllot __cb, String roleId, String itemId, int num);

    /**
     * 仓库分配物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean warehouseAllot_async(AMI_Faction_warehouseAllot __cb, String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     **/
    public String openStorehouse()
        throws NoteException;

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openStorehouse(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openStorehouse();

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openStorehouse(java.util.Map<String, String> __ctx);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openStorehouse(Ice.Callback __cb);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openStorehouse(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openStorehouse(Callback_Faction_openStorehouse __cb);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openStorehouse(java.util.Map<String, String> __ctx, Callback_Faction_openStorehouse __cb);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_openStorehouse(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean openStorehouse_async(AMI_Faction_openStorehouse __cb);

    /**
     * 打开栈房界面，返回FactionStorehouseView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openStorehouse_async(AMI_Faction_openStorehouse __cb, java.util.Map<String, String> __ctx);

    /**
     * 栈房购置物品
     **/
    public void storehousePurchase(String itemId, int num)
        throws NoteException;

    /**
     * 栈房购置物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void storehousePurchase(String itemId, int num, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 栈房购置物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_storehousePurchase(String itemId, int num);

    /**
     * 栈房购置物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_storehousePurchase(String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 栈房购置物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_storehousePurchase(String itemId, int num, Ice.Callback __cb);

    /**
     * 栈房购置物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_storehousePurchase(String itemId, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 栈房购置物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_storehousePurchase(String itemId, int num, Callback_Faction_storehousePurchase __cb);

    /**
     * 栈房购置物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_storehousePurchase(String itemId, int num, java.util.Map<String, String> __ctx, Callback_Faction_storehousePurchase __cb);

    /**
     * 栈房购置物品
     * @param __result The asynchronous result object.
     **/
    public void end_storehousePurchase(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 栈房购置物品
     * @param __cb The callback object for the operation.
     **/
    public boolean storehousePurchase_async(AMI_Faction_storehousePurchase __cb, String itemId, int num);

    /**
     * 栈房购置物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean storehousePurchase_async(AMI_Faction_storehousePurchase __cb, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     **/
    public String openOviStore()
        throws NoteException;

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openOviStore(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openOviStore();

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openOviStore(java.util.Map<String, String> __ctx);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openOviStore(Ice.Callback __cb);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openOviStore(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openOviStore(Callback_Faction_openOviStore __cb);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openOviStore(java.util.Map<String, String> __ctx, Callback_Faction_openOviStore __cb);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_openOviStore(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean openOviStore_async(AMI_Faction_openOviStore __cb);

    /**
     * 打开商铺界面，返回FactionOviStoreView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openOviStore_async(AMI_Faction_openOviStore __cb, java.util.Map<String, String> __ctx);

    /**
     * 商铺购买物品
     **/
    public void oviStoreBuy(String itemId, int num)
        throws NoteException;

    /**
     * 商铺购买物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public void oviStoreBuy(String itemId, int num, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 商铺购买物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_oviStoreBuy(String itemId, int num);

    /**
     * 商铺购买物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_oviStoreBuy(String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 商铺购买物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_oviStoreBuy(String itemId, int num, Ice.Callback __cb);

    /**
     * 商铺购买物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_oviStoreBuy(String itemId, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 商铺购买物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_oviStoreBuy(String itemId, int num, Callback_Faction_oviStoreBuy __cb);

    /**
     * 商铺购买物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_oviStoreBuy(String itemId, int num, java.util.Map<String, String> __ctx, Callback_Faction_oviStoreBuy __cb);

    /**
     * 商铺购买物品
     * @param __result The asynchronous result object.
     **/
    public void end_oviStoreBuy(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 商铺购买物品
     * @param __cb The callback object for the operation.
     **/
    public boolean oviStoreBuy_async(AMI_Faction_oviStoreBuy __cb, String itemId, int num);

    /**
     * 商铺购买物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean oviStoreBuy_async(AMI_Faction_oviStoreBuy __cb, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     **/
    public String technologyList()
        throws NoteException;

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String technologyList(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_technologyList();

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_technologyList(java.util.Map<String, String> __ctx);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_technologyList(Ice.Callback __cb);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_technologyList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_technologyList(Callback_Faction_technologyList __cb);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_technologyList(java.util.Map<String, String> __ctx, Callback_Faction_technologyList __cb);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_technologyList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean technologyList_async(AMI_Faction_technologyList __cb);

    /**
     * 公会科技列表,返回FactionTechnologyView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean technologyList_async(AMI_Faction_technologyList __cb, java.util.Map<String, String> __ctx);

    /**
     * 设置推荐科技
     **/
    public int setRecommendTechnology(int id)
        throws NoteException;

    /**
     * 设置推荐科技
     * @param __ctx The Context map to send with the invocation.
     **/
    public int setRecommendTechnology(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 设置推荐科技
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setRecommendTechnology(int id);

    /**
     * 设置推荐科技
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setRecommendTechnology(int id, java.util.Map<String, String> __ctx);

    /**
     * 设置推荐科技
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setRecommendTechnology(int id, Ice.Callback __cb);

    /**
     * 设置推荐科技
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setRecommendTechnology(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 设置推荐科技
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setRecommendTechnology(int id, Callback_Faction_setRecommendTechnology __cb);

    /**
     * 设置推荐科技
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_setRecommendTechnology(int id, java.util.Map<String, String> __ctx, Callback_Faction_setRecommendTechnology __cb);

    /**
     * 设置推荐科技
     * @param __result The asynchronous result object.
     **/
    public int end_setRecommendTechnology(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 设置推荐科技
     * @param __cb The callback object for the operation.
     **/
    public boolean setRecommendTechnology_async(AMI_Faction_setRecommendTechnology __cb, int id);

    /**
     * 设置推荐科技
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean setRecommendTechnology_async(AMI_Faction_setRecommendTechnology __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 公会科技捐献type=0微章1元宝
     **/
    public void donateTechnology(int id, int type)
        throws NoteException;

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __ctx The Context map to send with the invocation.
     **/
    public void donateTechnology(int id, int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会科技捐献type=0微章1元宝
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donateTechnology(int id, int type);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donateTechnology(int id, int type, java.util.Map<String, String> __ctx);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donateTechnology(int id, int type, Ice.Callback __cb);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donateTechnology(int id, int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donateTechnology(int id, int type, Callback_Faction_donateTechnology __cb);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_donateTechnology(int id, int type, java.util.Map<String, String> __ctx, Callback_Faction_donateTechnology __cb);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __result The asynchronous result object.
     **/
    public void end_donateTechnology(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __cb The callback object for the operation.
     **/
    public boolean donateTechnology_async(AMI_Faction_donateTechnology __cb, int id, int type);

    /**
     * 公会科技捐献type=0微章1元宝
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean donateTechnology_async(AMI_Faction_donateTechnology __cb, int id, int type, java.util.Map<String, String> __ctx);

    /**
     * 清除捐献CD
     **/
    public void clearDonateCD()
        throws NoteException;

    /**
     * 清除捐献CD
     * @param __ctx The Context map to send with the invocation.
     **/
    public void clearDonateCD(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 清除捐献CD
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clearDonateCD();

    /**
     * 清除捐献CD
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clearDonateCD(java.util.Map<String, String> __ctx);

    /**
     * 清除捐献CD
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clearDonateCD(Ice.Callback __cb);

    /**
     * 清除捐献CD
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clearDonateCD(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 清除捐献CD
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clearDonateCD(Callback_Faction_clearDonateCD __cb);

    /**
     * 清除捐献CD
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_clearDonateCD(java.util.Map<String, String> __ctx, Callback_Faction_clearDonateCD __cb);

    /**
     * 清除捐献CD
     * @param __result The asynchronous result object.
     **/
    public void end_clearDonateCD(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 清除捐献CD
     * @param __cb The callback object for the operation.
     **/
    public boolean clearDonateCD_async(AMI_Faction_clearDonateCD __cb);

    /**
     * 清除捐献CD
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean clearDonateCD_async(AMI_Faction_clearDonateCD __cb, java.util.Map<String, String> __ctx);

    /**
     * 研究公会科技
     **/
    public void studyTechnology(int id)
        throws NoteException;

    /**
     * 研究公会科技
     * @param __ctx The Context map to send with the invocation.
     **/
    public void studyTechnology(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 研究公会科技
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_studyTechnology(int id);

    /**
     * 研究公会科技
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_studyTechnology(int id, java.util.Map<String, String> __ctx);

    /**
     * 研究公会科技
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_studyTechnology(int id, Ice.Callback __cb);

    /**
     * 研究公会科技
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_studyTechnology(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 研究公会科技
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_studyTechnology(int id, Callback_Faction_studyTechnology __cb);

    /**
     * 研究公会科技
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_studyTechnology(int id, java.util.Map<String, String> __ctx, Callback_Faction_studyTechnology __cb);

    /**
     * 研究公会科技
     * @param __result The asynchronous result object.
     **/
    public void end_studyTechnology(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 研究公会科技
     * @param __cb The callback object for the operation.
     **/
    public boolean studyTechnology_async(AMI_Faction_studyTechnology __cb, int id);

    /**
     * 研究公会科技
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean studyTechnology_async(AMI_Faction_studyTechnology __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 公会战界面
     **/
    public String openFactionBattle()
        throws NoteException;

    /**
     * 公会战界面
     * @param __ctx The Context map to send with the invocation.
     **/
    public String openFactionBattle(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会战界面
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionBattle();

    /**
     * 公会战界面
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionBattle(java.util.Map<String, String> __ctx);

    /**
     * 公会战界面
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionBattle(Ice.Callback __cb);

    /**
     * 公会战界面
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionBattle(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战界面
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionBattle(Callback_Faction_openFactionBattle __cb);

    /**
     * 公会战界面
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_openFactionBattle(java.util.Map<String, String> __ctx, Callback_Faction_openFactionBattle __cb);

    /**
     * 公会战界面
     * @param __result The asynchronous result object.
     **/
    public String end_openFactionBattle(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会战界面
     * @param __cb The callback object for the operation.
     **/
    public boolean openFactionBattle_async(AMI_Faction_openFactionBattle __cb);

    /**
     * 公会战界面
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean openFactionBattle_async(AMI_Faction_openFactionBattle __cb, java.util.Map<String, String> __ctx);

    /**
     * 报名公会战
     **/
    public String enrollFactionBattle()
        throws NoteException;

    /**
     * 报名公会战
     * @param __ctx The Context map to send with the invocation.
     **/
    public String enrollFactionBattle(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 报名公会战
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enrollFactionBattle();

    /**
     * 报名公会战
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enrollFactionBattle(java.util.Map<String, String> __ctx);

    /**
     * 报名公会战
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enrollFactionBattle(Ice.Callback __cb);

    /**
     * 报名公会战
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enrollFactionBattle(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 报名公会战
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enrollFactionBattle(Callback_Faction_enrollFactionBattle __cb);

    /**
     * 报名公会战
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enrollFactionBattle(java.util.Map<String, String> __ctx, Callback_Faction_enrollFactionBattle __cb);

    /**
     * 报名公会战
     * @param __result The asynchronous result object.
     **/
    public String end_enrollFactionBattle(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 报名公会战
     * @param __cb The callback object for the operation.
     **/
    public boolean enrollFactionBattle_async(AMI_Faction_enrollFactionBattle __cb);

    /**
     * 报名公会战
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean enrollFactionBattle_async(AMI_Faction_enrollFactionBattle __cb, java.util.Map<String, String> __ctx);

    /**
     * 更换阵营
     **/
    public String changeFactionBattleCamp()
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 更换阵营
     * @param __ctx The Context map to send with the invocation.
     **/
    public String changeFactionBattleCamp(java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 更换阵营
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_changeFactionBattleCamp();

    /**
     * 更换阵营
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_changeFactionBattleCamp(java.util.Map<String, String> __ctx);

    /**
     * 更换阵营
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_changeFactionBattleCamp(Ice.Callback __cb);

    /**
     * 更换阵营
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_changeFactionBattleCamp(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 更换阵营
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_changeFactionBattleCamp(Callback_Faction_changeFactionBattleCamp __cb);

    /**
     * 更换阵营
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_changeFactionBattleCamp(java.util.Map<String, String> __ctx, Callback_Faction_changeFactionBattleCamp __cb);

    /**
     * 更换阵营
     * @param __result The asynchronous result object.
     **/
    public String end_changeFactionBattleCamp(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 更换阵营
     * @param __cb The callback object for the operation.
     **/
    public boolean changeFactionBattleCamp_async(AMI_Faction_changeFactionBattleCamp __cb);

    /**
     * 更换阵营
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean changeFactionBattleCamp_async(AMI_Faction_changeFactionBattleCamp __cb, java.util.Map<String, String> __ctx);

    /**
     * 进入公会战
     **/
    public String enterFactionBattle()
        throws NoteException;

    /**
     * 进入公会战
     * @param __ctx The Context map to send with the invocation.
     **/
    public String enterFactionBattle(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 进入公会战
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enterFactionBattle();

    /**
     * 进入公会战
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enterFactionBattle(java.util.Map<String, String> __ctx);

    /**
     * 进入公会战
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enterFactionBattle(Ice.Callback __cb);

    /**
     * 进入公会战
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enterFactionBattle(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 进入公会战
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enterFactionBattle(Callback_Faction_enterFactionBattle __cb);

    /**
     * 进入公会战
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enterFactionBattle(java.util.Map<String, String> __ctx, Callback_Faction_enterFactionBattle __cb);

    /**
     * 进入公会战
     * @param __result The asynchronous result object.
     **/
    public String end_enterFactionBattle(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 进入公会战
     * @param __cb The callback object for the operation.
     **/
    public boolean enterFactionBattle_async(AMI_Faction_enterFactionBattle __cb);

    /**
     * 进入公会战
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean enterFactionBattle_async(AMI_Faction_enterFactionBattle __cb, java.util.Map<String, String> __ctx);

    /**
     * 离开公会战
     **/
    public void leaveFactionBattle()
        throws NoteException;

    /**
     * 离开公会战
     * @param __ctx The Context map to send with the invocation.
     **/
    public void leaveFactionBattle(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 离开公会战
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_leaveFactionBattle();

    /**
     * 离开公会战
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_leaveFactionBattle(java.util.Map<String, String> __ctx);

    /**
     * 离开公会战
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_leaveFactionBattle(Ice.Callback __cb);

    /**
     * 离开公会战
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_leaveFactionBattle(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 离开公会战
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_leaveFactionBattle(Callback_Faction_leaveFactionBattle __cb);

    /**
     * 离开公会战
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_leaveFactionBattle(java.util.Map<String, String> __ctx, Callback_Faction_leaveFactionBattle __cb);

    /**
     * 离开公会战
     * @param __result The asynchronous result object.
     **/
    public void end_leaveFactionBattle(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 离开公会战
     * @param __cb The callback object for the operation.
     **/
    public boolean leaveFactionBattle_async(AMI_Faction_leaveFactionBattle __cb);

    /**
     * 离开公会战
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean leaveFactionBattle_async(AMI_Faction_leaveFactionBattle __cb, java.util.Map<String, String> __ctx);

    /**
     * 公会战排行榜信息
     **/
    public String lookFactionBattleRank()
        throws NoteException;

    /**
     * 公会战排行榜信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lookFactionBattleRank(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会战排行榜信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleRank();

    /**
     * 公会战排行榜信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleRank(java.util.Map<String, String> __ctx);

    /**
     * 公会战排行榜信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleRank(Ice.Callback __cb);

    /**
     * 公会战排行榜信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleRank(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战排行榜信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleRank(Callback_Faction_lookFactionBattleRank __cb);

    /**
     * 公会战排行榜信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleRank(java.util.Map<String, String> __ctx, Callback_Faction_lookFactionBattleRank __cb);

    /**
     * 公会战排行榜信息
     * @param __result The asynchronous result object.
     **/
    public String end_lookFactionBattleRank(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会战排行榜信息
     * @param __cb The callback object for the operation.
     **/
    public boolean lookFactionBattleRank_async(AMI_Faction_lookFactionBattleRank __cb);

    /**
     * 公会战排行榜信息
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lookFactionBattleRank_async(AMI_Faction_lookFactionBattleRank __cb, java.util.Map<String, String> __ctx);

    /**
     * 公会战个人排行榜信息
     **/
    public String lookFactionBattlePersonalRank()
        throws NoteException;

    /**
     * 公会战个人排行榜信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lookFactionBattlePersonalRank(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 公会战个人排行榜信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattlePersonalRank();

    /**
     * 公会战个人排行榜信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattlePersonalRank(java.util.Map<String, String> __ctx);

    /**
     * 公会战个人排行榜信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattlePersonalRank(Ice.Callback __cb);

    /**
     * 公会战个人排行榜信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattlePersonalRank(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 公会战个人排行榜信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattlePersonalRank(Callback_Faction_lookFactionBattlePersonalRank __cb);

    /**
     * 公会战个人排行榜信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattlePersonalRank(java.util.Map<String, String> __ctx, Callback_Faction_lookFactionBattlePersonalRank __cb);

    /**
     * 公会战个人排行榜信息
     * @param __result The asynchronous result object.
     **/
    public String end_lookFactionBattlePersonalRank(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 公会战个人排行榜信息
     * @param __cb The callback object for the operation.
     **/
    public boolean lookFactionBattlePersonalRank_async(AMI_Faction_lookFactionBattlePersonalRank __cb);

    /**
     * 公会战个人排行榜信息
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lookFactionBattlePersonalRank_async(AMI_Faction_lookFactionBattlePersonalRank __cb, java.util.Map<String, String> __ctx);

    /**
     * 行军
     **/
    public String marching(boolean isUseKits, int strongholdId)
        throws NoteException;

    /**
     * 行军
     * @param __ctx The Context map to send with the invocation.
     **/
    public String marching(boolean isUseKits, int strongholdId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 行军
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_marching(boolean isUseKits, int strongholdId);

    /**
     * 行军
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_marching(boolean isUseKits, int strongholdId, java.util.Map<String, String> __ctx);

    /**
     * 行军
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_marching(boolean isUseKits, int strongholdId, Ice.Callback __cb);

    /**
     * 行军
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_marching(boolean isUseKits, int strongholdId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 行军
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_marching(boolean isUseKits, int strongholdId, Callback_Faction_marching __cb);

    /**
     * 行军
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_marching(boolean isUseKits, int strongholdId, java.util.Map<String, String> __ctx, Callback_Faction_marching __cb);

    /**
     * 行军
     * @param __result The asynchronous result object.
     **/
    public String end_marching(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 行军
     * @param __cb The callback object for the operation.
     **/
    public boolean marching_async(AMI_Faction_marching __cb, boolean isUseKits, int strongholdId);

    /**
     * 行军
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean marching_async(AMI_Faction_marching __cb, boolean isUseKits, int strongholdId, java.util.Map<String, String> __ctx);

    /**
     * 行军冷却
     **/
    public void buyMarchingCooling()
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 行军冷却
     * @param __ctx The Context map to send with the invocation.
     **/
    public void buyMarchingCooling(java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 行军冷却
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyMarchingCooling();

    /**
     * 行军冷却
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyMarchingCooling(java.util.Map<String, String> __ctx);

    /**
     * 行军冷却
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyMarchingCooling(Ice.Callback __cb);

    /**
     * 行军冷却
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyMarchingCooling(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 行军冷却
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyMarchingCooling(Callback_Faction_buyMarchingCooling __cb);

    /**
     * 行军冷却
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyMarchingCooling(java.util.Map<String, String> __ctx, Callback_Faction_buyMarchingCooling __cb);

    /**
     * 行军冷却
     * @param __result The asynchronous result object.
     **/
    public void end_buyMarchingCooling(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 行军冷却
     * @param __cb The callback object for the operation.
     **/
    public boolean buyMarchingCooling_async(AMI_Faction_buyMarchingCooling __cb);

    /**
     * 行军冷却
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyMarchingCooling_async(AMI_Faction_buyMarchingCooling __cb, java.util.Map<String, String> __ctx);

    /**
     * 挖宝
     **/
    public String diggingTreasure()
        throws NoteException;

    /**
     * 挖宝
     * @param __ctx The Context map to send with the invocation.
     **/
    public String diggingTreasure(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 挖宝
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_diggingTreasure();

    /**
     * 挖宝
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_diggingTreasure(java.util.Map<String, String> __ctx);

    /**
     * 挖宝
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_diggingTreasure(Ice.Callback __cb);

    /**
     * 挖宝
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_diggingTreasure(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 挖宝
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_diggingTreasure(Callback_Faction_diggingTreasure __cb);

    /**
     * 挖宝
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_diggingTreasure(java.util.Map<String, String> __ctx, Callback_Faction_diggingTreasure __cb);

    /**
     * 挖宝
     * @param __result The asynchronous result object.
     **/
    public String end_diggingTreasure(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 挖宝
     * @param __cb The callback object for the operation.
     **/
    public boolean diggingTreasure_async(AMI_Faction_diggingTreasure __cb);

    /**
     * 挖宝
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean diggingTreasure_async(AMI_Faction_diggingTreasure __cb, java.util.Map<String, String> __ctx);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     **/
    public String useKits(int kitsId)
        throws NoteException;

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __ctx The Context map to send with the invocation.
     **/
    public String useKits(int kitsId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_useKits(int kitsId);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_useKits(int kitsId, java.util.Map<String, String> __ctx);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_useKits(int kitsId, Ice.Callback __cb);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_useKits(int kitsId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_useKits(int kitsId, Callback_Faction_useKits __cb);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_useKits(int kitsId, java.util.Map<String, String> __ctx, Callback_Faction_useKits __cb);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __result The asynchronous result object.
     **/
    public String end_useKits(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __cb The callback object for the operation.
     **/
    public boolean useKits_async(AMI_Faction_useKits __cb, int kitsId);

    /**
     * 使用锦囊 返回为空无消息提示 否则需要消息提示
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean useKits_async(AMI_Faction_useKits __cb, int kitsId, java.util.Map<String, String> __ctx);

    /**
     * 开打  type=0守方 1攻方
     **/
    public String startBattle(byte type)
        throws NoteException;

    /**
     * 开打  type=0守方 1攻方
     * @param __ctx The Context map to send with the invocation.
     **/
    public String startBattle(byte type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 开打  type=0守方 1攻方
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startBattle(byte type);

    /**
     * 开打  type=0守方 1攻方
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startBattle(byte type, java.util.Map<String, String> __ctx);

    /**
     * 开打  type=0守方 1攻方
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startBattle(byte type, Ice.Callback __cb);

    /**
     * 开打  type=0守方 1攻方
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startBattle(byte type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 开打  type=0守方 1攻方
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startBattle(byte type, Callback_Faction_startBattle __cb);

    /**
     * 开打  type=0守方 1攻方
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startBattle(byte type, java.util.Map<String, String> __ctx, Callback_Faction_startBattle __cb);

    /**
     * 开打  type=0守方 1攻方
     * @param __result The asynchronous result object.
     **/
    public String end_startBattle(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 开打  type=0守方 1攻方
     * @param __cb The callback object for the operation.
     **/
    public boolean startBattle_async(AMI_Faction_startBattle __cb, byte type);

    /**
     * 开打  type=0守方 1攻方
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean startBattle_async(AMI_Faction_startBattle __cb, byte type, java.util.Map<String, String> __ctx);

    /**
     * 战斗结果确定（复活 假象而已）
     **/
    public void resultConfirm()
        throws NoteException;

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __ctx The Context map to send with the invocation.
     **/
    public void resultConfirm(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 战斗结果确定（复活 假象而已）
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_resultConfirm();

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_resultConfirm(java.util.Map<String, String> __ctx);

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_resultConfirm(Ice.Callback __cb);

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_resultConfirm(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_resultConfirm(Callback_Faction_resultConfirm __cb);

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_resultConfirm(java.util.Map<String, String> __ctx, Callback_Faction_resultConfirm __cb);

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __result The asynchronous result object.
     **/
    public void end_resultConfirm(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __cb The callback object for the operation.
     **/
    public boolean resultConfirm_async(AMI_Faction_resultConfirm __cb);

    /**
     * 战斗结果确定（复活 假象而已）
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean resultConfirm_async(AMI_Faction_resultConfirm __cb, java.util.Map<String, String> __ctx);

    /**
     * 查看战况回放
     **/
    public PvpMovieView lookFactionBattleMovieView()
        throws NoteException;

    /**
     * 查看战况回放
     * @param __ctx The Context map to send with the invocation.
     **/
    public PvpMovieView lookFactionBattleMovieView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 查看战况回放
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleMovieView();

    /**
     * 查看战况回放
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleMovieView(java.util.Map<String, String> __ctx);

    /**
     * 查看战况回放
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleMovieView(Ice.Callback __cb);

    /**
     * 查看战况回放
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleMovieView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查看战况回放
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleMovieView(Callback_Faction_lookFactionBattleMovieView __cb);

    /**
     * 查看战况回放
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleMovieView(java.util.Map<String, String> __ctx, Callback_Faction_lookFactionBattleMovieView __cb);

    /**
     * 查看战况回放
     * @param __result The asynchronous result object.
     **/
    public PvpMovieView end_lookFactionBattleMovieView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 查看战况回放
     * @param __cb The callback object for the operation.
     **/
    public boolean lookFactionBattleMovieView_async(AMI_Faction_lookFactionBattleMovieView __cb);

    /**
     * 查看战况回放
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lookFactionBattleMovieView_async(AMI_Faction_lookFactionBattleMovieView __cb, java.util.Map<String, String> __ctx);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     **/
    public String lookFactionBattleLog(byte logType)
        throws NoteException;

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __ctx The Context map to send with the invocation.
     **/
    public String lookFactionBattleLog(byte logType, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleLog(byte logType);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleLog(byte logType, java.util.Map<String, String> __ctx);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleLog(byte logType, Ice.Callback __cb);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleLog(byte logType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleLog(byte logType, Callback_Faction_lookFactionBattleLog __cb);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_lookFactionBattleLog(byte logType, java.util.Map<String, String> __ctx, Callback_Faction_lookFactionBattleLog __cb);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __result The asynchronous result object.
     **/
    public String end_lookFactionBattleLog(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __cb The callback object for the operation.
     **/
    public boolean lookFactionBattleLog_async(AMI_Faction_lookFactionBattleLog __cb, byte logType);

    /**
     * 查看公会战日志 logType=0 战斗日志，1挖宝
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean lookFactionBattleLog_async(AMI_Faction_lookFactionBattleLog __cb, byte logType, java.util.Map<String, String> __ctx);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     **/
    public String getFactionAllotLog()
        throws NoteException;

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionAllotLog(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionAllotLog();

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionAllotLog(java.util.Map<String, String> __ctx);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionAllotLog(Ice.Callback __cb);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionAllotLog(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionAllotLog(Callback_Faction_getFactionAllotLog __cb);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionAllotLog(java.util.Map<String, String> __ctx, Callback_Faction_getFactionAllotLog __cb);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionAllotLog(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionAllotLog_async(AMI_Faction_getFactionAllotLog __cb);

    /**
     * 获取公会仓库分配日志，返回FactionAllotLog[]的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionAllotLog_async(AMI_Faction_getFactionAllotLog __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     **/
    public String getTechnologyDonateLog()
        throws NoteException;

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getTechnologyDonateLog(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getTechnologyDonateLog();

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getTechnologyDonateLog(java.util.Map<String, String> __ctx);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getTechnologyDonateLog(Ice.Callback __cb);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getTechnologyDonateLog(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getTechnologyDonateLog(Callback_Faction_getTechnologyDonateLog __cb);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getTechnologyDonateLog(java.util.Map<String, String> __ctx, Callback_Faction_getTechnologyDonateLog __cb);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getTechnologyDonateLog(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getTechnologyDonateLog_async(AMI_Faction_getTechnologyDonateLog __cb);

    /**
     * 获取科技捐赠日志，返回TechnologyDonateView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getTechnologyDonateLog_async(AMI_Faction_getTechnologyDonateLog __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     **/
    public String getPurchaseLog()
        throws NoteException;

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getPurchaseLog(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPurchaseLog();

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPurchaseLog(java.util.Map<String, String> __ctx);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPurchaseLog(Ice.Callback __cb);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPurchaseLog(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPurchaseLog(Callback_Faction_getPurchaseLog __cb);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPurchaseLog(java.util.Map<String, String> __ctx, Callback_Faction_getPurchaseLog __cb);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getPurchaseLog(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getPurchaseLog_async(AMI_Faction_getPurchaseLog __cb);

    /**
     * 获取栈房购置日志，返回PurchaseLogSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getPurchaseLog_async(AMI_Faction_getPurchaseLog __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     **/
    public String getWarehouseItemQueue(int id)
        throws NoteException;

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getWarehouseItemQueue(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getWarehouseItemQueue(int id);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getWarehouseItemQueue(int id, java.util.Map<String, String> __ctx);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getWarehouseItemQueue(int id, Ice.Callback __cb);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getWarehouseItemQueue(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getWarehouseItemQueue(int id, Callback_Faction_getWarehouseItemQueue __cb);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getWarehouseItemQueue(int id, java.util.Map<String, String> __ctx, Callback_Faction_getWarehouseItemQueue __cb);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getWarehouseItemQueue(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getWarehouseItemQueue_async(AMI_Faction_getWarehouseItemQueue __cb, int id);

    /**
     * 获取仓库物品的申请队列，返回TechnologyDonateLogSeq的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getWarehouseItemQueue_async(AMI_Faction_getWarehouseItemQueue __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 索要物品。type=0-索要 1-取消
     **/
    public void demandItem(String itemId, int type)
        throws NoteException;

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __ctx The Context map to send with the invocation.
     **/
    public void demandItem(String itemId, int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 索要物品。type=0-索要 1-取消
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_demandItem(String itemId, int type);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_demandItem(String itemId, int type, java.util.Map<String, String> __ctx);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_demandItem(String itemId, int type, Ice.Callback __cb);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_demandItem(String itemId, int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_demandItem(String itemId, int type, Callback_Faction_demandItem __cb);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_demandItem(String itemId, int type, java.util.Map<String, String> __ctx, Callback_Faction_demandItem __cb);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __result The asynchronous result object.
     **/
    public void end_demandItem(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __cb The callback object for the operation.
     **/
    public boolean demandItem_async(AMI_Faction_demandItem __cb, String itemId, int type);

    /**
     * 索要物品。type=0-索要 1-取消
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean demandItem_async(AMI_Faction_demandItem __cb, String itemId, int type, java.util.Map<String, String> __ctx);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     **/
    public void applyItem(int id, int type)
        throws NoteException;

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __ctx The Context map to send with the invocation.
     **/
    public void applyItem(int id, int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyItem(int id, int type);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyItem(int id, int type, java.util.Map<String, String> __ctx);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyItem(int id, int type, Ice.Callback __cb);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyItem(int id, int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyItem(int id, int type, Callback_Faction_applyItem __cb);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_applyItem(int id, int type, java.util.Map<String, String> __ctx, Callback_Faction_applyItem __cb);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __result The asynchronous result object.
     **/
    public void end_applyItem(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __cb The callback object for the operation.
     **/
    public boolean applyItem_async(AMI_Faction_applyItem __cb, int id, int type);

    /**
     * 申请物品，进入队列排队。type=0-申请 1-取消
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean applyItem_async(AMI_Faction_applyItem __cb, int id, int type, java.util.Map<String, String> __ctx);

    /**
     * 获取仓库物品申请在我前面的人数
     **/
    public int getBeforePeople(String itemId)
        throws NoteException;

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __ctx The Context map to send with the invocation.
     **/
    public int getBeforePeople(String itemId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取仓库物品申请在我前面的人数
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBeforePeople(String itemId);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBeforePeople(String itemId, java.util.Map<String, String> __ctx);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBeforePeople(String itemId, Ice.Callback __cb);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBeforePeople(String itemId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBeforePeople(String itemId, Callback_Faction_getBeforePeople __cb);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getBeforePeople(String itemId, java.util.Map<String, String> __ctx, Callback_Faction_getBeforePeople __cb);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __result The asynchronous result object.
     **/
    public int end_getBeforePeople(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __cb The callback object for the operation.
     **/
    public boolean getBeforePeople_async(AMI_Faction_getBeforePeople __cb, String itemId);

    /**
     * 获取仓库物品申请在我前面的人数
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getBeforePeople_async(AMI_Faction_getBeforePeople __cb, String itemId, java.util.Map<String, String> __ctx);

    /**
     * 招贤
     **/
    public boolean recruit(boolean isFree)
        throws NoteException;

    /**
     * 招贤
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean recruit(boolean isFree, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 招贤
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_recruit(boolean isFree);

    /**
     * 招贤
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_recruit(boolean isFree, java.util.Map<String, String> __ctx);

    /**
     * 招贤
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_recruit(boolean isFree, Ice.Callback __cb);

    /**
     * 招贤
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_recruit(boolean isFree, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 招贤
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_recruit(boolean isFree, Callback_Faction_recruit __cb);

    /**
     * 招贤
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_recruit(boolean isFree, java.util.Map<String, String> __ctx, Callback_Faction_recruit __cb);

    /**
     * 招贤
     * @param __result The asynchronous result object.
     **/
    public boolean end_recruit(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 招贤
     * @param __cb The callback object for the operation.
     **/
    public boolean recruit_async(AMI_Faction_recruit __cb, boolean isFree);

    /**
     * 招贤
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean recruit_async(AMI_Faction_recruit __cb, boolean isFree, java.util.Map<String, String> __ctx);

    /**
     * 邀请
     **/
    public boolean invite(boolean isFree, String roleId)
        throws NoteException;

    /**
     * 邀请
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean invite(boolean isFree, String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 邀请
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_invite(boolean isFree, String roleId);

    /**
     * 邀请
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_invite(boolean isFree, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 邀请
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_invite(boolean isFree, String roleId, Ice.Callback __cb);

    /**
     * 邀请
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_invite(boolean isFree, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 邀请
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_invite(boolean isFree, String roleId, Callback_Faction_invite __cb);

    /**
     * 邀请
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_invite(boolean isFree, String roleId, java.util.Map<String, String> __ctx, Callback_Faction_invite __cb);

    /**
     * 邀请
     * @param __result The asynchronous result object.
     **/
    public boolean end_invite(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 邀请
     * @param __cb The callback object for the operation.
     **/
    public boolean invite_async(AMI_Faction_invite __cb, boolean isFree, String roleId);

    /**
     * 邀请
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean invite_async(AMI_Faction_invite __cb, boolean isFree, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     **/
    public String getRecruitCount(int type)
        throws NoteException;

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getRecruitCount(int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRecruitCount(int type);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRecruitCount(int type, java.util.Map<String, String> __ctx);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRecruitCount(int type, Ice.Callback __cb);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRecruitCount(int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRecruitCount(int type, Callback_Faction_getRecruitCount __cb);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRecruitCount(int type, java.util.Map<String, String> __ctx, Callback_Faction_getRecruitCount __cb);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __result The asynchronous result object.
     **/
    public String end_getRecruitCount(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __cb The callback object for the operation.
     **/
    public boolean getRecruitCount_async(AMI_Faction_getRecruitCount __cb, int type);

    /**
     * 获取招贤、邀请次数。0-招贤1-邀请return:IntIntPair
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getRecruitCount_async(AMI_Faction_getRecruitCount __cb, int type, java.util.Map<String, String> __ctx);

    /**
     * 获取公会信息，返回FactionView的lua
     **/
    public String getFactionInfo(String id);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFactionInfo(String id, java.util.Map<String, String> __ctx);

    /**
     * 获取公会信息，返回FactionView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionInfo(String id);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionInfo(String id, java.util.Map<String, String> __ctx);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionInfo(String id, Ice.Callback __cb);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionInfo(String id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionInfo(String id, Callback_Faction_getFactionInfo __cb);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionInfo(String id, java.util.Map<String, String> __ctx, Callback_Faction_getFactionInfo __cb);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getFactionInfo(Ice.AsyncResult __result);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getFactionInfo_async(AMI_Faction_getFactionInfo __cb, String id);

    /**
     * 获取公会信息，返回FactionView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getFactionInfo_async(AMI_Faction_getFactionInfo __cb, String id, java.util.Map<String, String> __ctx);
}
