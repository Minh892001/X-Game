// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 公会科技技能
 **/
public class FactionTechnology implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public int level;

    public int exp;

    public boolean isCanStudy;

    public boolean isOnStudy;

    public int studyProgress;

    public int studySecond;

    public boolean isRecommend;

    public boolean canYuanbaoDonate;

    public boolean isMaxLevel;

    public FactionTechnology()
    {
    }

    public FactionTechnology(int id, int level, int exp, boolean isCanStudy, boolean isOnStudy, int studyProgress, int studySecond, boolean isRecommend, boolean canYuanbaoDonate, boolean isMaxLevel)
    {
        this.id = id;
        this.level = level;
        this.exp = exp;
        this.isCanStudy = isCanStudy;
        this.isOnStudy = isOnStudy;
        this.studyProgress = studyProgress;
        this.studySecond = studySecond;
        this.isRecommend = isRecommend;
        this.canYuanbaoDonate = canYuanbaoDonate;
        this.isMaxLevel = isMaxLevel;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FactionTechnology _r = null;
        if(rhs instanceof FactionTechnology)
        {
            _r = (FactionTechnology)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(level != _r.level)
            {
                return false;
            }
            if(exp != _r.exp)
            {
                return false;
            }
            if(isCanStudy != _r.isCanStudy)
            {
                return false;
            }
            if(isOnStudy != _r.isOnStudy)
            {
                return false;
            }
            if(studyProgress != _r.studyProgress)
            {
                return false;
            }
            if(studySecond != _r.studySecond)
            {
                return false;
            }
            if(isRecommend != _r.isRecommend)
            {
                return false;
            }
            if(canYuanbaoDonate != _r.canYuanbaoDonate)
            {
                return false;
            }
            if(isMaxLevel != _r.isMaxLevel)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FactionTechnology");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, exp);
        __h = IceInternal.HashUtil.hashAdd(__h, isCanStudy);
        __h = IceInternal.HashUtil.hashAdd(__h, isOnStudy);
        __h = IceInternal.HashUtil.hashAdd(__h, studyProgress);
        __h = IceInternal.HashUtil.hashAdd(__h, studySecond);
        __h = IceInternal.HashUtil.hashAdd(__h, isRecommend);
        __h = IceInternal.HashUtil.hashAdd(__h, canYuanbaoDonate);
        __h = IceInternal.HashUtil.hashAdd(__h, isMaxLevel);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeInt(level);
        __os.writeInt(exp);
        __os.writeBool(isCanStudy);
        __os.writeBool(isOnStudy);
        __os.writeInt(studyProgress);
        __os.writeInt(studySecond);
        __os.writeBool(isRecommend);
        __os.writeBool(canYuanbaoDonate);
        __os.writeBool(isMaxLevel);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        level = __is.readInt();
        exp = __is.readInt();
        isCanStudy = __is.readBool();
        isOnStudy = __is.readBool();
        studyProgress = __is.readInt();
        studySecond = __is.readInt();
        isRecommend = __is.readBool();
        canYuanbaoDonate = __is.readBool();
        isMaxLevel = __is.readBool();
    }

    public static final long serialVersionUID = 741380632L;
}
