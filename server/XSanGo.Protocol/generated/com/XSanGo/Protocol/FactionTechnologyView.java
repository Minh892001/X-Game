// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 公会科技view
 **/
public class FactionTechnologyView implements java.lang.Cloneable, java.io.Serializable
{
    public FactionTechnology[] technologys;

    public int studyNum;

    public int weizhangNum;

    public boolean hasCd;

    public int cd;

    public int score;

    public FactionTechnologyView()
    {
    }

    public FactionTechnologyView(FactionTechnology[] technologys, int studyNum, int weizhangNum, boolean hasCd, int cd, int score)
    {
        this.technologys = technologys;
        this.studyNum = studyNum;
        this.weizhangNum = weizhangNum;
        this.hasCd = hasCd;
        this.cd = cd;
        this.score = score;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FactionTechnologyView _r = null;
        if(rhs instanceof FactionTechnologyView)
        {
            _r = (FactionTechnologyView)rhs;
        }

        if(_r != null)
        {
            if(!java.util.Arrays.equals(technologys, _r.technologys))
            {
                return false;
            }
            if(studyNum != _r.studyNum)
            {
                return false;
            }
            if(weizhangNum != _r.weizhangNum)
            {
                return false;
            }
            if(hasCd != _r.hasCd)
            {
                return false;
            }
            if(cd != _r.cd)
            {
                return false;
            }
            if(score != _r.score)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FactionTechnologyView");
        __h = IceInternal.HashUtil.hashAdd(__h, technologys);
        __h = IceInternal.HashUtil.hashAdd(__h, studyNum);
        __h = IceInternal.HashUtil.hashAdd(__h, weizhangNum);
        __h = IceInternal.HashUtil.hashAdd(__h, hasCd);
        __h = IceInternal.HashUtil.hashAdd(__h, cd);
        __h = IceInternal.HashUtil.hashAdd(__h, score);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        FactionTechnologySeqHelper.write(__os, technologys);
        __os.writeInt(studyNum);
        __os.writeInt(weizhangNum);
        __os.writeBool(hasCd);
        __os.writeInt(cd);
        __os.writeInt(score);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        technologys = FactionTechnologySeqHelper.read(__is);
        studyNum = __is.readInt();
        weizhangNum = __is.readInt();
        hasCd = __is.readBool();
        cd = __is.readInt();
        score = __is.readInt();
    }

    public static final long serialVersionUID = -2023651510L;
}
