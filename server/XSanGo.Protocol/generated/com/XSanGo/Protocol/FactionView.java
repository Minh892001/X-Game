// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class FactionView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public String icon;

    public String name;

    public int level;

    public int currentExp;

    public int levelUpExp;

    public String qq;

    public String announce;

    public int joinType;

    public int joinLevel;

    public int maxPeople;

    public int contribution;

    public int honor;

    public int renamePrice;

    public int canSendMailCount;

    public FactionMemberView[] members;

    public int joinVip;

    public String manifesto;

    public boolean isRedPoint;

    public boolean technologyRedPoint;

    public int deleteDay;

    public FactionView()
    {
    }

    public FactionView(String id, String icon, String name, int level, int currentExp, int levelUpExp, String qq, String announce, int joinType, int joinLevel, int maxPeople, int contribution, int honor, int renamePrice, int canSendMailCount, FactionMemberView[] members, int joinVip, String manifesto, boolean isRedPoint, boolean technologyRedPoint, int deleteDay)
    {
        this.id = id;
        this.icon = icon;
        this.name = name;
        this.level = level;
        this.currentExp = currentExp;
        this.levelUpExp = levelUpExp;
        this.qq = qq;
        this.announce = announce;
        this.joinType = joinType;
        this.joinLevel = joinLevel;
        this.maxPeople = maxPeople;
        this.contribution = contribution;
        this.honor = honor;
        this.renamePrice = renamePrice;
        this.canSendMailCount = canSendMailCount;
        this.members = members;
        this.joinVip = joinVip;
        this.manifesto = manifesto;
        this.isRedPoint = isRedPoint;
        this.technologyRedPoint = technologyRedPoint;
        this.deleteDay = deleteDay;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FactionView _r = null;
        if(rhs instanceof FactionView)
        {
            _r = (FactionView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(currentExp != _r.currentExp)
            {
                return false;
            }
            if(levelUpExp != _r.levelUpExp)
            {
                return false;
            }
            if(qq != _r.qq)
            {
                if(qq == null || _r.qq == null || !qq.equals(_r.qq))
                {
                    return false;
                }
            }
            if(announce != _r.announce)
            {
                if(announce == null || _r.announce == null || !announce.equals(_r.announce))
                {
                    return false;
                }
            }
            if(joinType != _r.joinType)
            {
                return false;
            }
            if(joinLevel != _r.joinLevel)
            {
                return false;
            }
            if(maxPeople != _r.maxPeople)
            {
                return false;
            }
            if(contribution != _r.contribution)
            {
                return false;
            }
            if(honor != _r.honor)
            {
                return false;
            }
            if(renamePrice != _r.renamePrice)
            {
                return false;
            }
            if(canSendMailCount != _r.canSendMailCount)
            {
                return false;
            }
            if(!java.util.Arrays.equals(members, _r.members))
            {
                return false;
            }
            if(joinVip != _r.joinVip)
            {
                return false;
            }
            if(manifesto != _r.manifesto)
            {
                if(manifesto == null || _r.manifesto == null || !manifesto.equals(_r.manifesto))
                {
                    return false;
                }
            }
            if(isRedPoint != _r.isRedPoint)
            {
                return false;
            }
            if(technologyRedPoint != _r.technologyRedPoint)
            {
                return false;
            }
            if(deleteDay != _r.deleteDay)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FactionView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, currentExp);
        __h = IceInternal.HashUtil.hashAdd(__h, levelUpExp);
        __h = IceInternal.HashUtil.hashAdd(__h, qq);
        __h = IceInternal.HashUtil.hashAdd(__h, announce);
        __h = IceInternal.HashUtil.hashAdd(__h, joinType);
        __h = IceInternal.HashUtil.hashAdd(__h, joinLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, maxPeople);
        __h = IceInternal.HashUtil.hashAdd(__h, contribution);
        __h = IceInternal.HashUtil.hashAdd(__h, honor);
        __h = IceInternal.HashUtil.hashAdd(__h, renamePrice);
        __h = IceInternal.HashUtil.hashAdd(__h, canSendMailCount);
        __h = IceInternal.HashUtil.hashAdd(__h, members);
        __h = IceInternal.HashUtil.hashAdd(__h, joinVip);
        __h = IceInternal.HashUtil.hashAdd(__h, manifesto);
        __h = IceInternal.HashUtil.hashAdd(__h, isRedPoint);
        __h = IceInternal.HashUtil.hashAdd(__h, technologyRedPoint);
        __h = IceInternal.HashUtil.hashAdd(__h, deleteDay);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeString(icon);
        __os.writeString(name);
        __os.writeInt(level);
        __os.writeInt(currentExp);
        __os.writeInt(levelUpExp);
        __os.writeString(qq);
        __os.writeString(announce);
        __os.writeInt(joinType);
        __os.writeInt(joinLevel);
        __os.writeInt(maxPeople);
        __os.writeInt(contribution);
        __os.writeInt(honor);
        __os.writeInt(renamePrice);
        __os.writeInt(canSendMailCount);
        FactionMemberViewSeqHelper.write(__os, members);
        __os.writeInt(joinVip);
        __os.writeString(manifesto);
        __os.writeBool(isRedPoint);
        __os.writeBool(technologyRedPoint);
        __os.writeInt(deleteDay);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        icon = __is.readString();
        name = __is.readString();
        level = __is.readInt();
        currentExp = __is.readInt();
        levelUpExp = __is.readInt();
        qq = __is.readString();
        announce = __is.readString();
        joinType = __is.readInt();
        joinLevel = __is.readInt();
        maxPeople = __is.readInt();
        contribution = __is.readInt();
        honor = __is.readInt();
        renamePrice = __is.readInt();
        canSendMailCount = __is.readInt();
        members = FactionMemberViewSeqHelper.read(__is);
        joinVip = __is.readInt();
        manifesto = __is.readString();
        isRedPoint = __is.readBool();
        technologyRedPoint = __is.readBool();
        deleteDay = __is.readInt();
    }

    public static final long serialVersionUID = -1474751353L;
}
