// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Tournament.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class FightRecordItemView implements java.lang.Cloneable, java.io.Serializable
{
    public CrossRoleView roleView;

    public int addScore;

    public int score;

    public int win;

    public int power;

    public int fightDate;

    public String recordId;

    public String movieId;

    public FightRecordItemView()
    {
    }

    public FightRecordItemView(CrossRoleView roleView, int addScore, int score, int win, int power, int fightDate, String recordId, String movieId)
    {
        this.roleView = roleView;
        this.addScore = addScore;
        this.score = score;
        this.win = win;
        this.power = power;
        this.fightDate = fightDate;
        this.recordId = recordId;
        this.movieId = movieId;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FightRecordItemView _r = null;
        if(rhs instanceof FightRecordItemView)
        {
            _r = (FightRecordItemView)rhs;
        }

        if(_r != null)
        {
            if(roleView != _r.roleView)
            {
                if(roleView == null || _r.roleView == null || !roleView.equals(_r.roleView))
                {
                    return false;
                }
            }
            if(addScore != _r.addScore)
            {
                return false;
            }
            if(score != _r.score)
            {
                return false;
            }
            if(win != _r.win)
            {
                return false;
            }
            if(power != _r.power)
            {
                return false;
            }
            if(fightDate != _r.fightDate)
            {
                return false;
            }
            if(recordId != _r.recordId)
            {
                if(recordId == null || _r.recordId == null || !recordId.equals(_r.recordId))
                {
                    return false;
                }
            }
            if(movieId != _r.movieId)
            {
                if(movieId == null || _r.movieId == null || !movieId.equals(_r.movieId))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FightRecordItemView");
        __h = IceInternal.HashUtil.hashAdd(__h, roleView);
        __h = IceInternal.HashUtil.hashAdd(__h, addScore);
        __h = IceInternal.HashUtil.hashAdd(__h, score);
        __h = IceInternal.HashUtil.hashAdd(__h, win);
        __h = IceInternal.HashUtil.hashAdd(__h, power);
        __h = IceInternal.HashUtil.hashAdd(__h, fightDate);
        __h = IceInternal.HashUtil.hashAdd(__h, recordId);
        __h = IceInternal.HashUtil.hashAdd(__h, movieId);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        roleView.__write(__os);
        __os.writeInt(addScore);
        __os.writeInt(score);
        __os.writeInt(win);
        __os.writeInt(power);
        __os.writeInt(fightDate);
        __os.writeString(recordId);
        __os.writeString(movieId);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        roleView = new CrossRoleView();
        roleView.__read(__is);
        addScore = __is.readInt();
        score = __is.readInt();
        win = __is.readInt();
        power = __is.readInt();
        fightDate = __is.readInt();
        recordId = __is.readString();
        movieId = __is.readString();
    }

    public static final long serialVersionUID = -1802573965L;
}
