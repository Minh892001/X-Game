// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Formation.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface FormationPrx extends Ice.ObjectPrx
{
    public FormationView[] getFormationList();

    public FormationView[] getFormationList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFormationList();

    public Ice.AsyncResult begin_getFormationList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFormationList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getFormationList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getFormationList(Callback_Formation_getFormationList __cb);

    public Ice.AsyncResult begin_getFormationList(java.util.Map<String, String> __ctx, Callback_Formation_getFormationList __cb);

    public FormationView[] end_getFormationList(Ice.AsyncResult __result);

    public boolean getFormationList_async(AMI_Formation_getFormationList __cb);

    public boolean getFormationList_async(AMI_Formation_getFormationList __cb, java.util.Map<String, String> __ctx);

    public void setFormationBuff(String formationId, String bookId);

    public void setFormationBuff(String formationId, String bookId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFormationBuff(String formationId, String bookId);

    public Ice.AsyncResult begin_setFormationBuff(String formationId, String bookId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFormationBuff(String formationId, String bookId, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFormationBuff(String formationId, String bookId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFormationBuff(String formationId, String bookId, Callback_Formation_setFormationBuff __cb);

    public Ice.AsyncResult begin_setFormationBuff(String formationId, String bookId, java.util.Map<String, String> __ctx, Callback_Formation_setFormationBuff __cb);

    public void end_setFormationBuff(Ice.AsyncResult __result);

    public boolean setFormationBuff_async(AMI_Formation_setFormationBuff __cb, String formationId, String bookId);

    public boolean setFormationBuff_async(AMI_Formation_setFormationBuff __cb, String formationId, String bookId, java.util.Map<String, String> __ctx);

    public void setFormationPosition(String formationId, byte postion, String heroId)
        throws NoteException;

    public void setFormationPosition(String formationId, byte postion, String heroId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_setFormationPosition(String formationId, byte postion, String heroId);

    public Ice.AsyncResult begin_setFormationPosition(String formationId, byte postion, String heroId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFormationPosition(String formationId, byte postion, String heroId, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFormationPosition(String formationId, byte postion, String heroId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFormationPosition(String formationId, byte postion, String heroId, Callback_Formation_setFormationPosition __cb);

    public Ice.AsyncResult begin_setFormationPosition(String formationId, byte postion, String heroId, java.util.Map<String, String> __ctx, Callback_Formation_setFormationPosition __cb);

    public void end_setFormationPosition(Ice.AsyncResult __result)
        throws NoteException;

    public boolean setFormationPosition_async(AMI_Formation_setFormationPosition __cb, String formationId, byte postion, String heroId);

    public boolean setFormationPosition_async(AMI_Formation_setFormationPosition __cb, String formationId, byte postion, String heroId, java.util.Map<String, String> __ctx);

    public void setFormationSkill(String formationId, byte pos, int skillId);

    public void setFormationSkill(String formationId, byte pos, int skillId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFormationSkill(String formationId, byte pos, int skillId);

    public Ice.AsyncResult begin_setFormationSkill(String formationId, byte pos, int skillId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFormationSkill(String formationId, byte pos, int skillId, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFormationSkill(String formationId, byte pos, int skillId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFormationSkill(String formationId, byte pos, int skillId, Callback_Formation_setFormationSkill __cb);

    public Ice.AsyncResult begin_setFormationSkill(String formationId, byte pos, int skillId, java.util.Map<String, String> __ctx, Callback_Formation_setFormationSkill __cb);

    public void end_setFormationSkill(Ice.AsyncResult __result);

    public boolean setFormationSkill_async(AMI_Formation_setFormationSkill __cb, String formationId, byte pos, int skillId);

    public boolean setFormationSkill_async(AMI_Formation_setFormationSkill __cb, String formationId, byte pos, int skillId, java.util.Map<String, String> __ctx);

    public void clearFormation(String formationId)
        throws NoteException;

    public void clearFormation(String formationId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_clearFormation(String formationId);

    public Ice.AsyncResult begin_clearFormation(String formationId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_clearFormation(String formationId, Ice.Callback __cb);

    public Ice.AsyncResult begin_clearFormation(String formationId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_clearFormation(String formationId, Callback_Formation_clearFormation __cb);

    public Ice.AsyncResult begin_clearFormation(String formationId, java.util.Map<String, String> __ctx, Callback_Formation_clearFormation __cb);

    public void end_clearFormation(Ice.AsyncResult __result)
        throws NoteException;

    public boolean clearFormation_async(AMI_Formation_clearFormation __cb, String formationId);

    public boolean clearFormation_async(AMI_Formation_clearFormation __cb, String formationId, java.util.Map<String, String> __ctx);
}
