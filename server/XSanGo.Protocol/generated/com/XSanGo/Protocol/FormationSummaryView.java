// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class FormationSummaryView implements java.lang.Cloneable, java.io.Serializable
{
    public byte index;

    public int templateId;

    public int quality;

    public byte star;

    public int level;

    public int color;

    public byte breakLevel;

    public boolean isAwaken;

    public FormationSummaryView()
    {
    }

    public FormationSummaryView(byte index, int templateId, int quality, byte star, int level, int color, byte breakLevel, boolean isAwaken)
    {
        this.index = index;
        this.templateId = templateId;
        this.quality = quality;
        this.star = star;
        this.level = level;
        this.color = color;
        this.breakLevel = breakLevel;
        this.isAwaken = isAwaken;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FormationSummaryView _r = null;
        if(rhs instanceof FormationSummaryView)
        {
            _r = (FormationSummaryView)rhs;
        }

        if(_r != null)
        {
            if(index != _r.index)
            {
                return false;
            }
            if(templateId != _r.templateId)
            {
                return false;
            }
            if(quality != _r.quality)
            {
                return false;
            }
            if(star != _r.star)
            {
                return false;
            }
            if(level != _r.level)
            {
                return false;
            }
            if(color != _r.color)
            {
                return false;
            }
            if(breakLevel != _r.breakLevel)
            {
                return false;
            }
            if(isAwaken != _r.isAwaken)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FormationSummaryView");
        __h = IceInternal.HashUtil.hashAdd(__h, index);
        __h = IceInternal.HashUtil.hashAdd(__h, templateId);
        __h = IceInternal.HashUtil.hashAdd(__h, quality);
        __h = IceInternal.HashUtil.hashAdd(__h, star);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, color);
        __h = IceInternal.HashUtil.hashAdd(__h, breakLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, isAwaken);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeByte(index);
        __os.writeInt(templateId);
        __os.writeInt(quality);
        __os.writeByte(star);
        __os.writeInt(level);
        __os.writeInt(color);
        __os.writeByte(breakLevel);
        __os.writeBool(isAwaken);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        index = __is.readByte();
        templateId = __is.readInt();
        quality = __is.readInt();
        star = __is.readByte();
        level = __is.readInt();
        color = __is.readInt();
        breakLevel = __is.readByte();
        isAwaken = __is.readBool();
    }

    public static final long serialVersionUID = -1017091057L;
}
