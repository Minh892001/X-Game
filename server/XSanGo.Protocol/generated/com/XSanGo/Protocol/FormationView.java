// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class FormationView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public byte index;

    public String buffItemId;

    public IntIntPair[] buffAdvanced;

    public int buffAdvancedType;

    public FormationPosView[] postions;

    public IntIntPair[] skills;

    public int battlePower;

    public FormationView()
    {
    }

    public FormationView(String id, byte index, String buffItemId, IntIntPair[] buffAdvanced, int buffAdvancedType, FormationPosView[] postions, IntIntPair[] skills, int battlePower)
    {
        this.id = id;
        this.index = index;
        this.buffItemId = buffItemId;
        this.buffAdvanced = buffAdvanced;
        this.buffAdvancedType = buffAdvancedType;
        this.postions = postions;
        this.skills = skills;
        this.battlePower = battlePower;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FormationView _r = null;
        if(rhs instanceof FormationView)
        {
            _r = (FormationView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(index != _r.index)
            {
                return false;
            }
            if(buffItemId != _r.buffItemId)
            {
                if(buffItemId == null || _r.buffItemId == null || !buffItemId.equals(_r.buffItemId))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(buffAdvanced, _r.buffAdvanced))
            {
                return false;
            }
            if(buffAdvancedType != _r.buffAdvancedType)
            {
                return false;
            }
            if(!java.util.Arrays.equals(postions, _r.postions))
            {
                return false;
            }
            if(!java.util.Arrays.equals(skills, _r.skills))
            {
                return false;
            }
            if(battlePower != _r.battlePower)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FormationView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, index);
        __h = IceInternal.HashUtil.hashAdd(__h, buffItemId);
        __h = IceInternal.HashUtil.hashAdd(__h, buffAdvanced);
        __h = IceInternal.HashUtil.hashAdd(__h, buffAdvancedType);
        __h = IceInternal.HashUtil.hashAdd(__h, postions);
        __h = IceInternal.HashUtil.hashAdd(__h, skills);
        __h = IceInternal.HashUtil.hashAdd(__h, battlePower);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeByte(index);
        __os.writeString(buffItemId);
        IntIntPairSeqHelper.write(__os, buffAdvanced);
        __os.writeInt(buffAdvancedType);
        FormationPosViewSeqHelper.write(__os, postions);
        IntIntPairSeqHelper.write(__os, skills);
        __os.writeInt(battlePower);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        index = __is.readByte();
        buffItemId = __is.readString();
        buffAdvanced = IntIntPairSeqHelper.read(__is);
        buffAdvancedType = __is.readInt();
        postions = FormationPosViewSeqHelper.read(__is);
        skills = IntIntPairSeqHelper.read(__is);
        battlePower = __is.readInt();
    }

    public static final long serialVersionUID = 1882778086L;
}
