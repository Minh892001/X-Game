// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class FortuneWheelView implements java.lang.Cloneable, java.io.Serializable
{
    public int lastCount;

    public int totalCount;

    public int maxCount;

    public long lastTime;

    public FortuneWheelRewardItemView[] rewards;

    public String help;

    public IntIntPair[] vipCountPair;

    public FortuneWheelView()
    {
    }

    public FortuneWheelView(int lastCount, int totalCount, int maxCount, long lastTime, FortuneWheelRewardItemView[] rewards, String help, IntIntPair[] vipCountPair)
    {
        this.lastCount = lastCount;
        this.totalCount = totalCount;
        this.maxCount = maxCount;
        this.lastTime = lastTime;
        this.rewards = rewards;
        this.help = help;
        this.vipCountPair = vipCountPair;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FortuneWheelView _r = null;
        if(rhs instanceof FortuneWheelView)
        {
            _r = (FortuneWheelView)rhs;
        }

        if(_r != null)
        {
            if(lastCount != _r.lastCount)
            {
                return false;
            }
            if(totalCount != _r.totalCount)
            {
                return false;
            }
            if(maxCount != _r.maxCount)
            {
                return false;
            }
            if(lastTime != _r.lastTime)
            {
                return false;
            }
            if(!java.util.Arrays.equals(rewards, _r.rewards))
            {
                return false;
            }
            if(help != _r.help)
            {
                if(help == null || _r.help == null || !help.equals(_r.help))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(vipCountPair, _r.vipCountPair))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::FortuneWheelView");
        __h = IceInternal.HashUtil.hashAdd(__h, lastCount);
        __h = IceInternal.HashUtil.hashAdd(__h, totalCount);
        __h = IceInternal.HashUtil.hashAdd(__h, maxCount);
        __h = IceInternal.HashUtil.hashAdd(__h, lastTime);
        __h = IceInternal.HashUtil.hashAdd(__h, rewards);
        __h = IceInternal.HashUtil.hashAdd(__h, help);
        __h = IceInternal.HashUtil.hashAdd(__h, vipCountPair);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(lastCount);
        __os.writeInt(totalCount);
        __os.writeInt(maxCount);
        __os.writeLong(lastTime);
        FortuneWheelRewardItemViewSeqHelper.write(__os, rewards);
        __os.writeString(help);
        IntIntPairSeqHelper.write(__os, vipCountPair);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        lastCount = __is.readInt();
        totalCount = __is.readInt();
        maxCount = __is.readInt();
        lastTime = __is.readLong();
        rewards = FortuneWheelRewardItemViewSeqHelper.read(__is);
        help = __is.readString();
        vipCountPair = IntIntPairSeqHelper.read(__is);
    }

    public static final long serialVersionUID = 969774219L;
}
