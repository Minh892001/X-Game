// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Center.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface GmPrx extends Ice.ObjectPrx
{
    public String[] getItemConfig()
        throws NoteException;

    public String[] getItemConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getItemConfig();

    public Ice.AsyncResult begin_getItemConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getItemConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getItemConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getItemConfig(Callback_Gm_getItemConfig __cb);

    public Ice.AsyncResult begin_getItemConfig(java.util.Map<String, String> __ctx, Callback_Gm_getItemConfig __cb);

    public String[] end_getItemConfig(Ice.AsyncResult __result)
        throws NoteException;

    public String[] getServerItemConfig(int serverId)
        throws NoteException;

    public String[] getServerItemConfig(int serverId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getServerItemConfig(int serverId);

    public Ice.AsyncResult begin_getServerItemConfig(int serverId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getServerItemConfig(int serverId, Ice.Callback __cb);

    public Ice.AsyncResult begin_getServerItemConfig(int serverId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getServerItemConfig(int serverId, Callback_Gm_getServerItemConfig __cb);

    public Ice.AsyncResult begin_getServerItemConfig(int serverId, java.util.Map<String, String> __ctx, Callback_Gm_getServerItemConfig __cb);

    public String[] end_getServerItemConfig(Ice.AsyncResult __result)
        throws NoteException;

    public String[] getPropertyConfig()
        throws NoteException;

    public String[] getPropertyConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getPropertyConfig();

    public Ice.AsyncResult begin_getPropertyConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPropertyConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPropertyConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPropertyConfig(Callback_Gm_getPropertyConfig __cb);

    public Ice.AsyncResult begin_getPropertyConfig(java.util.Map<String, String> __ctx, Callback_Gm_getPropertyConfig __cb);

    public String[] end_getPropertyConfig(Ice.AsyncResult __result)
        throws NoteException;

    public IntString[] getPlayerSkillConfig()
        throws NoteException;

    public IntString[] getPlayerSkillConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getPlayerSkillConfig();

    public Ice.AsyncResult begin_getPlayerSkillConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPlayerSkillConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPlayerSkillConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPlayerSkillConfig(Callback_Gm_getPlayerSkillConfig __cb);

    public Ice.AsyncResult begin_getPlayerSkillConfig(java.util.Map<String, String> __ctx, Callback_Gm_getPlayerSkillConfig __cb);

    public IntString[] end_getPlayerSkillConfig(Ice.AsyncResult __result)
        throws NoteException;

    public IntString[] getHeroSkillConfig()
        throws NoteException;

    public IntString[] getHeroSkillConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getHeroSkillConfig();

    public Ice.AsyncResult begin_getHeroSkillConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getHeroSkillConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getHeroSkillConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getHeroSkillConfig(Callback_Gm_getHeroSkillConfig __cb);

    public Ice.AsyncResult begin_getHeroSkillConfig(java.util.Map<String, String> __ctx, Callback_Gm_getHeroSkillConfig __cb);

    public IntString[] end_getHeroSkillConfig(Ice.AsyncResult __result)
        throws NoteException;

    public IntString[] getRelationConfig()
        throws NoteException;

    public IntString[] getRelationConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getRelationConfig();

    public Ice.AsyncResult begin_getRelationConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRelationConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getRelationConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getRelationConfig(Callback_Gm_getRelationConfig __cb);

    public Ice.AsyncResult begin_getRelationConfig(java.util.Map<String, String> __ctx, Callback_Gm_getRelationConfig __cb);

    public IntString[] end_getRelationConfig(Ice.AsyncResult __result)
        throws NoteException;

    public String getChannelConfig()
        throws NoteException;

    public String getChannelConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getChannelConfig();

    public Ice.AsyncResult begin_getChannelConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChannelConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getChannelConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChannelConfig(Callback_Gm_getChannelConfig __cb);

    public Ice.AsyncResult begin_getChannelConfig(java.util.Map<String, String> __ctx, Callback_Gm_getChannelConfig __cb);

    public String end_getChannelConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getChannelConfig_async(AMI_Gm_getChannelConfig __cb);

    public boolean getChannelConfig_async(AMI_Gm_getChannelConfig __cb, java.util.Map<String, String> __ctx);

    public GameServerView[] ping();

    public GameServerView[] ping(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ping();

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ping(Ice.Callback __cb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_ping(Callback_Gm_ping __cb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx, Callback_Gm_ping __cb);

    public GameServerView[] end_ping(Ice.AsyncResult __result);

    public boolean ping_async(AMI_Gm_ping __cb);

    public boolean ping_async(AMI_Gm_ping __cb, java.util.Map<String, String> __ctx);

    public String findRoleViewList(int serverId, String accountName, String roleName, String roleId)
        throws NoteException;

    public String findRoleViewList(int serverId, String accountName, String roleName, String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_findRoleViewList(int serverId, String accountName, String roleName, String roleId);

    public Ice.AsyncResult begin_findRoleViewList(int serverId, String accountName, String roleName, String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findRoleViewList(int serverId, String accountName, String roleName, String roleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewList(int serverId, String accountName, String roleName, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findRoleViewList(int serverId, String accountName, String roleName, String roleId, Callback_Gm_findRoleViewList __cb);

    public Ice.AsyncResult begin_findRoleViewList(int serverId, String accountName, String roleName, String roleId, java.util.Map<String, String> __ctx, Callback_Gm_findRoleViewList __cb);

    public String end_findRoleViewList(Ice.AsyncResult __result)
        throws NoteException;

    public void sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName)
        throws NoteException;

    public void sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName);

    public Ice.AsyncResult begin_sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName, Callback_Gm_sendSystemMail __cb);

    public Ice.AsyncResult begin_sendSystemMail(int serverId, String roleId, String roleName, String title, String content, Property[] attach, String sendName, java.util.Map<String, String> __ctx, Callback_Gm_sendSystemMail __cb);

    public void end_sendSystemMail(Ice.AsyncResult __result)
        throws NoteException;

    public void sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName)
        throws NoteException;

    public void sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName);

    public Ice.AsyncResult begin_sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName, Callback_Gm_sendSystemServerMail __cb);

    public Ice.AsyncResult begin_sendSystemServerMail(int serverId, String title, String content, Property[] attach, String conditionParams, String senderName, java.util.Map<String, String> __ctx, Callback_Gm_sendSystemServerMail __cb);

    public void end_sendSystemServerMail(Ice.AsyncResult __result)
        throws NoteException;

    public void executeGroovyScript(int serverId, String script)
        throws NoteException;

    public void executeGroovyScript(int serverId, String script, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_executeGroovyScript(int serverId, String script);

    public Ice.AsyncResult begin_executeGroovyScript(int serverId, String script, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_executeGroovyScript(int serverId, String script, Ice.Callback __cb);

    public Ice.AsyncResult begin_executeGroovyScript(int serverId, String script, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_executeGroovyScript(int serverId, String script, Callback_Gm_executeGroovyScript __cb);

    public Ice.AsyncResult begin_executeGroovyScript(int serverId, String script, java.util.Map<String, String> __ctx, Callback_Gm_executeGroovyScript __cb);

    public void end_executeGroovyScript(Ice.AsyncResult __result)
        throws NoteException;

    public void executeGroovyCombineScript(int serverId)
        throws NoteException;

    public void executeGroovyCombineScript(int serverId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_executeGroovyCombineScript(int serverId);

    public Ice.AsyncResult begin_executeGroovyCombineScript(int serverId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_executeGroovyCombineScript(int serverId, Ice.Callback __cb);

    public Ice.AsyncResult begin_executeGroovyCombineScript(int serverId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_executeGroovyCombineScript(int serverId, Callback_Gm_executeGroovyCombineScript __cb);

    public Ice.AsyncResult begin_executeGroovyCombineScript(int serverId, java.util.Map<String, String> __ctx, Callback_Gm_executeGroovyCombineScript __cb);

    public void end_executeGroovyCombineScript(Ice.AsyncResult __result)
        throws NoteException;

    public void setVipLevel(int serverId, String roleName, int vip)
        throws NoteException;

    public void setVipLevel(int serverId, String roleName, int vip, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_setVipLevel(int serverId, String roleName, int vip);

    public Ice.AsyncResult begin_setVipLevel(int serverId, String roleName, int vip, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setVipLevel(int serverId, String roleName, int vip, Ice.Callback __cb);

    public Ice.AsyncResult begin_setVipLevel(int serverId, String roleName, int vip, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setVipLevel(int serverId, String roleName, int vip, Callback_Gm_setVipLevel __cb);

    public Ice.AsyncResult begin_setVipLevel(int serverId, String roleName, int vip, java.util.Map<String, String> __ctx, Callback_Gm_setVipLevel __cb);

    public void end_setVipLevel(Ice.AsyncResult __result)
        throws NoteException;

    public String generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content)
        throws NoteException;

    public String generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content);

    public Ice.AsyncResult begin_generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content, Ice.Callback __cb);

    public Ice.AsyncResult begin_generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content, Callback_Gm_generateCDK __cb);

    public Ice.AsyncResult begin_generateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Property[] content, java.util.Map<String, String> __ctx, Callback_Gm_generateCDK __cb);

    public String end_generateCDK(Ice.AsyncResult __result)
        throws NoteException;

    public String updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark)
        throws NoteException;

    public String updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark);

    public Ice.AsyncResult begin_updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, Callback_Gm_updateCDK __cb);

    public Ice.AsyncResult begin_updateCDK(String name, String category, int number, int[] channels, int[] servers, int minLevel, int maxLevel, String factionName, int chargeMoney, String beginTime, String endTime, String remark, java.util.Map<String, String> __ctx, Callback_Gm_updateCDK __cb);

    public String end_updateCDK(Ice.AsyncResult __result)
        throws NoteException;

    public String loadCDK(String category)
        throws NoteException;

    public String loadCDK(String category, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_loadCDK(String category);

    public Ice.AsyncResult begin_loadCDK(String category, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_loadCDK(String category, Ice.Callback __cb);

    public Ice.AsyncResult begin_loadCDK(String category, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_loadCDK(String category, Callback_Gm_loadCDK __cb);

    public Ice.AsyncResult begin_loadCDK(String category, java.util.Map<String, String> __ctx, Callback_Gm_loadCDK __cb);

    public String end_loadCDK(Ice.AsyncResult __result)
        throws NoteException;

    public void deleteCDK(String category)
        throws NoteException;

    public void deleteCDK(String category, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_deleteCDK(String category);

    public Ice.AsyncResult begin_deleteCDK(String category, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteCDK(String category, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteCDK(String category, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteCDK(String category, Callback_Gm_deleteCDK __cb);

    public Ice.AsyncResult begin_deleteCDK(String category, java.util.Map<String, String> __ctx, Callback_Gm_deleteCDK __cb);

    public void end_deleteCDK(Ice.AsyncResult __result)
        throws NoteException;

    public void sendAnnounce(int serverId, String content)
        throws NoteException;

    public void sendAnnounce(int serverId, String content, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_sendAnnounce(int serverId, String content);

    public Ice.AsyncResult begin_sendAnnounce(int serverId, String content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendAnnounce(int serverId, String content, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendAnnounce(int serverId, String content, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendAnnounce(int serverId, String content, Callback_Gm_sendAnnounce __cb);

    public Ice.AsyncResult begin_sendAnnounce(int serverId, String content, java.util.Map<String, String> __ctx, Callback_Gm_sendAnnounce __cb);

    public void end_sendAnnounce(Ice.AsyncResult __result)
        throws NoteException;

    public void kickRole(int serverId, String account, String roleId)
        throws NoteException;

    public void kickRole(int serverId, String account, String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_kickRole(int serverId, String account, String roleId);

    public Ice.AsyncResult begin_kickRole(int serverId, String account, String roleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kickRole(int serverId, String account, String roleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_kickRole(int serverId, String account, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_kickRole(int serverId, String account, String roleId, Callback_Gm_kickRole __cb);

    public Ice.AsyncResult begin_kickRole(int serverId, String account, String roleId, java.util.Map<String, String> __ctx, Callback_Gm_kickRole __cb);

    public void end_kickRole(Ice.AsyncResult __result)
        throws NoteException;

    public void fobidenChat(int serverId, String roleId, String releaseTime)
        throws NoteException;

    public void fobidenChat(int serverId, String roleId, String releaseTime, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_fobidenChat(int serverId, String roleId, String releaseTime);

    public Ice.AsyncResult begin_fobidenChat(int serverId, String roleId, String releaseTime, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_fobidenChat(int serverId, String roleId, String releaseTime, Ice.Callback __cb);

    public Ice.AsyncResult begin_fobidenChat(int serverId, String roleId, String releaseTime, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_fobidenChat(int serverId, String roleId, String releaseTime, Callback_Gm_fobidenChat __cb);

    public Ice.AsyncResult begin_fobidenChat(int serverId, String roleId, String releaseTime, java.util.Map<String, String> __ctx, Callback_Gm_fobidenChat __cb);

    public void end_fobidenChat(Ice.AsyncResult __result)
        throws NoteException;

    public void forzenAccount(String account, String releaseTime)
        throws NoteException;

    public void forzenAccount(String account, String releaseTime, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_forzenAccount(String account, String releaseTime);

    public Ice.AsyncResult begin_forzenAccount(String account, String releaseTime, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_forzenAccount(String account, String releaseTime, Ice.Callback __cb);

    public Ice.AsyncResult begin_forzenAccount(String account, String releaseTime, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_forzenAccount(String account, String releaseTime, Callback_Gm_forzenAccount __cb);

    public Ice.AsyncResult begin_forzenAccount(String account, String releaseTime, java.util.Map<String, String> __ctx, Callback_Gm_forzenAccount __cb);

    public void end_forzenAccount(Ice.AsyncResult __result)
        throws NoteException;

    public void unforzenAccount(String account)
        throws NoteException;

    public void unforzenAccount(String account, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_unforzenAccount(String account);

    public Ice.AsyncResult begin_unforzenAccount(String account, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_unforzenAccount(String account, Ice.Callback __cb);

    public Ice.AsyncResult begin_unforzenAccount(String account, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_unforzenAccount(String account, Callback_Gm_unforzenAccount __cb);

    public Ice.AsyncResult begin_unforzenAccount(String account, java.util.Map<String, String> __ctx, Callback_Gm_unforzenAccount __cb);

    public void end_unforzenAccount(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     **/
    public GmFactionView[] getFactionList(int serverId, String factionName)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmFactionView[] getFactionList(int serverId, String factionName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 查找公会列表，通过factionName模糊查找
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int serverId, String factionName);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int serverId, String factionName, java.util.Map<String, String> __ctx);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int serverId, String factionName, Ice.Callback __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int serverId, String factionName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int serverId, String factionName, Callback_Gm_getFactionList __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionList(int serverId, String factionName, java.util.Map<String, String> __ctx, Callback_Gm_getFactionList __cb);

    /**
     * 查找公会列表，通过factionName模糊查找
     * @param __result The asynchronous result object.
     **/
    public GmFactionView[] end_getFactionList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取公会所有成员
     **/
    public GmFactionMemberView[] getFactionMemberList(int serverId, String factionName)
        throws NoteException;

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmFactionMemberView[] getFactionMemberList(int serverId, String factionName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取公会所有成员
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(int serverId, String factionName);

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(int serverId, String factionName, java.util.Map<String, String> __ctx);

    /**
     * 获取公会所有成员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(int serverId, String factionName, Ice.Callback __cb);

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(int serverId, String factionName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取公会所有成员
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(int serverId, String factionName, Callback_Gm_getFactionMemberList __cb);

    /**
     * 获取公会所有成员
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFactionMemberList(int serverId, String factionName, java.util.Map<String, String> __ctx, Callback_Gm_getFactionMemberList __cb);

    /**
     * 获取公会所有成员
     * @param __result The asynchronous result object.
     **/
    public GmFactionMemberView[] end_getFactionMemberList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     **/
    public GmRankView[] getRankList(int serverId, int type)
        throws NoteException;

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmRankView[] getRankList(int serverId, int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int serverId, int type);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int serverId, int type, java.util.Map<String, String> __ctx);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int serverId, int type, Ice.Callback __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int serverId, int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int serverId, int type, Callback_Gm_getRankList __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRankList(int serverId, int type, java.util.Map<String, String> __ctx, Callback_Gm_getRankList __cb);

    /**
     * 获取排行榜 type-0部队 1-公会 2-大神
     * @param __result The asynchronous result object.
     **/
    public GmRankView[] end_getRankList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 充值记录查询
     **/
    public GmPayView getPayLog(int serverId, String roleName)
        throws NoteException;

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     **/
    public GmPayView getPayLog(int serverId, String roleName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 充值记录查询
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(int serverId, String roleName);

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(int serverId, String roleName, java.util.Map<String, String> __ctx);

    /**
     * 充值记录查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(int serverId, String roleName, Ice.Callback __cb);

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(int serverId, String roleName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 充值记录查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(int serverId, String roleName, Callback_Gm_getPayLog __cb);

    /**
     * 充值记录查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getPayLog(int serverId, String roleName, java.util.Map<String, String> __ctx, Callback_Gm_getPayLog __cb);

    /**
     * 充值记录查询
     * @param __result The asynchronous result object.
     **/
    public GmPayView end_getPayLog(Ice.AsyncResult __result)
        throws NoteException;

    public void mockCharge(String account, String roleId, int channelId, int serverId, int cent)
        throws NoteException;

    public void mockCharge(String account, String roleId, int channelId, int serverId, int cent, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_mockCharge(String account, String roleId, int channelId, int serverId, int cent);

    public Ice.AsyncResult begin_mockCharge(String account, String roleId, int channelId, int serverId, int cent, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_mockCharge(String account, String roleId, int channelId, int serverId, int cent, Ice.Callback __cb);

    public Ice.AsyncResult begin_mockCharge(String account, String roleId, int channelId, int serverId, int cent, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_mockCharge(String account, String roleId, int channelId, int serverId, int cent, Callback_Gm_mockCharge __cb);

    public Ice.AsyncResult begin_mockCharge(String account, String roleId, int channelId, int serverId, int cent, java.util.Map<String, String> __ctx, Callback_Gm_mockCharge __cb);

    public void end_mockCharge(Ice.AsyncResult __result)
        throws NoteException;

    public void editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId)
        throws NoteException;

    public void editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId);

    public Ice.AsyncResult begin_editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId, Ice.Callback __cb);

    public Ice.AsyncResult begin_editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId, Callback_Gm_editGameServer __cb);

    public Ice.AsyncResult begin_editGameServer(int id, String name, int showId, String gateIp, boolean isNew, boolean cpShowOnly, boolean cpEnterOnly, int onlineLimit, int targetId, java.util.Map<String, String> __ctx, Callback_Gm_editGameServer __cb);

    public void end_editGameServer(Ice.AsyncResult __result)
        throws NoteException;

    public void editChannel(int id, String name, String orderUrl)
        throws NoteException;

    public void editChannel(int id, String name, String orderUrl, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_editChannel(int id, String name, String orderUrl);

    public Ice.AsyncResult begin_editChannel(int id, String name, String orderUrl, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_editChannel(int id, String name, String orderUrl, Ice.Callback __cb);

    public Ice.AsyncResult begin_editChannel(int id, String name, String orderUrl, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_editChannel(int id, String name, String orderUrl, Callback_Gm_editChannel __cb);

    public Ice.AsyncResult begin_editChannel(int id, String name, String orderUrl, java.util.Map<String, String> __ctx, Callback_Gm_editChannel __cb);

    public void end_editChannel(Ice.AsyncResult __result)
        throws NoteException;

    public void uploadLoginAnnounce(byte[] file)
        throws NoteException;

    public void uploadLoginAnnounce(byte[] file, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_uploadLoginAnnounce(byte[] file);

    public Ice.AsyncResult begin_uploadLoginAnnounce(byte[] file, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_uploadLoginAnnounce(byte[] file, Ice.Callback __cb);

    public Ice.AsyncResult begin_uploadLoginAnnounce(byte[] file, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_uploadLoginAnnounce(byte[] file, Callback_Gm_uploadLoginAnnounce __cb);

    public Ice.AsyncResult begin_uploadLoginAnnounce(byte[] file, java.util.Map<String, String> __ctx, Callback_Gm_uploadLoginAnnounce __cb);

    public void end_uploadLoginAnnounce(Ice.AsyncResult __result)
        throws NoteException;

    public void setRecommendServer(int serverId)
        throws NoteException;

    public void setRecommendServer(int serverId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_setRecommendServer(int serverId);

    public Ice.AsyncResult begin_setRecommendServer(int serverId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setRecommendServer(int serverId, Ice.Callback __cb);

    public Ice.AsyncResult begin_setRecommendServer(int serverId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setRecommendServer(int serverId, Callback_Gm_setRecommendServer __cb);

    public Ice.AsyncResult begin_setRecommendServer(int serverId, java.util.Map<String, String> __ctx, Callback_Gm_setRecommendServer __cb);

    public void end_setRecommendServer(Ice.AsyncResult __result)
        throws NoteException;

    public WhiteList[] getCurrentWhiteList()
        throws NoteException;

    public WhiteList[] getCurrentWhiteList(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getCurrentWhiteList();

    public Ice.AsyncResult begin_getCurrentWhiteList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getCurrentWhiteList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getCurrentWhiteList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getCurrentWhiteList(Callback_Gm_getCurrentWhiteList __cb);

    public Ice.AsyncResult begin_getCurrentWhiteList(java.util.Map<String, String> __ctx, Callback_Gm_getCurrentWhiteList __cb);

    public WhiteList[] end_getCurrentWhiteList(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getCurrentWhiteList_async(AMI_Gm_getCurrentWhiteList __cb);

    public boolean getCurrentWhiteList_async(AMI_Gm_getCurrentWhiteList __cb, java.util.Map<String, String> __ctx);

    public void setWhiteList(WhiteList param)
        throws NoteException;

    public void setWhiteList(WhiteList param, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_setWhiteList(WhiteList param);

    public Ice.AsyncResult begin_setWhiteList(WhiteList param, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setWhiteList(WhiteList param, Ice.Callback __cb);

    public Ice.AsyncResult begin_setWhiteList(WhiteList param, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setWhiteList(WhiteList param, Callback_Gm_setWhiteList __cb);

    public Ice.AsyncResult begin_setWhiteList(WhiteList param, java.util.Map<String, String> __ctx, Callback_Gm_setWhiteList __cb);

    public void end_setWhiteList(Ice.AsyncResult __result)
        throws NoteException;

    public GuideConfig getGuideConfig()
        throws NoteException;

    public GuideConfig getGuideConfig(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_getGuideConfig();

    public Ice.AsyncResult begin_getGuideConfig(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getGuideConfig(Ice.Callback __cb);

    public Ice.AsyncResult begin_getGuideConfig(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getGuideConfig(Callback_Gm_getGuideConfig __cb);

    public Ice.AsyncResult begin_getGuideConfig(java.util.Map<String, String> __ctx, Callback_Gm_getGuideConfig __cb);

    public GuideConfig end_getGuideConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean getGuideConfig_async(AMI_Gm_getGuideConfig __cb);

    public boolean getGuideConfig_async(AMI_Gm_getGuideConfig __cb, java.util.Map<String, String> __ctx);

    public void setGuideConfig(GuideConfig config)
        throws NoteException;

    public void setGuideConfig(GuideConfig config, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_setGuideConfig(GuideConfig config);

    public Ice.AsyncResult begin_setGuideConfig(GuideConfig config, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setGuideConfig(GuideConfig config, Ice.Callback __cb);

    public Ice.AsyncResult begin_setGuideConfig(GuideConfig config, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setGuideConfig(GuideConfig config, Callback_Gm_setGuideConfig __cb);

    public Ice.AsyncResult begin_setGuideConfig(GuideConfig config, java.util.Map<String, String> __ctx, Callback_Gm_setGuideConfig __cb);

    public void end_setGuideConfig(Ice.AsyncResult __result)
        throws NoteException;

    public boolean setGuideConfig_async(AMI_Gm_setGuideConfig __cb, GuideConfig config);

    public boolean setGuideConfig_async(AMI_Gm_setGuideConfig __cb, GuideConfig config, java.util.Map<String, String> __ctx);

    public void reloadScript(int serverId, ScriptReloadConfig config)
        throws NoteException;

    public void reloadScript(int serverId, ScriptReloadConfig config, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_reloadScript(int serverId, ScriptReloadConfig config);

    public Ice.AsyncResult begin_reloadScript(int serverId, ScriptReloadConfig config, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reloadScript(int serverId, ScriptReloadConfig config, Ice.Callback __cb);

    public Ice.AsyncResult begin_reloadScript(int serverId, ScriptReloadConfig config, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_reloadScript(int serverId, ScriptReloadConfig config, Callback_Gm_reloadScript __cb);

    public Ice.AsyncResult begin_reloadScript(int serverId, ScriptReloadConfig config, java.util.Map<String, String> __ctx, Callback_Gm_reloadScript __cb);

    public void end_reloadScript(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 删除物品
     **/
    public String deleteItem(int serverId, String roleId, String itemId, int num);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public String deleteItem(int serverId, String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 删除物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(int serverId, String roleId, String itemId, int num);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(int serverId, String roleId, String itemId, int num, java.util.Map<String, String> __ctx);

    /**
     * 删除物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(int serverId, String roleId, String itemId, int num, Ice.Callback __cb);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(int serverId, String roleId, String itemId, int num, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 删除物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(int serverId, String roleId, String itemId, int num, Callback_Gm_deleteItem __cb);

    /**
     * 删除物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteItem(int serverId, String roleId, String itemId, int num, java.util.Map<String, String> __ctx, Callback_Gm_deleteItem __cb);

    /**
     * 删除物品
     * @param __result The asynchronous result object.
     **/
    public String end_deleteItem(Ice.AsyncResult __result);

    public void addSycee(int serverId, String roleName, int sycee)
        throws NoteException;

    public void addSycee(int serverId, String roleName, int sycee, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_addSycee(int serverId, String roleName, int sycee);

    public Ice.AsyncResult begin_addSycee(int serverId, String roleName, int sycee, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addSycee(int serverId, String roleName, int sycee, Ice.Callback __cb);

    public Ice.AsyncResult begin_addSycee(int serverId, String roleName, int sycee, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addSycee(int serverId, String roleName, int sycee, Callback_Gm_addSycee __cb);

    public Ice.AsyncResult begin_addSycee(int serverId, String roleName, int sycee, java.util.Map<String, String> __ctx, Callback_Gm_addSycee __cb);

    public void end_addSycee(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 添加vip经验
     **/
    public void addVipExp(int serverId, String roleName, int exp)
        throws NoteException;

    /**
     * 添加vip经验
     * @param __ctx The Context map to send with the invocation.
     **/
    public void addVipExp(int serverId, String roleName, int exp, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 添加vip经验
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addVipExp(int serverId, String roleName, int exp);

    /**
     * 添加vip经验
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addVipExp(int serverId, String roleName, int exp, java.util.Map<String, String> __ctx);

    /**
     * 添加vip经验
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addVipExp(int serverId, String roleName, int exp, Ice.Callback __cb);

    /**
     * 添加vip经验
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addVipExp(int serverId, String roleName, int exp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 添加vip经验
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addVipExp(int serverId, String roleName, int exp, Callback_Gm_addVipExp __cb);

    /**
     * 添加vip经验
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addVipExp(int serverId, String roleName, int exp, java.util.Map<String, String> __ctx, Callback_Gm_addVipExp __cb);

    /**
     * 添加vip经验
     * @param __result The asynchronous result object.
     **/
    public void end_addVipExp(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 调整指定难度副本到指定关卡
     **/
    public void skipCopy(int serverId, String roleId, int diff, int copyId)
        throws NoteException;

    /**
     * 调整指定难度副本到指定关卡
     * @param __ctx The Context map to send with the invocation.
     **/
    public void skipCopy(int serverId, String roleId, int diff, int copyId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 调整指定难度副本到指定关卡
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_skipCopy(int serverId, String roleId, int diff, int copyId);

    /**
     * 调整指定难度副本到指定关卡
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_skipCopy(int serverId, String roleId, int diff, int copyId, java.util.Map<String, String> __ctx);

    /**
     * 调整指定难度副本到指定关卡
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_skipCopy(int serverId, String roleId, int diff, int copyId, Ice.Callback __cb);

    /**
     * 调整指定难度副本到指定关卡
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_skipCopy(int serverId, String roleId, int diff, int copyId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 调整指定难度副本到指定关卡
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_skipCopy(int serverId, String roleId, int diff, int copyId, Callback_Gm_skipCopy __cb);

    /**
     * 调整指定难度副本到指定关卡
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_skipCopy(int serverId, String roleId, int diff, int copyId, java.util.Map<String, String> __ctx, Callback_Gm_skipCopy __cb);

    /**
     * 调整指定难度副本到指定关卡
     * @param __result The asynchronous result object.
     **/
    public void end_skipCopy(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     **/
    public void addWheelCount(int serverId, String roleId, int count, int wheelType)
        throws NoteException;

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __ctx The Context map to send with the invocation.
     **/
    public void addWheelCount(int serverId, String roleId, int count, int wheelType, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addWheelCount(int serverId, String roleId, int count, int wheelType);

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addWheelCount(int serverId, String roleId, int count, int wheelType, java.util.Map<String, String> __ctx);

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addWheelCount(int serverId, String roleId, int count, int wheelType, Ice.Callback __cb);

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addWheelCount(int serverId, String roleId, int count, int wheelType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addWheelCount(int serverId, String roleId, int count, int wheelType, Callback_Gm_addWheelCount __cb);

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addWheelCount(int serverId, String roleId, int count, int wheelType, java.util.Map<String, String> __ctx, Callback_Gm_addWheelCount __cb);

    /**
     * 增加大转盘次数 wheelType=0幸运转盘 1豪华转盘
     * @param __result The asynchronous result object.
     **/
    public void end_addWheelCount(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 下载角色二进制数据存档
     **/
    public byte[] download(int serverId, String roleId)
        throws NoteException;

    /**
     * 下载角色二进制数据存档
     * @param __ctx The Context map to send with the invocation.
     **/
    public byte[] download(int serverId, String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 下载角色二进制数据存档
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_download(int serverId, String roleId);

    /**
     * 下载角色二进制数据存档
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_download(int serverId, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 下载角色二进制数据存档
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_download(int serverId, String roleId, Ice.Callback __cb);

    /**
     * 下载角色二进制数据存档
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_download(int serverId, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 下载角色二进制数据存档
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_download(int serverId, String roleId, Callback_Gm_download __cb);

    /**
     * 下载角色二进制数据存档
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_download(int serverId, String roleId, java.util.Map<String, String> __ctx, Callback_Gm_download __cb);

    /**
     * 下载角色二进制数据存档
     * @param __result The asynchronous result object.
     **/
    public byte[] end_download(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 导入role数据
     **/
    public void importRole(int serverId, byte[] data, String roleId)
        throws NoteException;

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     **/
    public void importRole(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 导入role数据
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importRole(int serverId, byte[] data, String roleId);

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importRole(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx);

    /**
     * 导入role数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importRole(int serverId, byte[] data, String roleId, Ice.Callback __cb);

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importRole(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 导入role数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importRole(int serverId, byte[] data, String roleId, Callback_Gm_importRole __cb);

    /**
     * 导入role数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importRole(int serverId, byte[] data, String roleId, java.util.Map<String, String> __ctx, Callback_Gm_importRole __cb);

    /**
     * 导入role数据
     * @param __result The asynchronous result object.
     **/
    public void end_importRole(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 根据roleName模糊查询
     **/
    public String findFuzzyRoleViewList(int serverId, String accountName, String roleName)
        throws NoteException;

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     **/
    public String findFuzzyRoleViewList(int serverId, String accountName, String roleName, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 根据roleName模糊查询
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFuzzyRoleViewList(int serverId, String accountName, String roleName);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFuzzyRoleViewList(int serverId, String accountName, String roleName, java.util.Map<String, String> __ctx);

    /**
     * 根据roleName模糊查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFuzzyRoleViewList(int serverId, String accountName, String roleName, Ice.Callback __cb);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFuzzyRoleViewList(int serverId, String accountName, String roleName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据roleName模糊查询
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFuzzyRoleViewList(int serverId, String accountName, String roleName, Callback_Gm_findFuzzyRoleViewList __cb);

    /**
     * 根据roleName模糊查询
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_findFuzzyRoleViewList(int serverId, String accountName, String roleName, java.util.Map<String, String> __ctx, Callback_Gm_findFuzzyRoleViewList __cb);

    /**
     * 根据roleName模糊查询
     * @param __result The asynchronous result object.
     **/
    public String end_findFuzzyRoleViewList(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 根据CDK查询具体信息
     **/
    public String queryCdkByCDK(int serverId, String cdk)
        throws NoteException;

    /**
     * 根据CDK查询具体信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String queryCdkByCDK(int serverId, String cdk, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 根据CDK查询具体信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryCdkByCDK(int serverId, String cdk);

    /**
     * 根据CDK查询具体信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryCdkByCDK(int serverId, String cdk, java.util.Map<String, String> __ctx);

    /**
     * 根据CDK查询具体信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryCdkByCDK(int serverId, String cdk, Ice.Callback __cb);

    /**
     * 根据CDK查询具体信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryCdkByCDK(int serverId, String cdk, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据CDK查询具体信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryCdkByCDK(int serverId, String cdk, Callback_Gm_queryCdkByCDK __cb);

    /**
     * 根据CDK查询具体信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryCdkByCDK(int serverId, String cdk, java.util.Map<String, String> __ctx, Callback_Gm_queryCdkByCDK __cb);

    /**
     * 根据CDK查询具体信息
     * @param __result The asynchronous result object.
     **/
    public String end_queryCdkByCDK(Ice.AsyncResult __result)
        throws NoteException;
}
