// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class GridInfoSub implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public int type;

    public int lotteryType;

    public IntString item;

    public GridInfoSub()
    {
    }

    public GridInfoSub(int id, int type, int lotteryType, IntString item)
    {
        this.id = id;
        this.type = type;
        this.lotteryType = lotteryType;
        this.item = item;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        GridInfoSub _r = null;
        if(rhs instanceof GridInfoSub)
        {
            _r = (GridInfoSub)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(type != _r.type)
            {
                return false;
            }
            if(lotteryType != _r.lotteryType)
            {
                return false;
            }
            if(item != _r.item)
            {
                if(item == null || _r.item == null || !item.equals(_r.item))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::GridInfoSub");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, lotteryType);
        __h = IceInternal.HashUtil.hashAdd(__h, item);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeInt(type);
        __os.writeInt(lotteryType);
        item.__write(__os);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        type = __is.readInt();
        lotteryType = __is.readInt();
        item = new IntString();
        item.__read(__is);
    }

    public static final long serialVersionUID = -33492457L;
}
