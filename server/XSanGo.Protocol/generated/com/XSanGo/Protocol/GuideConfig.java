// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Center.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class GuideConfig implements java.lang.Cloneable, java.io.Serializable
{
    public boolean enable;

    public int[] channelIds;

    public String beginTime;

    public String endTime;

    public int[] targetServers;

    public GuideConfig()
    {
    }

    public GuideConfig(boolean enable, int[] channelIds, String beginTime, String endTime, int[] targetServers)
    {
        this.enable = enable;
        this.channelIds = channelIds;
        this.beginTime = beginTime;
        this.endTime = endTime;
        this.targetServers = targetServers;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        GuideConfig _r = null;
        if(rhs instanceof GuideConfig)
        {
            _r = (GuideConfig)rhs;
        }

        if(_r != null)
        {
            if(enable != _r.enable)
            {
                return false;
            }
            if(!java.util.Arrays.equals(channelIds, _r.channelIds))
            {
                return false;
            }
            if(beginTime != _r.beginTime)
            {
                if(beginTime == null || _r.beginTime == null || !beginTime.equals(_r.beginTime))
                {
                    return false;
                }
            }
            if(endTime != _r.endTime)
            {
                if(endTime == null || _r.endTime == null || !endTime.equals(_r.endTime))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(targetServers, _r.targetServers))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::GuideConfig");
        __h = IceInternal.HashUtil.hashAdd(__h, enable);
        __h = IceInternal.HashUtil.hashAdd(__h, channelIds);
        __h = IceInternal.HashUtil.hashAdd(__h, beginTime);
        __h = IceInternal.HashUtil.hashAdd(__h, endTime);
        __h = IceInternal.HashUtil.hashAdd(__h, targetServers);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeBool(enable);
        IntSeqHelper.write(__os, channelIds);
        __os.writeString(beginTime);
        __os.writeString(endTime);
        IntSeqHelper.write(__os, targetServers);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        enable = __is.readBool();
        channelIds = IntSeqHelper.read(__is);
        beginTime = __is.readString();
        endTime = __is.readString();
        targetServers = IntSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -972902348L;
}
