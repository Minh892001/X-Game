// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Trader.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class HeroCallResult implements java.lang.Cloneable, java.io.Serializable
{
    public CurrencyType callType;

    public int heroId;

    public String rankTitle;

    public int colorLevel;

    public byte star;

    public boolean challengeSuccess;

    public int remainChance;

    public boolean hasGift;

    public CommodityView[] heroCommodities;

    public boolean challengeEnd;

    public HeroCallResult()
    {
    }

    public HeroCallResult(CurrencyType callType, int heroId, String rankTitle, int colorLevel, byte star, boolean challengeSuccess, int remainChance, boolean hasGift, CommodityView[] heroCommodities, boolean challengeEnd)
    {
        this.callType = callType;
        this.heroId = heroId;
        this.rankTitle = rankTitle;
        this.colorLevel = colorLevel;
        this.star = star;
        this.challengeSuccess = challengeSuccess;
        this.remainChance = remainChance;
        this.hasGift = hasGift;
        this.heroCommodities = heroCommodities;
        this.challengeEnd = challengeEnd;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        HeroCallResult _r = null;
        if(rhs instanceof HeroCallResult)
        {
            _r = (HeroCallResult)rhs;
        }

        if(_r != null)
        {
            if(callType != _r.callType)
            {
                if(callType == null || _r.callType == null || !callType.equals(_r.callType))
                {
                    return false;
                }
            }
            if(heroId != _r.heroId)
            {
                return false;
            }
            if(rankTitle != _r.rankTitle)
            {
                if(rankTitle == null || _r.rankTitle == null || !rankTitle.equals(_r.rankTitle))
                {
                    return false;
                }
            }
            if(colorLevel != _r.colorLevel)
            {
                return false;
            }
            if(star != _r.star)
            {
                return false;
            }
            if(challengeSuccess != _r.challengeSuccess)
            {
                return false;
            }
            if(remainChance != _r.remainChance)
            {
                return false;
            }
            if(hasGift != _r.hasGift)
            {
                return false;
            }
            if(!java.util.Arrays.equals(heroCommodities, _r.heroCommodities))
            {
                return false;
            }
            if(challengeEnd != _r.challengeEnd)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::HeroCallResult");
        __h = IceInternal.HashUtil.hashAdd(__h, callType);
        __h = IceInternal.HashUtil.hashAdd(__h, heroId);
        __h = IceInternal.HashUtil.hashAdd(__h, rankTitle);
        __h = IceInternal.HashUtil.hashAdd(__h, colorLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, star);
        __h = IceInternal.HashUtil.hashAdd(__h, challengeSuccess);
        __h = IceInternal.HashUtil.hashAdd(__h, remainChance);
        __h = IceInternal.HashUtil.hashAdd(__h, hasGift);
        __h = IceInternal.HashUtil.hashAdd(__h, heroCommodities);
        __h = IceInternal.HashUtil.hashAdd(__h, challengeEnd);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        callType.__write(__os);
        __os.writeInt(heroId);
        __os.writeString(rankTitle);
        __os.writeInt(colorLevel);
        __os.writeByte(star);
        __os.writeBool(challengeSuccess);
        __os.writeInt(remainChance);
        __os.writeBool(hasGift);
        CommodityViewSeqHelper.write(__os, heroCommodities);
        __os.writeBool(challengeEnd);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        callType = CurrencyType.__read(__is);
        heroId = __is.readInt();
        rankTitle = __is.readString();
        colorLevel = __is.readInt();
        star = __is.readByte();
        challengeSuccess = __is.readBool();
        remainChance = __is.readInt();
        hasGift = __is.readBool();
        heroCommodities = CommodityViewSeqHelper.read(__is);
        challengeEnd = __is.readBool();
    }

    public static final long serialVersionUID = 1059765604L;
}
