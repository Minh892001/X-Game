// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Role.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class HeroEquipView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public String itemId;

    public int level;

    public int star;

    public int starExp;

    public float grow1;

    public float grow2;

    public String gemNames;

    public HeroEquipView()
    {
    }

    public HeroEquipView(String id, String itemId, int level, int star, int starExp, float grow1, float grow2, String gemNames)
    {
        this.id = id;
        this.itemId = itemId;
        this.level = level;
        this.star = star;
        this.starExp = starExp;
        this.grow1 = grow1;
        this.grow2 = grow2;
        this.gemNames = gemNames;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        HeroEquipView _r = null;
        if(rhs instanceof HeroEquipView)
        {
            _r = (HeroEquipView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(itemId != _r.itemId)
            {
                if(itemId == null || _r.itemId == null || !itemId.equals(_r.itemId))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(star != _r.star)
            {
                return false;
            }
            if(starExp != _r.starExp)
            {
                return false;
            }
            if(grow1 != _r.grow1)
            {
                return false;
            }
            if(grow2 != _r.grow2)
            {
                return false;
            }
            if(gemNames != _r.gemNames)
            {
                if(gemNames == null || _r.gemNames == null || !gemNames.equals(_r.gemNames))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::HeroEquipView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, itemId);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, star);
        __h = IceInternal.HashUtil.hashAdd(__h, starExp);
        __h = IceInternal.HashUtil.hashAdd(__h, grow1);
        __h = IceInternal.HashUtil.hashAdd(__h, grow2);
        __h = IceInternal.HashUtil.hashAdd(__h, gemNames);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeString(itemId);
        __os.writeInt(level);
        __os.writeInt(star);
        __os.writeInt(starExp);
        __os.writeFloat(grow1);
        __os.writeFloat(grow2);
        __os.writeString(gemNames);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        itemId = __is.readString();
        level = __is.readInt();
        star = __is.readInt();
        starExp = __is.readInt();
        grow1 = __is.readFloat();
        grow2 = __is.readFloat();
        gemNames = __is.readString();
    }

    public static final long serialVersionUID = 1921824643L;
}
