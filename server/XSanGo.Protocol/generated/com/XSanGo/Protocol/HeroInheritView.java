// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ItemChip.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class HeroInheritView implements java.lang.Cloneable, java.io.Serializable
{
    public String consumeTemplateId;

    public int consumeNum;

    public int maxLevel;

    public HeroInheritView()
    {
    }

    public HeroInheritView(String consumeTemplateId, int consumeNum, int maxLevel)
    {
        this.consumeTemplateId = consumeTemplateId;
        this.consumeNum = consumeNum;
        this.maxLevel = maxLevel;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        HeroInheritView _r = null;
        if(rhs instanceof HeroInheritView)
        {
            _r = (HeroInheritView)rhs;
        }

        if(_r != null)
        {
            if(consumeTemplateId != _r.consumeTemplateId)
            {
                if(consumeTemplateId == null || _r.consumeTemplateId == null || !consumeTemplateId.equals(_r.consumeTemplateId))
                {
                    return false;
                }
            }
            if(consumeNum != _r.consumeNum)
            {
                return false;
            }
            if(maxLevel != _r.maxLevel)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::HeroInheritView");
        __h = IceInternal.HashUtil.hashAdd(__h, consumeTemplateId);
        __h = IceInternal.HashUtil.hashAdd(__h, consumeNum);
        __h = IceInternal.HashUtil.hashAdd(__h, maxLevel);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(consumeTemplateId);
        __os.writeInt(consumeNum);
        __os.writeInt(maxLevel);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        consumeTemplateId = __is.readString();
        consumeNum = __is.readInt();
        maxLevel = __is.readInt();
    }

    public static final long serialVersionUID = 431607878L;
}
