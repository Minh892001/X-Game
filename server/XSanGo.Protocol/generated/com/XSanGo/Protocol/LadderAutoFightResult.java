// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Ladder.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 自动战斗结果
 **/
public class LadderAutoFightResult implements java.lang.Cloneable, java.io.Serializable
{
    public String winRoleId;

    public SceneDuelView[] soloMovie;

    public byte[] fightMovie;

    public int winType;

    public int fightStar;

    public int ladderChangerLevel;

    public int ladderChangerStar;

    public int ladderScore;

    public String movieId;

    public String enemyRoleName;

    public int enemyRoleVip;

    public LadderAutoFightResult()
    {
    }

    public LadderAutoFightResult(String winRoleId, SceneDuelView[] soloMovie, byte[] fightMovie, int winType, int fightStar, int ladderChangerLevel, int ladderChangerStar, int ladderScore, String movieId, String enemyRoleName, int enemyRoleVip)
    {
        this.winRoleId = winRoleId;
        this.soloMovie = soloMovie;
        this.fightMovie = fightMovie;
        this.winType = winType;
        this.fightStar = fightStar;
        this.ladderChangerLevel = ladderChangerLevel;
        this.ladderChangerStar = ladderChangerStar;
        this.ladderScore = ladderScore;
        this.movieId = movieId;
        this.enemyRoleName = enemyRoleName;
        this.enemyRoleVip = enemyRoleVip;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LadderAutoFightResult _r = null;
        if(rhs instanceof LadderAutoFightResult)
        {
            _r = (LadderAutoFightResult)rhs;
        }

        if(_r != null)
        {
            if(winRoleId != _r.winRoleId)
            {
                if(winRoleId == null || _r.winRoleId == null || !winRoleId.equals(_r.winRoleId))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(soloMovie, _r.soloMovie))
            {
                return false;
            }
            if(!java.util.Arrays.equals(fightMovie, _r.fightMovie))
            {
                return false;
            }
            if(winType != _r.winType)
            {
                return false;
            }
            if(fightStar != _r.fightStar)
            {
                return false;
            }
            if(ladderChangerLevel != _r.ladderChangerLevel)
            {
                return false;
            }
            if(ladderChangerStar != _r.ladderChangerStar)
            {
                return false;
            }
            if(ladderScore != _r.ladderScore)
            {
                return false;
            }
            if(movieId != _r.movieId)
            {
                if(movieId == null || _r.movieId == null || !movieId.equals(_r.movieId))
                {
                    return false;
                }
            }
            if(enemyRoleName != _r.enemyRoleName)
            {
                if(enemyRoleName == null || _r.enemyRoleName == null || !enemyRoleName.equals(_r.enemyRoleName))
                {
                    return false;
                }
            }
            if(enemyRoleVip != _r.enemyRoleVip)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::LadderAutoFightResult");
        __h = IceInternal.HashUtil.hashAdd(__h, winRoleId);
        __h = IceInternal.HashUtil.hashAdd(__h, soloMovie);
        __h = IceInternal.HashUtil.hashAdd(__h, fightMovie);
        __h = IceInternal.HashUtil.hashAdd(__h, winType);
        __h = IceInternal.HashUtil.hashAdd(__h, fightStar);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderChangerLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderChangerStar);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderScore);
        __h = IceInternal.HashUtil.hashAdd(__h, movieId);
        __h = IceInternal.HashUtil.hashAdd(__h, enemyRoleName);
        __h = IceInternal.HashUtil.hashAdd(__h, enemyRoleVip);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(winRoleId);
        SceneDuelViewSeqHelper.write(__os, soloMovie);
        ByteSeqHelper.write(__os, fightMovie);
        __os.writeInt(winType);
        __os.writeInt(fightStar);
        __os.writeInt(ladderChangerLevel);
        __os.writeInt(ladderChangerStar);
        __os.writeInt(ladderScore);
        __os.writeString(movieId);
        __os.writeString(enemyRoleName);
        __os.writeInt(enemyRoleVip);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        winRoleId = __is.readString();
        soloMovie = SceneDuelViewSeqHelper.read(__is);
        fightMovie = ByteSeqHelper.read(__is);
        winType = __is.readInt();
        fightStar = __is.readInt();
        ladderChangerLevel = __is.readInt();
        ladderChangerStar = __is.readInt();
        ladderScore = __is.readInt();
        movieId = __is.readString();
        enemyRoleName = __is.readString();
        enemyRoleVip = __is.readInt();
    }

    public static final long serialVersionUID = 1633217016L;
}
