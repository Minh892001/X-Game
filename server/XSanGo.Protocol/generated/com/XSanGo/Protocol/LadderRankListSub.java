// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Ladder.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class LadderRankListSub implements java.lang.Cloneable, java.io.Serializable
{
    public int rank;

    public String roleId;

    public String roleName;

    public String icon;

    public int level;

    public int ladderLevel;

    public int ladderStar;

    public int ladderScore;

    public int vipLevel;

    public String groupName;

    public long rankTime;

    public LadderRankListSub()
    {
    }

    public LadderRankListSub(int rank, String roleId, String roleName, String icon, int level, int ladderLevel, int ladderStar, int ladderScore, int vipLevel, String groupName, long rankTime)
    {
        this.rank = rank;
        this.roleId = roleId;
        this.roleName = roleName;
        this.icon = icon;
        this.level = level;
        this.ladderLevel = ladderLevel;
        this.ladderStar = ladderStar;
        this.ladderScore = ladderScore;
        this.vipLevel = vipLevel;
        this.groupName = groupName;
        this.rankTime = rankTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LadderRankListSub _r = null;
        if(rhs instanceof LadderRankListSub)
        {
            _r = (LadderRankListSub)rhs;
        }

        if(_r != null)
        {
            if(rank != _r.rank)
            {
                return false;
            }
            if(roleId != _r.roleId)
            {
                if(roleId == null || _r.roleId == null || !roleId.equals(_r.roleId))
                {
                    return false;
                }
            }
            if(roleName != _r.roleName)
            {
                if(roleName == null || _r.roleName == null || !roleName.equals(_r.roleName))
                {
                    return false;
                }
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(ladderLevel != _r.ladderLevel)
            {
                return false;
            }
            if(ladderStar != _r.ladderStar)
            {
                return false;
            }
            if(ladderScore != _r.ladderScore)
            {
                return false;
            }
            if(vipLevel != _r.vipLevel)
            {
                return false;
            }
            if(groupName != _r.groupName)
            {
                if(groupName == null || _r.groupName == null || !groupName.equals(_r.groupName))
                {
                    return false;
                }
            }
            if(rankTime != _r.rankTime)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::LadderRankListSub");
        __h = IceInternal.HashUtil.hashAdd(__h, rank);
        __h = IceInternal.HashUtil.hashAdd(__h, roleId);
        __h = IceInternal.HashUtil.hashAdd(__h, roleName);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderStar);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderScore);
        __h = IceInternal.HashUtil.hashAdd(__h, vipLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, groupName);
        __h = IceInternal.HashUtil.hashAdd(__h, rankTime);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(rank);
        __os.writeString(roleId);
        __os.writeString(roleName);
        __os.writeString(icon);
        __os.writeInt(level);
        __os.writeInt(ladderLevel);
        __os.writeInt(ladderStar);
        __os.writeInt(ladderScore);
        __os.writeInt(vipLevel);
        __os.writeString(groupName);
        __os.writeLong(rankTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        rank = __is.readInt();
        roleId = __is.readString();
        roleName = __is.readString();
        icon = __is.readString();
        level = __is.readInt();
        ladderLevel = __is.readInt();
        ladderStar = __is.readInt();
        ladderScore = __is.readInt();
        vipLevel = __is.readInt();
        groupName = __is.readString();
        rankTime = __is.readLong();
    }

    public static final long serialVersionUID = 1956777422L;
}
