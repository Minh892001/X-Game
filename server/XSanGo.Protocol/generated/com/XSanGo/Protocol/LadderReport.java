// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Ladder.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class LadderReport implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public String name;

    public String icon;

    public int vipLevel;

    public int ladderLevel;

    public int levelChange;

    public int starChange;

    public int state;

    public long reportTime;

    public String movieId;

    public int combat;

    public int level;

    public LadderReport()
    {
    }

    public LadderReport(String id, String name, String icon, int vipLevel, int ladderLevel, int levelChange, int starChange, int state, long reportTime, String movieId, int combat, int level)
    {
        this.id = id;
        this.name = name;
        this.icon = icon;
        this.vipLevel = vipLevel;
        this.ladderLevel = ladderLevel;
        this.levelChange = levelChange;
        this.starChange = starChange;
        this.state = state;
        this.reportTime = reportTime;
        this.movieId = movieId;
        this.combat = combat;
        this.level = level;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LadderReport _r = null;
        if(rhs instanceof LadderReport)
        {
            _r = (LadderReport)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }
            if(vipLevel != _r.vipLevel)
            {
                return false;
            }
            if(ladderLevel != _r.ladderLevel)
            {
                return false;
            }
            if(levelChange != _r.levelChange)
            {
                return false;
            }
            if(starChange != _r.starChange)
            {
                return false;
            }
            if(state != _r.state)
            {
                return false;
            }
            if(reportTime != _r.reportTime)
            {
                return false;
            }
            if(movieId != _r.movieId)
            {
                if(movieId == null || _r.movieId == null || !movieId.equals(_r.movieId))
                {
                    return false;
                }
            }
            if(combat != _r.combat)
            {
                return false;
            }
            if(level != _r.level)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::LadderReport");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        __h = IceInternal.HashUtil.hashAdd(__h, vipLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, ladderLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, levelChange);
        __h = IceInternal.HashUtil.hashAdd(__h, starChange);
        __h = IceInternal.HashUtil.hashAdd(__h, state);
        __h = IceInternal.HashUtil.hashAdd(__h, reportTime);
        __h = IceInternal.HashUtil.hashAdd(__h, movieId);
        __h = IceInternal.HashUtil.hashAdd(__h, combat);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeString(name);
        __os.writeString(icon);
        __os.writeInt(vipLevel);
        __os.writeInt(ladderLevel);
        __os.writeInt(levelChange);
        __os.writeInt(starChange);
        __os.writeInt(state);
        __os.writeLong(reportTime);
        __os.writeString(movieId);
        __os.writeInt(combat);
        __os.writeInt(level);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        name = __is.readString();
        icon = __is.readString();
        vipLevel = __is.readInt();
        ladderLevel = __is.readInt();
        levelChange = __is.readInt();
        starChange = __is.readInt();
        state = __is.readInt();
        reportTime = __is.readLong();
        movieId = __is.readString();
        combat = __is.readInt();
        level = __is.readInt();
    }

    public static final long serialVersionUID = 982097387L;
}
