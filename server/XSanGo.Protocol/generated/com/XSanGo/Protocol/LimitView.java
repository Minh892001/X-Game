// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Market.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class LimitView implements java.lang.Cloneable, java.io.Serializable
{
    public IntString[] weekTemplateIds;

    public IntString[] todayTemplateIds;

    public int price;

    public int viplimit;

    public int freeNum;

    public String itemId;

    public int itemNum;

    public int itemVip;

    public LimitView()
    {
    }

    public LimitView(IntString[] weekTemplateIds, IntString[] todayTemplateIds, int price, int viplimit, int freeNum, String itemId, int itemNum, int itemVip)
    {
        this.weekTemplateIds = weekTemplateIds;
        this.todayTemplateIds = todayTemplateIds;
        this.price = price;
        this.viplimit = viplimit;
        this.freeNum = freeNum;
        this.itemId = itemId;
        this.itemNum = itemNum;
        this.itemVip = itemVip;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LimitView _r = null;
        if(rhs instanceof LimitView)
        {
            _r = (LimitView)rhs;
        }

        if(_r != null)
        {
            if(!java.util.Arrays.equals(weekTemplateIds, _r.weekTemplateIds))
            {
                return false;
            }
            if(!java.util.Arrays.equals(todayTemplateIds, _r.todayTemplateIds))
            {
                return false;
            }
            if(price != _r.price)
            {
                return false;
            }
            if(viplimit != _r.viplimit)
            {
                return false;
            }
            if(freeNum != _r.freeNum)
            {
                return false;
            }
            if(itemId != _r.itemId)
            {
                if(itemId == null || _r.itemId == null || !itemId.equals(_r.itemId))
                {
                    return false;
                }
            }
            if(itemNum != _r.itemNum)
            {
                return false;
            }
            if(itemVip != _r.itemVip)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::LimitView");
        __h = IceInternal.HashUtil.hashAdd(__h, weekTemplateIds);
        __h = IceInternal.HashUtil.hashAdd(__h, todayTemplateIds);
        __h = IceInternal.HashUtil.hashAdd(__h, price);
        __h = IceInternal.HashUtil.hashAdd(__h, viplimit);
        __h = IceInternal.HashUtil.hashAdd(__h, freeNum);
        __h = IceInternal.HashUtil.hashAdd(__h, itemId);
        __h = IceInternal.HashUtil.hashAdd(__h, itemNum);
        __h = IceInternal.HashUtil.hashAdd(__h, itemVip);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        IntStringSeqHelper.write(__os, weekTemplateIds);
        IntStringSeqHelper.write(__os, todayTemplateIds);
        __os.writeInt(price);
        __os.writeInt(viplimit);
        __os.writeInt(freeNum);
        __os.writeString(itemId);
        __os.writeInt(itemNum);
        __os.writeInt(itemVip);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        weekTemplateIds = IntStringSeqHelper.read(__is);
        todayTemplateIds = IntStringSeqHelper.read(__is);
        price = __is.readInt();
        viplimit = __is.readInt();
        freeNum = __is.readInt();
        itemId = __is.readString();
        itemNum = __is.readInt();
        itemVip = __is.readInt();
    }

    public static final long serialVersionUID = -1792285881L;
}
