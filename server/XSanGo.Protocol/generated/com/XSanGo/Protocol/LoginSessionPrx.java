// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `LoginSession.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface LoginSessionPrx extends Glacier2.SessionPrx
{
    public void setCallback(LoginCallbackPrx cb, String macAddress, int packageId);

    public void setCallback(LoginCallbackPrx cb, String macAddress, int packageId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCallback(LoginCallbackPrx cb, String macAddress, int packageId);

    public Ice.AsyncResult begin_setCallback(LoginCallbackPrx cb, String macAddress, int packageId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCallback(LoginCallbackPrx cb, String macAddress, int packageId, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCallback(LoginCallbackPrx cb, String macAddress, int packageId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCallback(LoginCallbackPrx cb, String macAddress, int packageId, Callback_LoginSession_setCallback __cb);

    public Ice.AsyncResult begin_setCallback(LoginCallbackPrx cb, String macAddress, int packageId, java.util.Map<String, String> __ctx, Callback_LoginSession_setCallback __cb);

    public void end_setCallback(Ice.AsyncResult __result);

    public boolean setCallback_async(AMI_LoginSession_setCallback __cb, LoginCallbackPrx cb, String macAddress, int packageId);

    public boolean setCallback_async(AMI_LoginSession_setCallback __cb, LoginCallbackPrx cb, String macAddress, int packageId, java.util.Map<String, String> __ctx);

    public void register(String account, String password)
        throws NoteException;

    public void register(String account, String password, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_register(String account, String password);

    public Ice.AsyncResult begin_register(String account, String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_register(String account, String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_register(String account, String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_register(String account, String password, Callback_LoginSession_register __cb);

    public Ice.AsyncResult begin_register(String account, String password, java.util.Map<String, String> __ctx, Callback_LoginSession_register __cb);

    public void end_register(Ice.AsyncResult __result)
        throws NoteException;

    public boolean register_async(AMI_LoginSession_register __cb, String account, String password);

    public boolean register_async(AMI_LoginSession_register __cb, String account, String password, java.util.Map<String, String> __ctx);

    public ServerList login(String account, String password)
        throws NoteException;

    public ServerList login(String account, String password, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_login(String account, String password);

    public Ice.AsyncResult begin_login(String account, String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_login(String account, String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_login(String account, String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_login(String account, String password, Callback_LoginSession_login __cb);

    public Ice.AsyncResult begin_login(String account, String password, java.util.Map<String, String> __ctx, Callback_LoginSession_login __cb);

    public ServerList end_login(Ice.AsyncResult __result)
        throws NoteException;

    public boolean login_async(AMI_LoginSession_login __cb, String account, String password);

    public boolean login_async(AMI_LoginSession_login __cb, String account, String password, java.util.Map<String, String> __ctx);

    public String selectServer(int serverId)
        throws NoteException;

    public String selectServer(int serverId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_selectServer(int serverId);

    public Ice.AsyncResult begin_selectServer(int serverId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_selectServer(int serverId, Ice.Callback __cb);

    public Ice.AsyncResult begin_selectServer(int serverId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_selectServer(int serverId, Callback_LoginSession_selectServer __cb);

    public Ice.AsyncResult begin_selectServer(int serverId, java.util.Map<String, String> __ctx, Callback_LoginSession_selectServer __cb);

    public String end_selectServer(Ice.AsyncResult __result)
        throws NoteException;

    public boolean selectServer_async(AMI_LoginSession_selectServer __cb, int serverId);

    public boolean selectServer_async(AMI_LoginSession_selectServer __cb, int serverId, java.util.Map<String, String> __ctx);
}
