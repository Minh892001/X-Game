// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Sign.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class LotteryView implements java.lang.Cloneable, java.io.Serializable
{
    public int needGold;

    public int[] types;

    public int remainTimes;

    public String[] templateIds;

    public int[] nums;

    public LotteryView()
    {
    }

    public LotteryView(int needGold, int[] types, int remainTimes, String[] templateIds, int[] nums)
    {
        this.needGold = needGold;
        this.types = types;
        this.remainTimes = remainTimes;
        this.templateIds = templateIds;
        this.nums = nums;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LotteryView _r = null;
        if(rhs instanceof LotteryView)
        {
            _r = (LotteryView)rhs;
        }

        if(_r != null)
        {
            if(needGold != _r.needGold)
            {
                return false;
            }
            if(!java.util.Arrays.equals(types, _r.types))
            {
                return false;
            }
            if(remainTimes != _r.remainTimes)
            {
                return false;
            }
            if(!java.util.Arrays.equals(templateIds, _r.templateIds))
            {
                return false;
            }
            if(!java.util.Arrays.equals(nums, _r.nums))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::LotteryView");
        __h = IceInternal.HashUtil.hashAdd(__h, needGold);
        __h = IceInternal.HashUtil.hashAdd(__h, types);
        __h = IceInternal.HashUtil.hashAdd(__h, remainTimes);
        __h = IceInternal.HashUtil.hashAdd(__h, templateIds);
        __h = IceInternal.HashUtil.hashAdd(__h, nums);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(needGold);
        IntSeqHelper.write(__os, types);
        __os.writeInt(remainTimes);
        StringSeqHelper.write(__os, templateIds);
        IntSeqHelper.write(__os, nums);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        needGold = __is.readInt();
        types = IntSeqHelper.read(__is);
        remainTimes = __is.readInt();
        templateIds = StringSeqHelper.read(__is);
        nums = IntSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1337331129L;
}
