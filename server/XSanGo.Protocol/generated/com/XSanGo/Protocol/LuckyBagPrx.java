// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `LuckyBag.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface LuckyBagPrx extends Ice.ObjectPrx
{
    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     **/
    public String getLuckBagView()
        throws NoteException;

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getLuckBagView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLuckBagView();

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLuckBagView(java.util.Map<String, String> __ctx);

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLuckBagView(Ice.Callback __cb);

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLuckBagView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLuckBagView(Callback_LuckyBag_getLuckBagView __cb);

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getLuckBagView(java.util.Map<String, String> __ctx, Callback_LuckyBag_getLuckBagView __cb);

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getLuckBagView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getLuckBagView_async(AMI_LuckyBag_getLuckBagView __cb);

    /**
     * 获取福袋VIEW，返回LuckyBagView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getLuckBagView_async(AMI_LuckyBag_getLuckBagView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取当日充值福袋
     **/
    public void receiveDayBag(int id)
        throws NoteException;

    /**
     * 领取当日充值福袋
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveDayBag(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取当日充值福袋
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayBag(int id);

    /**
     * 领取当日充值福袋
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayBag(int id, java.util.Map<String, String> __ctx);

    /**
     * 领取当日充值福袋
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayBag(int id, Ice.Callback __cb);

    /**
     * 领取当日充值福袋
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayBag(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取当日充值福袋
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayBag(int id, Callback_LuckyBag_receiveDayBag __cb);

    /**
     * 领取当日充值福袋
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveDayBag(int id, java.util.Map<String, String> __ctx, Callback_LuckyBag_receiveDayBag __cb);

    /**
     * 领取当日充值福袋
     * @param __result The asynchronous result object.
     **/
    public void end_receiveDayBag(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取当日充值福袋
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveDayBag_async(AMI_LuckyBag_receiveDayBag __cb, int id);

    /**
     * 领取当日充值福袋
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveDayBag_async(AMI_LuckyBag_receiveDayBag __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 领取月累计充值福袋
     **/
    public void receiveMonthBag(int id)
        throws NoteException;

    /**
     * 领取月累计充值福袋
     * @param __ctx The Context map to send with the invocation.
     **/
    public void receiveMonthBag(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取月累计充值福袋
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveMonthBag(int id);

    /**
     * 领取月累计充值福袋
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveMonthBag(int id, java.util.Map<String, String> __ctx);

    /**
     * 领取月累计充值福袋
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveMonthBag(int id, Ice.Callback __cb);

    /**
     * 领取月累计充值福袋
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveMonthBag(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取月累计充值福袋
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveMonthBag(int id, Callback_LuckyBag_receiveMonthBag __cb);

    /**
     * 领取月累计充值福袋
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveMonthBag(int id, java.util.Map<String, String> __ctx, Callback_LuckyBag_receiveMonthBag __cb);

    /**
     * 领取月累计充值福袋
     * @param __result The asynchronous result object.
     **/
    public void end_receiveMonthBag(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取月累计充值福袋
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveMonthBag_async(AMI_LuckyBag_receiveMonthBag __cb, int id);

    /**
     * 领取月累计充值福袋
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveMonthBag_async(AMI_LuckyBag_receiveMonthBag __cb, int id, java.util.Map<String, String> __ctx);
}
