// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Mail.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MailView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public int type;

    public String senderId;

    public String senderName;

    public String title;

    public String body;

    public int state;

    public Property[] attach;

    public String createTime;

    public MailView()
    {
    }

    public MailView(String id, int type, String senderId, String senderName, String title, String body, int state, Property[] attach, String createTime)
    {
        this.id = id;
        this.type = type;
        this.senderId = senderId;
        this.senderName = senderName;
        this.title = title;
        this.body = body;
        this.state = state;
        this.attach = attach;
        this.createTime = createTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MailView _r = null;
        if(rhs instanceof MailView)
        {
            _r = (MailView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                return false;
            }
            if(senderId != _r.senderId)
            {
                if(senderId == null || _r.senderId == null || !senderId.equals(_r.senderId))
                {
                    return false;
                }
            }
            if(senderName != _r.senderName)
            {
                if(senderName == null || _r.senderName == null || !senderName.equals(_r.senderName))
                {
                    return false;
                }
            }
            if(title != _r.title)
            {
                if(title == null || _r.title == null || !title.equals(_r.title))
                {
                    return false;
                }
            }
            if(body != _r.body)
            {
                if(body == null || _r.body == null || !body.equals(_r.body))
                {
                    return false;
                }
            }
            if(state != _r.state)
            {
                return false;
            }
            if(!java.util.Arrays.equals(attach, _r.attach))
            {
                return false;
            }
            if(createTime != _r.createTime)
            {
                if(createTime == null || _r.createTime == null || !createTime.equals(_r.createTime))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MailView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, senderId);
        __h = IceInternal.HashUtil.hashAdd(__h, senderName);
        __h = IceInternal.HashUtil.hashAdd(__h, title);
        __h = IceInternal.HashUtil.hashAdd(__h, body);
        __h = IceInternal.HashUtil.hashAdd(__h, state);
        __h = IceInternal.HashUtil.hashAdd(__h, attach);
        __h = IceInternal.HashUtil.hashAdd(__h, createTime);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeInt(type);
        __os.writeString(senderId);
        __os.writeString(senderName);
        __os.writeString(title);
        __os.writeString(body);
        __os.writeInt(state);
        PropertySeqHelper.write(__os, attach);
        __os.writeString(createTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        type = __is.readInt();
        senderId = __is.readString();
        senderName = __is.readString();
        title = __is.readString();
        body = __is.readString();
        state = __is.readInt();
        attach = PropertySeqHelper.read(__is);
        createTime = __is.readString();
    }

    public static final long serialVersionUID = 1867043537L;
}
