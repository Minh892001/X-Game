// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `MakeWine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MakeResult implements java.lang.Cloneable, java.io.Serializable
{
    public int targetNum;

    public IntString[] materialNums;

    public int makedCount;

    public int composeSocre;

    public int receiveMaterialState;

    public int gotScore;

    public MakeResult()
    {
    }

    public MakeResult(int targetNum, IntString[] materialNums, int makedCount, int composeSocre, int receiveMaterialState, int gotScore)
    {
        this.targetNum = targetNum;
        this.materialNums = materialNums;
        this.makedCount = makedCount;
        this.composeSocre = composeSocre;
        this.receiveMaterialState = receiveMaterialState;
        this.gotScore = gotScore;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MakeResult _r = null;
        if(rhs instanceof MakeResult)
        {
            _r = (MakeResult)rhs;
        }

        if(_r != null)
        {
            if(targetNum != _r.targetNum)
            {
                return false;
            }
            if(!java.util.Arrays.equals(materialNums, _r.materialNums))
            {
                return false;
            }
            if(makedCount != _r.makedCount)
            {
                return false;
            }
            if(composeSocre != _r.composeSocre)
            {
                return false;
            }
            if(receiveMaterialState != _r.receiveMaterialState)
            {
                return false;
            }
            if(gotScore != _r.gotScore)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MakeResult");
        __h = IceInternal.HashUtil.hashAdd(__h, targetNum);
        __h = IceInternal.HashUtil.hashAdd(__h, materialNums);
        __h = IceInternal.HashUtil.hashAdd(__h, makedCount);
        __h = IceInternal.HashUtil.hashAdd(__h, composeSocre);
        __h = IceInternal.HashUtil.hashAdd(__h, receiveMaterialState);
        __h = IceInternal.HashUtil.hashAdd(__h, gotScore);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(targetNum);
        IntStringSeqHelper.write(__os, materialNums);
        __os.writeInt(makedCount);
        __os.writeInt(composeSocre);
        __os.writeInt(receiveMaterialState);
        __os.writeInt(gotScore);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        targetNum = __is.readInt();
        materialNums = IntStringSeqHelper.read(__is);
        makedCount = __is.readInt();
        composeSocre = __is.readInt();
        receiveMaterialState = __is.readInt();
        gotScore = __is.readInt();
    }

    public static final long serialVersionUID = -1387584108L;
}
