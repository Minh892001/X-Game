// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `MakeWine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MakeWineAwardInfo implements java.lang.Cloneable, java.io.Serializable
{
    public String itemId;

    public IntString shareAwardItemId;

    public IntString receiveItemId;

    public int makeScore;

    public int shareScore;

    public MakeWineAwardInfo()
    {
    }

    public MakeWineAwardInfo(String itemId, IntString shareAwardItemId, IntString receiveItemId, int makeScore, int shareScore)
    {
        this.itemId = itemId;
        this.shareAwardItemId = shareAwardItemId;
        this.receiveItemId = receiveItemId;
        this.makeScore = makeScore;
        this.shareScore = shareScore;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MakeWineAwardInfo _r = null;
        if(rhs instanceof MakeWineAwardInfo)
        {
            _r = (MakeWineAwardInfo)rhs;
        }

        if(_r != null)
        {
            if(itemId != _r.itemId)
            {
                if(itemId == null || _r.itemId == null || !itemId.equals(_r.itemId))
                {
                    return false;
                }
            }
            if(shareAwardItemId != _r.shareAwardItemId)
            {
                if(shareAwardItemId == null || _r.shareAwardItemId == null || !shareAwardItemId.equals(_r.shareAwardItemId))
                {
                    return false;
                }
            }
            if(receiveItemId != _r.receiveItemId)
            {
                if(receiveItemId == null || _r.receiveItemId == null || !receiveItemId.equals(_r.receiveItemId))
                {
                    return false;
                }
            }
            if(makeScore != _r.makeScore)
            {
                return false;
            }
            if(shareScore != _r.shareScore)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MakeWineAwardInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, itemId);
        __h = IceInternal.HashUtil.hashAdd(__h, shareAwardItemId);
        __h = IceInternal.HashUtil.hashAdd(__h, receiveItemId);
        __h = IceInternal.HashUtil.hashAdd(__h, makeScore);
        __h = IceInternal.HashUtil.hashAdd(__h, shareScore);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(itemId);
        shareAwardItemId.__write(__os);
        receiveItemId.__write(__os);
        __os.writeInt(makeScore);
        __os.writeInt(shareScore);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        itemId = __is.readString();
        shareAwardItemId = new IntString();
        shareAwardItemId.__read(__is);
        receiveItemId = new IntString();
        receiveItemId.__read(__is);
        makeScore = __is.readInt();
        shareScore = __is.readInt();
    }

    public static final long serialVersionUID = -1783141761L;
}
