// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `MakeWine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MakeWineScoreRank implements java.lang.Cloneable, java.io.Serializable
{
    public int intoRankScore;

    public String sendAwardTime;

    public MakeWineScoreRankItem[] makeWineScoreRankItems;

    public int myRank;

    public int myScore;

    public int myLevel;

    public int myVip;

    public String myName;

    public String myHeadImg;

    public MakeWineScoreRank()
    {
    }

    public MakeWineScoreRank(int intoRankScore, String sendAwardTime, MakeWineScoreRankItem[] makeWineScoreRankItems, int myRank, int myScore, int myLevel, int myVip, String myName, String myHeadImg)
    {
        this.intoRankScore = intoRankScore;
        this.sendAwardTime = sendAwardTime;
        this.makeWineScoreRankItems = makeWineScoreRankItems;
        this.myRank = myRank;
        this.myScore = myScore;
        this.myLevel = myLevel;
        this.myVip = myVip;
        this.myName = myName;
        this.myHeadImg = myHeadImg;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MakeWineScoreRank _r = null;
        if(rhs instanceof MakeWineScoreRank)
        {
            _r = (MakeWineScoreRank)rhs;
        }

        if(_r != null)
        {
            if(intoRankScore != _r.intoRankScore)
            {
                return false;
            }
            if(sendAwardTime != _r.sendAwardTime)
            {
                if(sendAwardTime == null || _r.sendAwardTime == null || !sendAwardTime.equals(_r.sendAwardTime))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(makeWineScoreRankItems, _r.makeWineScoreRankItems))
            {
                return false;
            }
            if(myRank != _r.myRank)
            {
                return false;
            }
            if(myScore != _r.myScore)
            {
                return false;
            }
            if(myLevel != _r.myLevel)
            {
                return false;
            }
            if(myVip != _r.myVip)
            {
                return false;
            }
            if(myName != _r.myName)
            {
                if(myName == null || _r.myName == null || !myName.equals(_r.myName))
                {
                    return false;
                }
            }
            if(myHeadImg != _r.myHeadImg)
            {
                if(myHeadImg == null || _r.myHeadImg == null || !myHeadImg.equals(_r.myHeadImg))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MakeWineScoreRank");
        __h = IceInternal.HashUtil.hashAdd(__h, intoRankScore);
        __h = IceInternal.HashUtil.hashAdd(__h, sendAwardTime);
        __h = IceInternal.HashUtil.hashAdd(__h, makeWineScoreRankItems);
        __h = IceInternal.HashUtil.hashAdd(__h, myRank);
        __h = IceInternal.HashUtil.hashAdd(__h, myScore);
        __h = IceInternal.HashUtil.hashAdd(__h, myLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, myVip);
        __h = IceInternal.HashUtil.hashAdd(__h, myName);
        __h = IceInternal.HashUtil.hashAdd(__h, myHeadImg);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(intoRankScore);
        __os.writeString(sendAwardTime);
        MakeWineScoreRankItemSeqHelper.write(__os, makeWineScoreRankItems);
        __os.writeInt(myRank);
        __os.writeInt(myScore);
        __os.writeInt(myLevel);
        __os.writeInt(myVip);
        __os.writeString(myName);
        __os.writeString(myHeadImg);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        intoRankScore = __is.readInt();
        sendAwardTime = __is.readString();
        makeWineScoreRankItems = MakeWineScoreRankItemSeqHelper.read(__is);
        myRank = __is.readInt();
        myScore = __is.readInt();
        myLevel = __is.readInt();
        myVip = __is.readInt();
        myName = __is.readString();
        myHeadImg = __is.readString();
    }

    public static final long serialVersionUID = 934018000L;
}
