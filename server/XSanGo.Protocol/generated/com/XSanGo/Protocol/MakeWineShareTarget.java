// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `MakeWine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MakeWineShareTarget implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public String targetItem;

    public int groupNum;

    public MakeWineShareTarget()
    {
    }

    public MakeWineShareTarget(int id, String targetItem, int groupNum)
    {
        this.id = id;
        this.targetItem = targetItem;
        this.groupNum = groupNum;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MakeWineShareTarget _r = null;
        if(rhs instanceof MakeWineShareTarget)
        {
            _r = (MakeWineShareTarget)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(targetItem != _r.targetItem)
            {
                if(targetItem == null || _r.targetItem == null || !targetItem.equals(_r.targetItem))
                {
                    return false;
                }
            }
            if(groupNum != _r.groupNum)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MakeWineShareTarget");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, targetItem);
        __h = IceInternal.HashUtil.hashAdd(__h, groupNum);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeString(targetItem);
        __os.writeInt(groupNum);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        targetItem = __is.readString();
        groupNum = __is.readInt();
    }

    public static final long serialVersionUID = 2038406332L;
}
