// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `MakeWine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MakeWineShareView implements java.lang.Cloneable, java.io.Serializable
{
    public long nextReceiveTime;

    public MakeWineShareTarget[] shareTargets;

    public MakeWineShareRecord[] shareRecords;

    public int totalRecords;

    public int shareScore;

    public MakeWineShareView()
    {
    }

    public MakeWineShareView(long nextReceiveTime, MakeWineShareTarget[] shareTargets, MakeWineShareRecord[] shareRecords, int totalRecords, int shareScore)
    {
        this.nextReceiveTime = nextReceiveTime;
        this.shareTargets = shareTargets;
        this.shareRecords = shareRecords;
        this.totalRecords = totalRecords;
        this.shareScore = shareScore;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MakeWineShareView _r = null;
        if(rhs instanceof MakeWineShareView)
        {
            _r = (MakeWineShareView)rhs;
        }

        if(_r != null)
        {
            if(nextReceiveTime != _r.nextReceiveTime)
            {
                return false;
            }
            if(!java.util.Arrays.equals(shareTargets, _r.shareTargets))
            {
                return false;
            }
            if(!java.util.Arrays.equals(shareRecords, _r.shareRecords))
            {
                return false;
            }
            if(totalRecords != _r.totalRecords)
            {
                return false;
            }
            if(shareScore != _r.shareScore)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MakeWineShareView");
        __h = IceInternal.HashUtil.hashAdd(__h, nextReceiveTime);
        __h = IceInternal.HashUtil.hashAdd(__h, shareTargets);
        __h = IceInternal.HashUtil.hashAdd(__h, shareRecords);
        __h = IceInternal.HashUtil.hashAdd(__h, totalRecords);
        __h = IceInternal.HashUtil.hashAdd(__h, shareScore);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeLong(nextReceiveTime);
        ShareTargetSeqHelper.write(__os, shareTargets);
        ShareRecordSeqHelper.write(__os, shareRecords);
        __os.writeInt(totalRecords);
        __os.writeInt(shareScore);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        nextReceiveTime = __is.readLong();
        shareTargets = ShareTargetSeqHelper.read(__is);
        shareRecords = ShareRecordSeqHelper.read(__is);
        totalRecords = __is.readInt();
        shareScore = __is.readInt();
    }

    public static final long serialVersionUID = 1312872252L;
}
