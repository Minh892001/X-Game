// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Market.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface MarketPrx extends Ice.ObjectPrx
{
    public String getMarketView();

    public String getMarketView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMarketView();

    public Ice.AsyncResult begin_getMarketView(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMarketView(Ice.Callback __cb);

    public Ice.AsyncResult begin_getMarketView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMarketView(Callback_Market_getMarketView __cb);

    public Ice.AsyncResult begin_getMarketView(java.util.Map<String, String> __ctx, Callback_Market_getMarketView __cb);

    public String end_getMarketView(Ice.AsyncResult __result);

    public boolean getMarketView_async(AMI_Market_getMarketView __cb);

    public boolean getMarketView_async(AMI_Market_getMarketView __cb, java.util.Map<String, String> __ctx);

    public String OneInTen()
        throws NotEnoughMoneyException,
               NoteException;

    public String OneInTen(java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_OneInTen();

    public Ice.AsyncResult begin_OneInTen(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_OneInTen(Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInTen(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInTen(Callback_Market_OneInTen __cb);

    public Ice.AsyncResult begin_OneInTen(java.util.Map<String, String> __ctx, Callback_Market_OneInTen __cb);

    public String end_OneInTen(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean OneInTen_async(AMI_Market_OneInTen __cb);

    public boolean OneInTen_async(AMI_Market_OneInTen __cb, java.util.Map<String, String> __ctx);

    public String OneInTen10()
        throws NotEnoughMoneyException,
               NoteException;

    public String OneInTen10(java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_OneInTen10();

    public Ice.AsyncResult begin_OneInTen10(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_OneInTen10(Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInTen10(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInTen10(Callback_Market_OneInTen10 __cb);

    public Ice.AsyncResult begin_OneInTen10(java.util.Map<String, String> __ctx, Callback_Market_OneInTen10 __cb);

    public String end_OneInTen10(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean OneInTen10_async(AMI_Market_OneInTen10 __cb);

    public boolean OneInTen10_async(AMI_Market_OneInTen10 __cb, java.util.Map<String, String> __ctx);

    public String OneInHundred()
        throws NotEnoughYuanBaoException,
               NoteException;

    public String OneInHundred(java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_OneInHundred();

    public Ice.AsyncResult begin_OneInHundred(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_OneInHundred(Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInHundred(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInHundred(Callback_Market_OneInHundred __cb);

    public Ice.AsyncResult begin_OneInHundred(java.util.Map<String, String> __ctx, Callback_Market_OneInHundred __cb);

    public String end_OneInHundred(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean OneInHundred_async(AMI_Market_OneInHundred __cb);

    public boolean OneInHundred_async(AMI_Market_OneInHundred __cb, java.util.Map<String, String> __ctx);

    public String OneInHundred10()
        throws NotEnoughYuanBaoException,
               NoteException;

    public String OneInHundred10(java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_OneInHundred10();

    public Ice.AsyncResult begin_OneInHundred10(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_OneInHundred10(Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInHundred10(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_OneInHundred10(Callback_Market_OneInHundred10 __cb);

    public Ice.AsyncResult begin_OneInHundred10(java.util.Map<String, String> __ctx, Callback_Market_OneInHundred10 __cb);

    public String end_OneInHundred10(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean OneInHundred10_async(AMI_Market_OneInHundred10 __cb);

    public boolean OneInHundred10_async(AMI_Market_OneInHundred10 __cb, java.util.Map<String, String> __ctx);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     **/
    public String buyLimitHero(int type)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __ctx The Context map to send with the invocation.
     **/
    public String buyLimitHero(int type, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyLimitHero(int type);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyLimitHero(int type, java.util.Map<String, String> __ctx);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyLimitHero(int type, Ice.Callback __cb);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyLimitHero(int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyLimitHero(int type, Callback_Market_buyLimitHero __cb);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyLimitHero(int type, java.util.Map<String, String> __ctx, Callback_Market_buyLimitHero __cb);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __result The asynchronous result object.
     **/
    public String end_buyLimitHero(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __cb The callback object for the operation.
     **/
    public boolean buyLimitHero_async(AMI_Market_buyLimitHero __cb, int type);

    /**
     * 限时武将，返回BuyHeroResultSeq的lua。type-0元宝1物品
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyLimitHero_async(AMI_Market_buyLimitHero __cb, int type, java.util.Map<String, String> __ctx);
}
