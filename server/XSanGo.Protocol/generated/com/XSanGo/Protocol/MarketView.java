// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Market.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MarketView implements java.lang.Cloneable, java.io.Serializable
{
    public StoreView oneInTenStore;

    public StoreView oneInHundredStore;

    public LimitView limitHero;

    public int currentCharm;

    public int maxCharm;

    public String fixRewardCode;

    public MarketView()
    {
    }

    public MarketView(StoreView oneInTenStore, StoreView oneInHundredStore, LimitView limitHero, int currentCharm, int maxCharm, String fixRewardCode)
    {
        this.oneInTenStore = oneInTenStore;
        this.oneInHundredStore = oneInHundredStore;
        this.limitHero = limitHero;
        this.currentCharm = currentCharm;
        this.maxCharm = maxCharm;
        this.fixRewardCode = fixRewardCode;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MarketView _r = null;
        if(rhs instanceof MarketView)
        {
            _r = (MarketView)rhs;
        }

        if(_r != null)
        {
            if(oneInTenStore != _r.oneInTenStore)
            {
                if(oneInTenStore == null || _r.oneInTenStore == null || !oneInTenStore.equals(_r.oneInTenStore))
                {
                    return false;
                }
            }
            if(oneInHundredStore != _r.oneInHundredStore)
            {
                if(oneInHundredStore == null || _r.oneInHundredStore == null || !oneInHundredStore.equals(_r.oneInHundredStore))
                {
                    return false;
                }
            }
            if(limitHero != _r.limitHero)
            {
                if(limitHero == null || _r.limitHero == null || !limitHero.equals(_r.limitHero))
                {
                    return false;
                }
            }
            if(currentCharm != _r.currentCharm)
            {
                return false;
            }
            if(maxCharm != _r.maxCharm)
            {
                return false;
            }
            if(fixRewardCode != _r.fixRewardCode)
            {
                if(fixRewardCode == null || _r.fixRewardCode == null || !fixRewardCode.equals(_r.fixRewardCode))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MarketView");
        __h = IceInternal.HashUtil.hashAdd(__h, oneInTenStore);
        __h = IceInternal.HashUtil.hashAdd(__h, oneInHundredStore);
        __h = IceInternal.HashUtil.hashAdd(__h, limitHero);
        __h = IceInternal.HashUtil.hashAdd(__h, currentCharm);
        __h = IceInternal.HashUtil.hashAdd(__h, maxCharm);
        __h = IceInternal.HashUtil.hashAdd(__h, fixRewardCode);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        oneInTenStore.__write(__os);
        oneInHundredStore.__write(__os);
        limitHero.__write(__os);
        __os.writeInt(currentCharm);
        __os.writeInt(maxCharm);
        __os.writeString(fixRewardCode);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        oneInTenStore = new StoreView();
        oneInTenStore.__read(__is);
        oneInHundredStore = new StoreView();
        oneInHundredStore.__read(__is);
        limitHero = new LimitView();
        limitHero.__read(__is);
        currentCharm = __is.readInt();
        maxCharm = __is.readInt();
        fixRewardCode = __is.readString();
    }

    public static final long serialVersionUID = -1755848969L;
}
