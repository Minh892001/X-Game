// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MarksmanScoreReward implements java.lang.Cloneable, java.io.Serializable
{
    public int score;

    public String icons;

    public int state;

    public IntString[] items;

    public MarksmanScoreReward()
    {
    }

    public MarksmanScoreReward(int score, String icons, int state, IntString[] items)
    {
        this.score = score;
        this.icons = icons;
        this.state = state;
        this.items = items;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MarksmanScoreReward _r = null;
        if(rhs instanceof MarksmanScoreReward)
        {
            _r = (MarksmanScoreReward)rhs;
        }

        if(_r != null)
        {
            if(score != _r.score)
            {
                return false;
            }
            if(icons != _r.icons)
            {
                if(icons == null || _r.icons == null || !icons.equals(_r.icons))
                {
                    return false;
                }
            }
            if(state != _r.state)
            {
                return false;
            }
            if(!java.util.Arrays.equals(items, _r.items))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MarksmanScoreReward");
        __h = IceInternal.HashUtil.hashAdd(__h, score);
        __h = IceInternal.HashUtil.hashAdd(__h, icons);
        __h = IceInternal.HashUtil.hashAdd(__h, state);
        __h = IceInternal.HashUtil.hashAdd(__h, items);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(score);
        __os.writeString(icons);
        __os.writeInt(state);
        IntStringSeqHelper.write(__os, items);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        score = __is.readInt();
        icons = __is.readString();
        state = __is.readInt();
        items = IntStringSeqHelper.read(__is);
    }

    public static final long serialVersionUID = 805257834L;
}
