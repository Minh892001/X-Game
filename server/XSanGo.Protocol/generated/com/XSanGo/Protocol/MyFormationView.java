// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Tournament.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MyFormationView implements java.lang.Cloneable, java.io.Serializable
{
    public FormationView formation;

    public PvpOpponentFormationView heros;

    public MyFormationView()
    {
    }

    public MyFormationView(FormationView formation, PvpOpponentFormationView heros)
    {
        this.formation = formation;
        this.heros = heros;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MyFormationView _r = null;
        if(rhs instanceof MyFormationView)
        {
            _r = (MyFormationView)rhs;
        }

        if(_r != null)
        {
            if(formation != _r.formation)
            {
                if(formation == null || _r.formation == null || !formation.equals(_r.formation))
                {
                    return false;
                }
            }
            if(heros != _r.heros)
            {
                if(heros == null || _r.heros == null || !heros.equals(_r.heros))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MyFormationView");
        __h = IceInternal.HashUtil.hashAdd(__h, formation);
        __h = IceInternal.HashUtil.hashAdd(__h, heros);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        formation.__write(__os);
        heros.__write(__os);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        formation = new FormationView();
        formation.__read(__is);
        heros = new PvpOpponentFormationView();
        heros.__read(__is);
    }

    public static final long serialVersionUID = 893400426L;
}
