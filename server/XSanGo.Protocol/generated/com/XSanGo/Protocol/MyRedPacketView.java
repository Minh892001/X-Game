// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Haoqingbao.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class MyRedPacketView implements java.lang.Cloneable, java.io.Serializable
{
    public int totalYuanbao;

    public int recvNum;

    public int luckyStarNum;

    public RedPacketDetailItemView[] items;

    public MyRedPacketView()
    {
    }

    public MyRedPacketView(int totalYuanbao, int recvNum, int luckyStarNum, RedPacketDetailItemView[] items)
    {
        this.totalYuanbao = totalYuanbao;
        this.recvNum = recvNum;
        this.luckyStarNum = luckyStarNum;
        this.items = items;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MyRedPacketView _r = null;
        if(rhs instanceof MyRedPacketView)
        {
            _r = (MyRedPacketView)rhs;
        }

        if(_r != null)
        {
            if(totalYuanbao != _r.totalYuanbao)
            {
                return false;
            }
            if(recvNum != _r.recvNum)
            {
                return false;
            }
            if(luckyStarNum != _r.luckyStarNum)
            {
                return false;
            }
            if(!java.util.Arrays.equals(items, _r.items))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::MyRedPacketView");
        __h = IceInternal.HashUtil.hashAdd(__h, totalYuanbao);
        __h = IceInternal.HashUtil.hashAdd(__h, recvNum);
        __h = IceInternal.HashUtil.hashAdd(__h, luckyStarNum);
        __h = IceInternal.HashUtil.hashAdd(__h, items);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(totalYuanbao);
        __os.writeInt(recvNum);
        __os.writeInt(luckyStarNum);
        RedPacketDetailItemViewSeqHelper.write(__os, items);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        totalYuanbao = __is.readInt();
        recvNum = __is.readInt();
        luckyStarNum = __is.readInt();
        items = RedPacketDetailItemViewSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -609793337L;
}
