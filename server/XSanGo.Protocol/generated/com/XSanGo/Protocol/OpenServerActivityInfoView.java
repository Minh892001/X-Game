// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class OpenServerActivityInfoView implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public String name;

    public String description;

    public int startDay;

    public int endDay;

    public int type;

    public OpenServerActivityNodeView[] activityNodeViewSeq;

    public OpenServerSaleActivityNodeView[] saleViewSeq;

    public OpenServerActivityInfoView()
    {
    }

    public OpenServerActivityInfoView(int id, String name, String description, int startDay, int endDay, int type, OpenServerActivityNodeView[] activityNodeViewSeq, OpenServerSaleActivityNodeView[] saleViewSeq)
    {
        this.id = id;
        this.name = name;
        this.description = description;
        this.startDay = startDay;
        this.endDay = endDay;
        this.type = type;
        this.activityNodeViewSeq = activityNodeViewSeq;
        this.saleViewSeq = saleViewSeq;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        OpenServerActivityInfoView _r = null;
        if(rhs instanceof OpenServerActivityInfoView)
        {
            _r = (OpenServerActivityInfoView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(description != _r.description)
            {
                if(description == null || _r.description == null || !description.equals(_r.description))
                {
                    return false;
                }
            }
            if(startDay != _r.startDay)
            {
                return false;
            }
            if(endDay != _r.endDay)
            {
                return false;
            }
            if(type != _r.type)
            {
                return false;
            }
            if(!java.util.Arrays.equals(activityNodeViewSeq, _r.activityNodeViewSeq))
            {
                return false;
            }
            if(!java.util.Arrays.equals(saleViewSeq, _r.saleViewSeq))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::OpenServerActivityInfoView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, description);
        __h = IceInternal.HashUtil.hashAdd(__h, startDay);
        __h = IceInternal.HashUtil.hashAdd(__h, endDay);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, activityNodeViewSeq);
        __h = IceInternal.HashUtil.hashAdd(__h, saleViewSeq);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeString(name);
        __os.writeString(description);
        __os.writeInt(startDay);
        __os.writeInt(endDay);
        __os.writeInt(type);
        OpenServerActivityNodeViewSeqHelper.write(__os, activityNodeViewSeq);
        openServerSaleActivityNodeViewSeqHelper.write(__os, saleViewSeq);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        name = __is.readString();
        description = __is.readString();
        startDay = __is.readInt();
        endDay = __is.readInt();
        type = __is.readInt();
        activityNodeViewSeq = OpenServerActivityNodeViewSeqHelper.read(__is);
        saleViewSeq = openServerSaleActivityNodeViewSeqHelper.read(__is);
    }

    public static final long serialVersionUID = 600008322L;
}
