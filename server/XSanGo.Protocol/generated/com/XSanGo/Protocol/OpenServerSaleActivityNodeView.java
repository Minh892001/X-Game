// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class OpenServerSaleActivityNodeView implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public int openDay;

    public IntString reward;

    public int status;

    public int coinType;

    public int bePrice;

    public int price;

    public OpenServerSaleActivityNodeView()
    {
    }

    public OpenServerSaleActivityNodeView(int id, int openDay, IntString reward, int status, int coinType, int bePrice, int price)
    {
        this.id = id;
        this.openDay = openDay;
        this.reward = reward;
        this.status = status;
        this.coinType = coinType;
        this.bePrice = bePrice;
        this.price = price;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        OpenServerSaleActivityNodeView _r = null;
        if(rhs instanceof OpenServerSaleActivityNodeView)
        {
            _r = (OpenServerSaleActivityNodeView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(openDay != _r.openDay)
            {
                return false;
            }
            if(reward != _r.reward)
            {
                if(reward == null || _r.reward == null || !reward.equals(_r.reward))
                {
                    return false;
                }
            }
            if(status != _r.status)
            {
                return false;
            }
            if(coinType != _r.coinType)
            {
                return false;
            }
            if(bePrice != _r.bePrice)
            {
                return false;
            }
            if(price != _r.price)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::OpenServerSaleActivityNodeView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, openDay);
        __h = IceInternal.HashUtil.hashAdd(__h, reward);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        __h = IceInternal.HashUtil.hashAdd(__h, coinType);
        __h = IceInternal.HashUtil.hashAdd(__h, bePrice);
        __h = IceInternal.HashUtil.hashAdd(__h, price);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeInt(openDay);
        reward.__write(__os);
        __os.writeInt(status);
        __os.writeInt(coinType);
        __os.writeInt(bePrice);
        __os.writeInt(price);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        openDay = __is.readInt();
        reward = new IntString();
        reward.__read(__is);
        status = __is.readInt();
        coinType = __is.readInt();
        bePrice = __is.readInt();
        price = __is.readInt();
    }

    public static final long serialVersionUID = 1586227183L;
}
