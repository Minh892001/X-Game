// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `partner.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class PropertyConfig implements java.lang.Cloneable, java.io.Serializable
{
    public int propId;

    public String propName;

    public int color;

    public int propPercent;

    public PropertyConfig()
    {
    }

    public PropertyConfig(int propId, String propName, int color, int propPercent)
    {
        this.propId = propId;
        this.propName = propName;
        this.color = color;
        this.propPercent = propPercent;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PropertyConfig _r = null;
        if(rhs instanceof PropertyConfig)
        {
            _r = (PropertyConfig)rhs;
        }

        if(_r != null)
        {
            if(propId != _r.propId)
            {
                return false;
            }
            if(propName != _r.propName)
            {
                if(propName == null || _r.propName == null || !propName.equals(_r.propName))
                {
                    return false;
                }
            }
            if(color != _r.color)
            {
                return false;
            }
            if(propPercent != _r.propPercent)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::PropertyConfig");
        __h = IceInternal.HashUtil.hashAdd(__h, propId);
        __h = IceInternal.HashUtil.hashAdd(__h, propName);
        __h = IceInternal.HashUtil.hashAdd(__h, color);
        __h = IceInternal.HashUtil.hashAdd(__h, propPercent);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(propId);
        __os.writeString(propName);
        __os.writeInt(color);
        __os.writeInt(propPercent);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        propId = __is.readInt();
        propName = __is.readString();
        color = __is.readInt();
        propPercent = __is.readInt();
    }

    public static final long serialVersionUID = -800097908L;
}
