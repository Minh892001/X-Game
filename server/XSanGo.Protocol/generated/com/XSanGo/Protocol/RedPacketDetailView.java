// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Haoqingbao.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class RedPacketDetailView implements java.lang.Cloneable, java.io.Serializable
{
    public String senderHeadImg;

    public String senderName;

    public int senderLevel;

    public int senderVipLevel;

    public int totalNum;

    public int lastNum;

    public int endTime;

    public String msg;

    public RedPacketDetailItemView[] items;

    public RedPacketDetailView()
    {
    }

    public RedPacketDetailView(String senderHeadImg, String senderName, int senderLevel, int senderVipLevel, int totalNum, int lastNum, int endTime, String msg, RedPacketDetailItemView[] items)
    {
        this.senderHeadImg = senderHeadImg;
        this.senderName = senderName;
        this.senderLevel = senderLevel;
        this.senderVipLevel = senderVipLevel;
        this.totalNum = totalNum;
        this.lastNum = lastNum;
        this.endTime = endTime;
        this.msg = msg;
        this.items = items;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        RedPacketDetailView _r = null;
        if(rhs instanceof RedPacketDetailView)
        {
            _r = (RedPacketDetailView)rhs;
        }

        if(_r != null)
        {
            if(senderHeadImg != _r.senderHeadImg)
            {
                if(senderHeadImg == null || _r.senderHeadImg == null || !senderHeadImg.equals(_r.senderHeadImg))
                {
                    return false;
                }
            }
            if(senderName != _r.senderName)
            {
                if(senderName == null || _r.senderName == null || !senderName.equals(_r.senderName))
                {
                    return false;
                }
            }
            if(senderLevel != _r.senderLevel)
            {
                return false;
            }
            if(senderVipLevel != _r.senderVipLevel)
            {
                return false;
            }
            if(totalNum != _r.totalNum)
            {
                return false;
            }
            if(lastNum != _r.lastNum)
            {
                return false;
            }
            if(endTime != _r.endTime)
            {
                return false;
            }
            if(msg != _r.msg)
            {
                if(msg == null || _r.msg == null || !msg.equals(_r.msg))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(items, _r.items))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::RedPacketDetailView");
        __h = IceInternal.HashUtil.hashAdd(__h, senderHeadImg);
        __h = IceInternal.HashUtil.hashAdd(__h, senderName);
        __h = IceInternal.HashUtil.hashAdd(__h, senderLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, senderVipLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, totalNum);
        __h = IceInternal.HashUtil.hashAdd(__h, lastNum);
        __h = IceInternal.HashUtil.hashAdd(__h, endTime);
        __h = IceInternal.HashUtil.hashAdd(__h, msg);
        __h = IceInternal.HashUtil.hashAdd(__h, items);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(senderHeadImg);
        __os.writeString(senderName);
        __os.writeInt(senderLevel);
        __os.writeInt(senderVipLevel);
        __os.writeInt(totalNum);
        __os.writeInt(lastNum);
        __os.writeInt(endTime);
        __os.writeString(msg);
        RedPacketDetailItemViewSeqHelper.write(__os, items);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        senderHeadImg = __is.readString();
        senderName = __is.readString();
        senderLevel = __is.readInt();
        senderVipLevel = __is.readInt();
        totalNum = __is.readInt();
        lastNum = __is.readInt();
        endTime = __is.readInt();
        msg = __is.readString();
        items = RedPacketDetailItemViewSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1218904642L;
}
