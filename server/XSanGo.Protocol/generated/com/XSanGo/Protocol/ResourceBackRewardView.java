// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ResourceBackRewardView implements java.lang.Cloneable, java.io.Serializable
{
    public int type;

    public String title;

    public IntString[] rewards;

    public int rate1;

    public Money price1;

    public int rate2;

    public Money price2;

    public int hasReceived;

    public ResourceBackRewardView()
    {
    }

    public ResourceBackRewardView(int type, String title, IntString[] rewards, int rate1, Money price1, int rate2, Money price2, int hasReceived)
    {
        this.type = type;
        this.title = title;
        this.rewards = rewards;
        this.rate1 = rate1;
        this.price1 = price1;
        this.rate2 = rate2;
        this.price2 = price2;
        this.hasReceived = hasReceived;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ResourceBackRewardView _r = null;
        if(rhs instanceof ResourceBackRewardView)
        {
            _r = (ResourceBackRewardView)rhs;
        }

        if(_r != null)
        {
            if(type != _r.type)
            {
                return false;
            }
            if(title != _r.title)
            {
                if(title == null || _r.title == null || !title.equals(_r.title))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(rewards, _r.rewards))
            {
                return false;
            }
            if(rate1 != _r.rate1)
            {
                return false;
            }
            if(price1 != _r.price1)
            {
                if(price1 == null || _r.price1 == null || !price1.equals(_r.price1))
                {
                    return false;
                }
            }
            if(rate2 != _r.rate2)
            {
                return false;
            }
            if(price2 != _r.price2)
            {
                if(price2 == null || _r.price2 == null || !price2.equals(_r.price2))
                {
                    return false;
                }
            }
            if(hasReceived != _r.hasReceived)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ResourceBackRewardView");
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, title);
        __h = IceInternal.HashUtil.hashAdd(__h, rewards);
        __h = IceInternal.HashUtil.hashAdd(__h, rate1);
        __h = IceInternal.HashUtil.hashAdd(__h, price1);
        __h = IceInternal.HashUtil.hashAdd(__h, rate2);
        __h = IceInternal.HashUtil.hashAdd(__h, price2);
        __h = IceInternal.HashUtil.hashAdd(__h, hasReceived);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(type);
        __os.writeString(title);
        IntStringSeqHelper.write(__os, rewards);
        __os.writeInt(rate1);
        price1.__write(__os);
        __os.writeInt(rate2);
        price2.__write(__os);
        __os.writeInt(hasReceived);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        type = __is.readInt();
        title = __is.readString();
        rewards = IntStringSeqHelper.read(__is);
        rate1 = __is.readInt();
        price1 = new Money();
        price1.__read(__is);
        rate2 = __is.readInt();
        price2 = new Money();
        price2.__read(__is);
        hasReceived = __is.readInt();
    }

    public static final long serialVersionUID = -816874398L;
}
