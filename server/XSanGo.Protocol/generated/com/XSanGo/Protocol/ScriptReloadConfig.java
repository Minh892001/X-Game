// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Center.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ScriptReloadConfig implements java.lang.Cloneable, java.io.Serializable
{
    public boolean activityList;

    public boolean announce;

    public boolean sumChargeConsume;

    public boolean dayChargeConsume;

    public boolean growFoundation;

    public boolean sign;

    public boolean heroAdmire;

    public boolean heroSoulCollect;

    public boolean levelupGift;

    public boolean levelReward;

    public boolean secondKill;

    public boolean makeVip;

    public boolean inviteFriend;

    public boolean online;

    public boolean tcReward;

    public boolean mail;

    public boolean mall;

    public boolean fortuneWheel;

    public boolean dayLogin;

    public boolean sendJunLing;

    public boolean powerReward;

    public boolean limitHero;

    public boolean monthFirstCharge;

    public boolean vitBuy;

    public boolean ladder;

    public boolean jinbiBuy;

    public boolean faction;

    public boolean luckyBag;

    public boolean cornucopia;

    public boolean goodsExchange;

    public boolean haoqingbao;

    public boolean dayForeverLogin;

    public boolean share;

    public boolean football;

    public ScriptReloadConfig()
    {
    }

    public ScriptReloadConfig(boolean activityList, boolean announce, boolean sumChargeConsume, boolean dayChargeConsume, boolean growFoundation, boolean sign, boolean heroAdmire, boolean heroSoulCollect, boolean levelupGift, boolean levelReward, boolean secondKill, boolean makeVip, boolean inviteFriend, boolean online, boolean tcReward, boolean mail, boolean mall, boolean fortuneWheel, boolean dayLogin, boolean sendJunLing, boolean powerReward, boolean limitHero, boolean monthFirstCharge, boolean vitBuy, boolean ladder, boolean jinbiBuy, boolean faction, boolean luckyBag, boolean cornucopia, boolean goodsExchange, boolean haoqingbao, boolean dayForeverLogin, boolean share, boolean football)
    {
        this.activityList = activityList;
        this.announce = announce;
        this.sumChargeConsume = sumChargeConsume;
        this.dayChargeConsume = dayChargeConsume;
        this.growFoundation = growFoundation;
        this.sign = sign;
        this.heroAdmire = heroAdmire;
        this.heroSoulCollect = heroSoulCollect;
        this.levelupGift = levelupGift;
        this.levelReward = levelReward;
        this.secondKill = secondKill;
        this.makeVip = makeVip;
        this.inviteFriend = inviteFriend;
        this.online = online;
        this.tcReward = tcReward;
        this.mail = mail;
        this.mall = mall;
        this.fortuneWheel = fortuneWheel;
        this.dayLogin = dayLogin;
        this.sendJunLing = sendJunLing;
        this.powerReward = powerReward;
        this.limitHero = limitHero;
        this.monthFirstCharge = monthFirstCharge;
        this.vitBuy = vitBuy;
        this.ladder = ladder;
        this.jinbiBuy = jinbiBuy;
        this.faction = faction;
        this.luckyBag = luckyBag;
        this.cornucopia = cornucopia;
        this.goodsExchange = goodsExchange;
        this.haoqingbao = haoqingbao;
        this.dayForeverLogin = dayForeverLogin;
        this.share = share;
        this.football = football;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ScriptReloadConfig _r = null;
        if(rhs instanceof ScriptReloadConfig)
        {
            _r = (ScriptReloadConfig)rhs;
        }

        if(_r != null)
        {
            if(activityList != _r.activityList)
            {
                return false;
            }
            if(announce != _r.announce)
            {
                return false;
            }
            if(sumChargeConsume != _r.sumChargeConsume)
            {
                return false;
            }
            if(dayChargeConsume != _r.dayChargeConsume)
            {
                return false;
            }
            if(growFoundation != _r.growFoundation)
            {
                return false;
            }
            if(sign != _r.sign)
            {
                return false;
            }
            if(heroAdmire != _r.heroAdmire)
            {
                return false;
            }
            if(heroSoulCollect != _r.heroSoulCollect)
            {
                return false;
            }
            if(levelupGift != _r.levelupGift)
            {
                return false;
            }
            if(levelReward != _r.levelReward)
            {
                return false;
            }
            if(secondKill != _r.secondKill)
            {
                return false;
            }
            if(makeVip != _r.makeVip)
            {
                return false;
            }
            if(inviteFriend != _r.inviteFriend)
            {
                return false;
            }
            if(online != _r.online)
            {
                return false;
            }
            if(tcReward != _r.tcReward)
            {
                return false;
            }
            if(mail != _r.mail)
            {
                return false;
            }
            if(mall != _r.mall)
            {
                return false;
            }
            if(fortuneWheel != _r.fortuneWheel)
            {
                return false;
            }
            if(dayLogin != _r.dayLogin)
            {
                return false;
            }
            if(sendJunLing != _r.sendJunLing)
            {
                return false;
            }
            if(powerReward != _r.powerReward)
            {
                return false;
            }
            if(limitHero != _r.limitHero)
            {
                return false;
            }
            if(monthFirstCharge != _r.monthFirstCharge)
            {
                return false;
            }
            if(vitBuy != _r.vitBuy)
            {
                return false;
            }
            if(ladder != _r.ladder)
            {
                return false;
            }
            if(jinbiBuy != _r.jinbiBuy)
            {
                return false;
            }
            if(faction != _r.faction)
            {
                return false;
            }
            if(luckyBag != _r.luckyBag)
            {
                return false;
            }
            if(cornucopia != _r.cornucopia)
            {
                return false;
            }
            if(goodsExchange != _r.goodsExchange)
            {
                return false;
            }
            if(haoqingbao != _r.haoqingbao)
            {
                return false;
            }
            if(dayForeverLogin != _r.dayForeverLogin)
            {
                return false;
            }
            if(share != _r.share)
            {
                return false;
            }
            if(football != _r.football)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ScriptReloadConfig");
        __h = IceInternal.HashUtil.hashAdd(__h, activityList);
        __h = IceInternal.HashUtil.hashAdd(__h, announce);
        __h = IceInternal.HashUtil.hashAdd(__h, sumChargeConsume);
        __h = IceInternal.HashUtil.hashAdd(__h, dayChargeConsume);
        __h = IceInternal.HashUtil.hashAdd(__h, growFoundation);
        __h = IceInternal.HashUtil.hashAdd(__h, sign);
        __h = IceInternal.HashUtil.hashAdd(__h, heroAdmire);
        __h = IceInternal.HashUtil.hashAdd(__h, heroSoulCollect);
        __h = IceInternal.HashUtil.hashAdd(__h, levelupGift);
        __h = IceInternal.HashUtil.hashAdd(__h, levelReward);
        __h = IceInternal.HashUtil.hashAdd(__h, secondKill);
        __h = IceInternal.HashUtil.hashAdd(__h, makeVip);
        __h = IceInternal.HashUtil.hashAdd(__h, inviteFriend);
        __h = IceInternal.HashUtil.hashAdd(__h, online);
        __h = IceInternal.HashUtil.hashAdd(__h, tcReward);
        __h = IceInternal.HashUtil.hashAdd(__h, mail);
        __h = IceInternal.HashUtil.hashAdd(__h, mall);
        __h = IceInternal.HashUtil.hashAdd(__h, fortuneWheel);
        __h = IceInternal.HashUtil.hashAdd(__h, dayLogin);
        __h = IceInternal.HashUtil.hashAdd(__h, sendJunLing);
        __h = IceInternal.HashUtil.hashAdd(__h, powerReward);
        __h = IceInternal.HashUtil.hashAdd(__h, limitHero);
        __h = IceInternal.HashUtil.hashAdd(__h, monthFirstCharge);
        __h = IceInternal.HashUtil.hashAdd(__h, vitBuy);
        __h = IceInternal.HashUtil.hashAdd(__h, ladder);
        __h = IceInternal.HashUtil.hashAdd(__h, jinbiBuy);
        __h = IceInternal.HashUtil.hashAdd(__h, faction);
        __h = IceInternal.HashUtil.hashAdd(__h, luckyBag);
        __h = IceInternal.HashUtil.hashAdd(__h, cornucopia);
        __h = IceInternal.HashUtil.hashAdd(__h, goodsExchange);
        __h = IceInternal.HashUtil.hashAdd(__h, haoqingbao);
        __h = IceInternal.HashUtil.hashAdd(__h, dayForeverLogin);
        __h = IceInternal.HashUtil.hashAdd(__h, share);
        __h = IceInternal.HashUtil.hashAdd(__h, football);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeBool(activityList);
        __os.writeBool(announce);
        __os.writeBool(sumChargeConsume);
        __os.writeBool(dayChargeConsume);
        __os.writeBool(growFoundation);
        __os.writeBool(sign);
        __os.writeBool(heroAdmire);
        __os.writeBool(heroSoulCollect);
        __os.writeBool(levelupGift);
        __os.writeBool(levelReward);
        __os.writeBool(secondKill);
        __os.writeBool(makeVip);
        __os.writeBool(inviteFriend);
        __os.writeBool(online);
        __os.writeBool(tcReward);
        __os.writeBool(mail);
        __os.writeBool(mall);
        __os.writeBool(fortuneWheel);
        __os.writeBool(dayLogin);
        __os.writeBool(sendJunLing);
        __os.writeBool(powerReward);
        __os.writeBool(limitHero);
        __os.writeBool(monthFirstCharge);
        __os.writeBool(vitBuy);
        __os.writeBool(ladder);
        __os.writeBool(jinbiBuy);
        __os.writeBool(faction);
        __os.writeBool(luckyBag);
        __os.writeBool(cornucopia);
        __os.writeBool(goodsExchange);
        __os.writeBool(haoqingbao);
        __os.writeBool(dayForeverLogin);
        __os.writeBool(share);
        __os.writeBool(football);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        activityList = __is.readBool();
        announce = __is.readBool();
        sumChargeConsume = __is.readBool();
        dayChargeConsume = __is.readBool();
        growFoundation = __is.readBool();
        sign = __is.readBool();
        heroAdmire = __is.readBool();
        heroSoulCollect = __is.readBool();
        levelupGift = __is.readBool();
        levelReward = __is.readBool();
        secondKill = __is.readBool();
        makeVip = __is.readBool();
        inviteFriend = __is.readBool();
        online = __is.readBool();
        tcReward = __is.readBool();
        mail = __is.readBool();
        mall = __is.readBool();
        fortuneWheel = __is.readBool();
        dayLogin = __is.readBool();
        sendJunLing = __is.readBool();
        powerReward = __is.readBool();
        limitHero = __is.readBool();
        monthFirstCharge = __is.readBool();
        vitBuy = __is.readBool();
        ladder = __is.readBool();
        jinbiBuy = __is.readBool();
        faction = __is.readBool();
        luckyBag = __is.readBool();
        cornucopia = __is.readBool();
        goodsExchange = __is.readBool();
        haoqingbao = __is.readBool();
        dayForeverLogin = __is.readBool();
        share = __is.readBool();
        football = __is.readBool();
    }

    public static final long serialVersionUID = -604687608L;
}
