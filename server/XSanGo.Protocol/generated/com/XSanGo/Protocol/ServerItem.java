// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `LoginSession.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ServerItem implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public int showId;

    public String name;

    public String ip;

    public int port;

    public int state;

    public boolean isNew;

    public int targetId;

    public ServerItem()
    {
    }

    public ServerItem(int id, int showId, String name, String ip, int port, int state, boolean isNew, int targetId)
    {
        this.id = id;
        this.showId = showId;
        this.name = name;
        this.ip = ip;
        this.port = port;
        this.state = state;
        this.isNew = isNew;
        this.targetId = targetId;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ServerItem _r = null;
        if(rhs instanceof ServerItem)
        {
            _r = (ServerItem)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(showId != _r.showId)
            {
                return false;
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(ip != _r.ip)
            {
                if(ip == null || _r.ip == null || !ip.equals(_r.ip))
                {
                    return false;
                }
            }
            if(port != _r.port)
            {
                return false;
            }
            if(state != _r.state)
            {
                return false;
            }
            if(isNew != _r.isNew)
            {
                return false;
            }
            if(targetId != _r.targetId)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ServerItem");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, showId);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, ip);
        __h = IceInternal.HashUtil.hashAdd(__h, port);
        __h = IceInternal.HashUtil.hashAdd(__h, state);
        __h = IceInternal.HashUtil.hashAdd(__h, isNew);
        __h = IceInternal.HashUtil.hashAdd(__h, targetId);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeInt(showId);
        __os.writeString(name);
        __os.writeString(ip);
        __os.writeInt(port);
        __os.writeInt(state);
        __os.writeBool(isNew);
        __os.writeInt(targetId);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        showId = __is.readInt();
        name = __is.readString();
        ip = __is.readString();
        port = __is.readInt();
        state = __is.readInt();
        isNew = __is.readBool();
        targetId = __is.readInt();
    }

    public static final long serialVersionUID = 1173298441L;
}
