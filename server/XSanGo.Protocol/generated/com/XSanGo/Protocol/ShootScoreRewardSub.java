// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class ShootScoreRewardSub implements java.lang.Cloneable, java.io.Serializable
{
    public String rank;

    public IntString[] items;

    public int baseScore;

    public ShootScoreRewardSub()
    {
    }

    public ShootScoreRewardSub(String rank, IntString[] items, int baseScore)
    {
        this.rank = rank;
        this.items = items;
        this.baseScore = baseScore;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ShootScoreRewardSub _r = null;
        if(rhs instanceof ShootScoreRewardSub)
        {
            _r = (ShootScoreRewardSub)rhs;
        }

        if(_r != null)
        {
            if(rank != _r.rank)
            {
                if(rank == null || _r.rank == null || !rank.equals(_r.rank))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(items, _r.items))
            {
                return false;
            }
            if(baseScore != _r.baseScore)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::ShootScoreRewardSub");
        __h = IceInternal.HashUtil.hashAdd(__h, rank);
        __h = IceInternal.HashUtil.hashAdd(__h, items);
        __h = IceInternal.HashUtil.hashAdd(__h, baseScore);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(rank);
        IntStringSeqHelper.write(__os, items);
        __os.writeInt(baseScore);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        rank = __is.readString();
        items = IntStringSeqHelper.read(__is);
        baseScore = __is.readInt();
    }

    public static final long serialVersionUID = 1744154926L;
}
