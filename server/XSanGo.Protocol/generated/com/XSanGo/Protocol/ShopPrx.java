// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Shop.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface ShopPrx extends Ice.ObjectPrx
{
    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     **/
    public String getShopView(int type)
        throws NoteException;

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getShopView(int type, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getShopView(int type);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getShopView(int type, java.util.Map<String, String> __ctx);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getShopView(int type, Ice.Callback __cb);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getShopView(int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getShopView(int type, Callback_Shop_getShopView __cb);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getShopView(int type, java.util.Map<String, String> __ctx, Callback_Shop_getShopView __cb);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __result The asynchronous result object.
     **/
    public String end_getShopView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __cb The callback object for the operation.
     **/
    public boolean getShopView_async(AMI_Shop_getShopView __cb, int type);

    /**
     * 获取商品列表 lua格式的ShopView[] type 0-商城 1-礼包
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getShopView_async(AMI_Shop_getShopView __cb, int type, java.util.Map<String, String> __ctx);

    /**
     * 购买商品 type 0-商城 1-礼包
     **/
    public void buyItem(int num, String id, int type)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     **/
    public void buyItem(int num, String id, int type, java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 购买商品 type 0-商城 1-礼包
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyItem(int num, String id, int type);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyItem(int num, String id, int type, java.util.Map<String, String> __ctx);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyItem(int num, String id, int type, Ice.Callback __cb);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyItem(int num, String id, int type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyItem(int num, String id, int type, Callback_Shop_buyItem __cb);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_buyItem(int num, String id, int type, java.util.Map<String, String> __ctx, Callback_Shop_buyItem __cb);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __result The asynchronous result object.
     **/
    public void end_buyItem(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __cb The callback object for the operation.
     **/
    public boolean buyItem_async(AMI_Shop_buyItem __cb, int num, String id, int type);

    /**
     * 购买商品 type 0-商城 1-礼包
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean buyItem_async(AMI_Shop_buyItem __cb, int num, String id, int type, java.util.Map<String, String> __ctx);
}
