// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SmithyExchange.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface SmithyExchangePrx extends Ice.ObjectPrx
{
    public String selMallList()
        throws NoteException;

    public String selMallList(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_selMallList();

    public Ice.AsyncResult begin_selMallList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_selMallList(Ice.Callback __cb);

    public Ice.AsyncResult begin_selMallList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_selMallList(Callback_SmithyExchange_selMallList __cb);

    public Ice.AsyncResult begin_selMallList(java.util.Map<String, String> __ctx, Callback_SmithyExchange_selMallList __cb);

    public String end_selMallList(Ice.AsyncResult __result)
        throws NoteException;

    public boolean selMallList_async(AMI_SmithyExchange_selMallList __cb);

    public boolean selMallList_async(AMI_SmithyExchange_selMallList __cb, java.util.Map<String, String> __ctx);

    public String refMallList()
        throws NotEnoughYuanBaoException,
               NoteException;

    public String refMallList(java.util.Map<String, String> __ctx)
        throws NotEnoughYuanBaoException,
               NoteException;

    public Ice.AsyncResult begin_refMallList();

    public Ice.AsyncResult begin_refMallList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_refMallList(Ice.Callback __cb);

    public Ice.AsyncResult begin_refMallList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_refMallList(Callback_SmithyExchange_refMallList __cb);

    public Ice.AsyncResult begin_refMallList(java.util.Map<String, String> __ctx, Callback_SmithyExchange_refMallList __cb);

    public String end_refMallList(Ice.AsyncResult __result)
        throws NotEnoughYuanBaoException,
               NoteException;

    public boolean refMallList_async(AMI_SmithyExchange_refMallList __cb);

    public boolean refMallList_async(AMI_SmithyExchange_refMallList __cb, java.util.Map<String, String> __ctx);

    public String exchangeItem(int storId)
        throws NoteException;

    public String exchangeItem(int storId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_exchangeItem(int storId);

    public Ice.AsyncResult begin_exchangeItem(int storId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_exchangeItem(int storId, Ice.Callback __cb);

    public Ice.AsyncResult begin_exchangeItem(int storId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_exchangeItem(int storId, Callback_SmithyExchange_exchangeItem __cb);

    public Ice.AsyncResult begin_exchangeItem(int storId, java.util.Map<String, String> __ctx, Callback_SmithyExchange_exchangeItem __cb);

    public String end_exchangeItem(Ice.AsyncResult __result)
        throws NoteException;

    public boolean exchangeItem_async(AMI_SmithyExchange_exchangeItem __cb, int storId);

    public boolean exchangeItem_async(AMI_SmithyExchange_exchangeItem __cb, int storId, java.util.Map<String, String> __ctx);

    public String selBlueMallList()
        throws NoteException;

    public String selBlueMallList(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_selBlueMallList();

    public Ice.AsyncResult begin_selBlueMallList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_selBlueMallList(Ice.Callback __cb);

    public Ice.AsyncResult begin_selBlueMallList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_selBlueMallList(Callback_SmithyExchange_selBlueMallList __cb);

    public Ice.AsyncResult begin_selBlueMallList(java.util.Map<String, String> __ctx, Callback_SmithyExchange_selBlueMallList __cb);

    public String end_selBlueMallList(Ice.AsyncResult __result)
        throws NoteException;

    public boolean selBlueMallList_async(AMI_SmithyExchange_selBlueMallList __cb);

    public boolean selBlueMallList_async(AMI_SmithyExchange_selBlueMallList __cb, java.util.Map<String, String> __ctx);

    public String refBlueMallList()
        throws NotEnoughMoneyException,
               NoteException;

    public String refBlueMallList(java.util.Map<String, String> __ctx)
        throws NotEnoughMoneyException,
               NoteException;

    public Ice.AsyncResult begin_refBlueMallList();

    public Ice.AsyncResult begin_refBlueMallList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_refBlueMallList(Ice.Callback __cb);

    public Ice.AsyncResult begin_refBlueMallList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_refBlueMallList(Callback_SmithyExchange_refBlueMallList __cb);

    public Ice.AsyncResult begin_refBlueMallList(java.util.Map<String, String> __ctx, Callback_SmithyExchange_refBlueMallList __cb);

    public String end_refBlueMallList(Ice.AsyncResult __result)
        throws NotEnoughMoneyException,
               NoteException;

    public boolean refBlueMallList_async(AMI_SmithyExchange_refBlueMallList __cb);

    public boolean refBlueMallList_async(AMI_SmithyExchange_refBlueMallList __cb, java.util.Map<String, String> __ctx);

    public String exchangeBlueItem(int storId)
        throws NoteException;

    public String exchangeBlueItem(int storId, java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_exchangeBlueItem(int storId);

    public Ice.AsyncResult begin_exchangeBlueItem(int storId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_exchangeBlueItem(int storId, Ice.Callback __cb);

    public Ice.AsyncResult begin_exchangeBlueItem(int storId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_exchangeBlueItem(int storId, Callback_SmithyExchange_exchangeBlueItem __cb);

    public Ice.AsyncResult begin_exchangeBlueItem(int storId, java.util.Map<String, String> __ctx, Callback_SmithyExchange_exchangeBlueItem __cb);

    public String end_exchangeBlueItem(Ice.AsyncResult __result)
        throws NoteException;

    public boolean exchangeBlueItem_async(AMI_SmithyExchange_exchangeBlueItem __cb, int storId);

    public boolean exchangeBlueItem_async(AMI_SmithyExchange_exchangeBlueItem __cb, int storId, java.util.Map<String, String> __ctx);

    public String preview()
        throws NoteException;

    public String preview(java.util.Map<String, String> __ctx)
        throws NoteException;

    public Ice.AsyncResult begin_preview();

    public Ice.AsyncResult begin_preview(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_preview(Ice.Callback __cb);

    public Ice.AsyncResult begin_preview(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_preview(Callback_SmithyExchange_preview __cb);

    public Ice.AsyncResult begin_preview(java.util.Map<String, String> __ctx, Callback_SmithyExchange_preview __cb);

    public String end_preview(Ice.AsyncResult __result)
        throws NoteException;

    public boolean preview_async(AMI_SmithyExchange_preview __cb);

    public boolean preview_async(AMI_SmithyExchange_preview __cb, java.util.Map<String, String> __ctx);
}
