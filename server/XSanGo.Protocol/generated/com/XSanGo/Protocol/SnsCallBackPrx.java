// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Sns.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface SnsCallBackPrx extends Ice.ObjectPrx
{
    public void applying(String player);

    public void applying(String player, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_applying(String player);

    public Ice.AsyncResult begin_applying(String player, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_applying(String player, Ice.Callback __cb);

    public Ice.AsyncResult begin_applying(String player, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_applying(String player, Callback_SnsCallBack_applying __cb);

    public Ice.AsyncResult begin_applying(String player, java.util.Map<String, String> __ctx, Callback_SnsCallBack_applying __cb);

    public void end_applying(Ice.AsyncResult __result);

    public boolean applying_async(AMI_SnsCallBack_applying __cb, String player);

    public boolean applying_async(AMI_SnsCallBack_applying __cb, String player, java.util.Map<String, String> __ctx);

    public void handleApplyingWith(Result r);

    public void handleApplyingWith(Result r, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_handleApplyingWith(Result r);

    public Ice.AsyncResult begin_handleApplyingWith(Result r, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_handleApplyingWith(Result r, Ice.Callback __cb);

    public Ice.AsyncResult begin_handleApplyingWith(Result r, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_handleApplyingWith(Result r, Callback_SnsCallBack_handleApplyingWith __cb);

    public Ice.AsyncResult begin_handleApplyingWith(Result r, java.util.Map<String, String> __ctx, Callback_SnsCallBack_handleApplyingWith __cb);

    public void end_handleApplyingWith(Ice.AsyncResult __result);

    public boolean handleApplyingWith_async(AMI_SnsCallBack_handleApplyingWith __cb, Result r);

    public boolean handleApplyingWith_async(AMI_SnsCallBack_handleApplyingWith __cb, Result r, java.util.Map<String, String> __ctx);
}
