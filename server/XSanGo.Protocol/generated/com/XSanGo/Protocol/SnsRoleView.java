// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Sns.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class SnsRoleView implements java.lang.Cloneable, java.io.Serializable
{
    public String id;

    public boolean isOnline;

    public String icon;

    public String name;

    public int level;

    public int vip;

    public int fightingPower;

    public boolean remainingActActAbilityPoints;

    public boolean canapplying;

    public int junLingNum;

    public int sendJunLingNum;

    public int friendPoint;

    public long offlineTime;

    public boolean eachOther;

    public SnsRoleView()
    {
    }

    public SnsRoleView(String id, boolean isOnline, String icon, String name, int level, int vip, int fightingPower, boolean remainingActActAbilityPoints, boolean canapplying, int junLingNum, int sendJunLingNum, int friendPoint, long offlineTime, boolean eachOther)
    {
        this.id = id;
        this.isOnline = isOnline;
        this.icon = icon;
        this.name = name;
        this.level = level;
        this.vip = vip;
        this.fightingPower = fightingPower;
        this.remainingActActAbilityPoints = remainingActActAbilityPoints;
        this.canapplying = canapplying;
        this.junLingNum = junLingNum;
        this.sendJunLingNum = sendJunLingNum;
        this.friendPoint = friendPoint;
        this.offlineTime = offlineTime;
        this.eachOther = eachOther;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SnsRoleView _r = null;
        if(rhs instanceof SnsRoleView)
        {
            _r = (SnsRoleView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(isOnline != _r.isOnline)
            {
                return false;
            }
            if(icon != _r.icon)
            {
                if(icon == null || _r.icon == null || !icon.equals(_r.icon))
                {
                    return false;
                }
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(level != _r.level)
            {
                return false;
            }
            if(vip != _r.vip)
            {
                return false;
            }
            if(fightingPower != _r.fightingPower)
            {
                return false;
            }
            if(remainingActActAbilityPoints != _r.remainingActActAbilityPoints)
            {
                return false;
            }
            if(canapplying != _r.canapplying)
            {
                return false;
            }
            if(junLingNum != _r.junLingNum)
            {
                return false;
            }
            if(sendJunLingNum != _r.sendJunLingNum)
            {
                return false;
            }
            if(friendPoint != _r.friendPoint)
            {
                return false;
            }
            if(offlineTime != _r.offlineTime)
            {
                return false;
            }
            if(eachOther != _r.eachOther)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::SnsRoleView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, isOnline);
        __h = IceInternal.HashUtil.hashAdd(__h, icon);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, vip);
        __h = IceInternal.HashUtil.hashAdd(__h, fightingPower);
        __h = IceInternal.HashUtil.hashAdd(__h, remainingActActAbilityPoints);
        __h = IceInternal.HashUtil.hashAdd(__h, canapplying);
        __h = IceInternal.HashUtil.hashAdd(__h, junLingNum);
        __h = IceInternal.HashUtil.hashAdd(__h, sendJunLingNum);
        __h = IceInternal.HashUtil.hashAdd(__h, friendPoint);
        __h = IceInternal.HashUtil.hashAdd(__h, offlineTime);
        __h = IceInternal.HashUtil.hashAdd(__h, eachOther);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(id);
        __os.writeBool(isOnline);
        __os.writeString(icon);
        __os.writeString(name);
        __os.writeInt(level);
        __os.writeInt(vip);
        __os.writeInt(fightingPower);
        __os.writeBool(remainingActActAbilityPoints);
        __os.writeBool(canapplying);
        __os.writeInt(junLingNum);
        __os.writeInt(sendJunLingNum);
        __os.writeInt(friendPoint);
        __os.writeLong(offlineTime);
        __os.writeBool(eachOther);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readString();
        isOnline = __is.readBool();
        icon = __is.readString();
        name = __is.readString();
        level = __is.readInt();
        vip = __is.readInt();
        fightingPower = __is.readInt();
        remainingActActAbilityPoints = __is.readBool();
        canapplying = __is.readBool();
        junLingNum = __is.readInt();
        sendJunLingNum = __is.readInt();
        friendPoint = __is.readInt();
        offlineTime = __is.readLong();
        eachOther = __is.readBool();
    }

    public static final long serialVersionUID = -580746587L;
}
