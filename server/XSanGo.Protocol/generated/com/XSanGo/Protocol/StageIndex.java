// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `CrossServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public enum StageIndex implements java.io.Serializable
{
    
    NotStart(0),
    
    SignUp(1),
    
    QT(2),
    
    S32(3),
    
    S16(4),
    
    S8(5),
    
    S4(6),
    
    S2(7),
    
    End(8);

    public int
    value()
    {
        return __value;
    }

    public static StageIndex
    valueOf(int __v)
    {
        switch(__v)
        {
        case 0:
            return NotStart;
        case 1:
            return SignUp;
        case 2:
            return QT;
        case 3:
            return S32;
        case 4:
            return S16;
        case 5:
            return S8;
        case 6:
            return S4;
        case 7:
            return S2;
        case 8:
            return End;
        }
        return null;
    }

    private
    StageIndex(int __v)
    {
        __value = __v;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeEnum(value(), 8);
    }

    public static StageIndex
    __read(IceInternal.BasicStream __is)
    {
        int __v = __is.readEnum(8);
        return __validate(__v);
    }

    private static StageIndex
    __validate(int __v)
    {
        final StageIndex __e = valueOf(__v);
        if(__e == null)
        {
            throw new Ice.MarshalException("enumerator value " + __v + " is out of range");
        }
        return __e;
    }

    private final int __value;
}
