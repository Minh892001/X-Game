// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class SummationActivityView implements java.lang.Cloneable, java.io.Serializable
{
    public int total;

    public int remainSeconds;

    public SummationReward[] configs;

    public SummationActivityView()
    {
    }

    public SummationActivityView(int total, int remainSeconds, SummationReward[] configs)
    {
        this.total = total;
        this.remainSeconds = remainSeconds;
        this.configs = configs;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SummationActivityView _r = null;
        if(rhs instanceof SummationActivityView)
        {
            _r = (SummationActivityView)rhs;
        }

        if(_r != null)
        {
            if(total != _r.total)
            {
                return false;
            }
            if(remainSeconds != _r.remainSeconds)
            {
                return false;
            }
            if(!java.util.Arrays.equals(configs, _r.configs))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::SummationActivityView");
        __h = IceInternal.HashUtil.hashAdd(__h, total);
        __h = IceInternal.HashUtil.hashAdd(__h, remainSeconds);
        __h = IceInternal.HashUtil.hashAdd(__h, configs);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(total);
        __os.writeInt(remainSeconds);
        SummationRewardSeqHelper.write(__os, configs);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        total = __is.readInt();
        remainSeconds = __is.readInt();
        configs = SummationRewardSeqHelper.read(__is);
    }

    public static final long serialVersionUID = -1965817752L;
}
