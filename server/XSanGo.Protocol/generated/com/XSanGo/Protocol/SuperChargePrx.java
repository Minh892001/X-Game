// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SuperCharge.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface SuperChargePrx extends Ice.ObjectPrx
{
    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     **/
    public String getSuperChargeView()
        throws NoteException;

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getSuperChargeView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSuperChargeView();

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSuperChargeView(java.util.Map<String, String> __ctx);

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSuperChargeView(Ice.Callback __cb);

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSuperChargeView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSuperChargeView(Callback_SuperCharge_getSuperChargeView __cb);

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getSuperChargeView(java.util.Map<String, String> __ctx, Callback_SuperCharge_getSuperChargeView __cb);

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getSuperChargeView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getSuperChargeView_async(AMI_SuperCharge_getSuperChargeView __cb);

    /**
     * 获取感恩回馈VIEW，返回SuperChargeView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getSuperChargeView_async(AMI_SuperCharge_getSuperChargeView __cb, java.util.Map<String, String> __ctx);

    /**
     * 领取充值奖励
     **/
    public String receiveSuperChargeReward(int id)
        throws NoteException;

    /**
     * 领取充值奖励
     * @param __ctx The Context map to send with the invocation.
     **/
    public String receiveSuperChargeReward(int id, java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 领取充值奖励
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveSuperChargeReward(int id);

    /**
     * 领取充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveSuperChargeReward(int id, java.util.Map<String, String> __ctx);

    /**
     * 领取充值奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveSuperChargeReward(int id, Ice.Callback __cb);

    /**
     * 领取充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveSuperChargeReward(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 领取充值奖励
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveSuperChargeReward(int id, Callback_SuperCharge_receiveSuperChargeReward __cb);

    /**
     * 领取充值奖励
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_receiveSuperChargeReward(int id, java.util.Map<String, String> __ctx, Callback_SuperCharge_receiveSuperChargeReward __cb);

    /**
     * 领取充值奖励
     * @param __result The asynchronous result object.
     **/
    public String end_receiveSuperChargeReward(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 领取充值奖励
     * @param __cb The callback object for the operation.
     **/
    public boolean receiveSuperChargeReward_async(AMI_SuperCharge_receiveSuperChargeReward __cb, int id);

    /**
     * 领取充值奖励
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean receiveSuperChargeReward_async(AMI_SuperCharge_receiveSuperChargeReward __cb, int id, java.util.Map<String, String> __ctx);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     **/
    public String getRaffleView()
        throws NoteException;

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getRaffleView(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRaffleView();

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRaffleView(java.util.Map<String, String> __ctx);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRaffleView(Ice.Callback __cb);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRaffleView(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRaffleView(Callback_SuperCharge_getRaffleView __cb);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getRaffleView(java.util.Map<String, String> __ctx, Callback_SuperCharge_getRaffleView __cb);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __result The asynchronous result object.
     **/
    public String end_getRaffleView(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __cb The callback object for the operation.
     **/
    public boolean getRaffleView_async(AMI_SuperCharge_getRaffleView __cb);

    /**
     * 获取超级转盘view,返回RaffleView的lua
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getRaffleView_async(AMI_SuperCharge_getRaffleView __cb, java.util.Map<String, String> __ctx);

    /**
     * 转盘抽奖
     **/
    public String acceptRaffleReward()
        throws NoteException;

    /**
     * 转盘抽奖
     * @param __ctx The Context map to send with the invocation.
     **/
    public String acceptRaffleReward(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 转盘抽奖
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptRaffleReward();

    /**
     * 转盘抽奖
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptRaffleReward(java.util.Map<String, String> __ctx);

    /**
     * 转盘抽奖
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptRaffleReward(Ice.Callback __cb);

    /**
     * 转盘抽奖
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptRaffleReward(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 转盘抽奖
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptRaffleReward(Callback_SuperCharge_acceptRaffleReward __cb);

    /**
     * 转盘抽奖
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_acceptRaffleReward(java.util.Map<String, String> __ctx, Callback_SuperCharge_acceptRaffleReward __cb);

    /**
     * 转盘抽奖
     * @param __result The asynchronous result object.
     **/
    public String end_acceptRaffleReward(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 转盘抽奖
     * @param __cb The callback object for the operation.
     **/
    public boolean acceptRaffleReward_async(AMI_SuperCharge_acceptRaffleReward __cb);

    /**
     * 转盘抽奖
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean acceptRaffleReward_async(AMI_SuperCharge_acceptRaffleReward __cb, java.util.Map<String, String> __ctx);

    /**
     * 获取领奖列表信息
     **/
    public String getReceivedViews()
        throws NoteException;

    /**
     * 获取领奖列表信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getReceivedViews(java.util.Map<String, String> __ctx)
        throws NoteException;

    /**
     * 获取领奖列表信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getReceivedViews();

    /**
     * 获取领奖列表信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getReceivedViews(java.util.Map<String, String> __ctx);

    /**
     * 获取领奖列表信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getReceivedViews(Ice.Callback __cb);

    /**
     * 获取领奖列表信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getReceivedViews(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取领奖列表信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getReceivedViews(Callback_SuperCharge_getReceivedViews __cb);

    /**
     * 获取领奖列表信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getReceivedViews(java.util.Map<String, String> __ctx, Callback_SuperCharge_getReceivedViews __cb);

    /**
     * 获取领奖列表信息
     * @param __result The asynchronous result object.
     **/
    public String end_getReceivedViews(Ice.AsyncResult __result)
        throws NoteException;

    /**
     * 获取领奖列表信息
     * @param __cb The callback object for the operation.
     **/
    public boolean getReceivedViews_async(AMI_SuperCharge_getReceivedViews __cb);

    /**
     * 获取领奖列表信息
     * @param __cb The callback object for the operation.
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean getReceivedViews_async(AMI_SuperCharge_getReceivedViews __cb, java.util.Map<String, String> __ctx);
}
