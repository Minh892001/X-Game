// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Task.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class TaskItem implements java.lang.Cloneable, java.io.Serializable
{
    public int taskId;

    public int type;

    public int taskNum;

    public int taskState;

    public long taskTime;

    public TaskItem()
    {
    }

    public TaskItem(int taskId, int type, int taskNum, int taskState, long taskTime)
    {
        this.taskId = taskId;
        this.type = type;
        this.taskNum = taskNum;
        this.taskState = taskState;
        this.taskTime = taskTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TaskItem _r = null;
        if(rhs instanceof TaskItem)
        {
            _r = (TaskItem)rhs;
        }

        if(_r != null)
        {
            if(taskId != _r.taskId)
            {
                return false;
            }
            if(type != _r.type)
            {
                return false;
            }
            if(taskNum != _r.taskNum)
            {
                return false;
            }
            if(taskState != _r.taskState)
            {
                return false;
            }
            if(taskTime != _r.taskTime)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::TaskItem");
        __h = IceInternal.HashUtil.hashAdd(__h, taskId);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, taskNum);
        __h = IceInternal.HashUtil.hashAdd(__h, taskState);
        __h = IceInternal.HashUtil.hashAdd(__h, taskTime);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(taskId);
        __os.writeInt(type);
        __os.writeInt(taskNum);
        __os.writeInt(taskState);
        __os.writeLong(taskTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        taskId = __is.readInt();
        type = __is.readInt();
        taskNum = __is.readInt();
        taskState = __is.readInt();
        taskTime = __is.readLong();
    }

    public static final long serialVersionUID = 2052293710L;
}
