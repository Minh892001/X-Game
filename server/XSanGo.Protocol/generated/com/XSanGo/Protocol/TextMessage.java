// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class TextMessage implements java.lang.Cloneable, java.io.Serializable
{
    public ChatChannel channel;

    public MessageAttachObject[] attachs;

    public ChatRole cRole;

    public int type;

    public String content;

    public int isCahceMsg;

    public int identity;

    public TextMessage()
    {
    }

    public TextMessage(ChatChannel channel, MessageAttachObject[] attachs, ChatRole cRole, int type, String content, int isCahceMsg, int identity)
    {
        this.channel = channel;
        this.attachs = attachs;
        this.cRole = cRole;
        this.type = type;
        this.content = content;
        this.isCahceMsg = isCahceMsg;
        this.identity = identity;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TextMessage _r = null;
        if(rhs instanceof TextMessage)
        {
            _r = (TextMessage)rhs;
        }

        if(_r != null)
        {
            if(channel != _r.channel)
            {
                if(channel == null || _r.channel == null || !channel.equals(_r.channel))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(attachs, _r.attachs))
            {
                return false;
            }
            if(cRole != _r.cRole)
            {
                if(cRole == null || _r.cRole == null || !cRole.equals(_r.cRole))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                return false;
            }
            if(content != _r.content)
            {
                if(content == null || _r.content == null || !content.equals(_r.content))
                {
                    return false;
                }
            }
            if(isCahceMsg != _r.isCahceMsg)
            {
                return false;
            }
            if(identity != _r.identity)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::TextMessage");
        __h = IceInternal.HashUtil.hashAdd(__h, channel);
        __h = IceInternal.HashUtil.hashAdd(__h, attachs);
        __h = IceInternal.HashUtil.hashAdd(__h, cRole);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, content);
        __h = IceInternal.HashUtil.hashAdd(__h, isCahceMsg);
        __h = IceInternal.HashUtil.hashAdd(__h, identity);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        channel.__write(__os);
        MessageAttachObjectSeqHelper.write(__os, attachs);
        cRole.__write(__os);
        __os.writeInt(type);
        __os.writeString(content);
        __os.writeInt(isCahceMsg);
        __os.writeInt(identity);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        channel = ChatChannel.__read(__is);
        attachs = MessageAttachObjectSeqHelper.read(__is);
        cRole = new ChatRole();
        cRole.__read(__is);
        type = __is.readInt();
        content = __is.readString();
        isCahceMsg = __is.readInt();
        identity = __is.readInt();
    }

    public static final long serialVersionUID = -898854779L;
}
