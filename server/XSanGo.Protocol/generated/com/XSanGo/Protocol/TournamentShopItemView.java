// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Tournament.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class TournamentShopItemView implements java.lang.Cloneable, java.io.Serializable
{
    public int type;

    public String id;

    public int price;

    public int limit;

    public int buyCount;

    public String desc;

    public String iconType;

    public TournamentShopItemView()
    {
    }

    public TournamentShopItemView(int type, String id, int price, int limit, int buyCount, String desc, String iconType)
    {
        this.type = type;
        this.id = id;
        this.price = price;
        this.limit = limit;
        this.buyCount = buyCount;
        this.desc = desc;
        this.iconType = iconType;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TournamentShopItemView _r = null;
        if(rhs instanceof TournamentShopItemView)
        {
            _r = (TournamentShopItemView)rhs;
        }

        if(_r != null)
        {
            if(type != _r.type)
            {
                return false;
            }
            if(id != _r.id)
            {
                if(id == null || _r.id == null || !id.equals(_r.id))
                {
                    return false;
                }
            }
            if(price != _r.price)
            {
                return false;
            }
            if(limit != _r.limit)
            {
                return false;
            }
            if(buyCount != _r.buyCount)
            {
                return false;
            }
            if(desc != _r.desc)
            {
                if(desc == null || _r.desc == null || !desc.equals(_r.desc))
                {
                    return false;
                }
            }
            if(iconType != _r.iconType)
            {
                if(iconType == null || _r.iconType == null || !iconType.equals(_r.iconType))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::TournamentShopItemView");
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, price);
        __h = IceInternal.HashUtil.hashAdd(__h, limit);
        __h = IceInternal.HashUtil.hashAdd(__h, buyCount);
        __h = IceInternal.HashUtil.hashAdd(__h, desc);
        __h = IceInternal.HashUtil.hashAdd(__h, iconType);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(type);
        __os.writeString(id);
        __os.writeInt(price);
        __os.writeInt(limit);
        __os.writeInt(buyCount);
        __os.writeString(desc);
        __os.writeString(iconType);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        type = __is.readInt();
        id = __is.readString();
        price = __is.readInt();
        limit = __is.readInt();
        buyCount = __is.readInt();
        desc = __is.readString();
        iconType = __is.readString();
    }

    public static final long serialVersionUID = 1422312744L;
}
