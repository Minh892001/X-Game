// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public class UpActivityInfoView implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public int level;

    public int yuanbao;

    public int vip;

    public boolean draw;

    public UpActivityInfoView()
    {
    }

    public UpActivityInfoView(int id, int level, int yuanbao, int vip, boolean draw)
    {
        this.id = id;
        this.level = level;
        this.yuanbao = yuanbao;
        this.vip = vip;
        this.draw = draw;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UpActivityInfoView _r = null;
        if(rhs instanceof UpActivityInfoView)
        {
            _r = (UpActivityInfoView)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(level != _r.level)
            {
                return false;
            }
            if(yuanbao != _r.yuanbao)
            {
                return false;
            }
            if(vip != _r.vip)
            {
                return false;
            }
            if(draw != _r.draw)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::UpActivityInfoView");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, level);
        __h = IceInternal.HashUtil.hashAdd(__h, yuanbao);
        __h = IceInternal.HashUtil.hashAdd(__h, vip);
        __h = IceInternal.HashUtil.hashAdd(__h, draw);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeInt(level);
        __os.writeInt(yuanbao);
        __os.writeInt(vip);
        __os.writeBool(draw);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        level = __is.readInt();
        yuanbao = __is.readInt();
        vip = __is.readInt();
        draw = __is.readBool();
    }

    public static final long serialVersionUID = -1035419961L;
}
