// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Faction.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 公会仓库物品
 **/
public class WarehouseItem implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public boolean isOpen;

    public int openLevel;

    public String itemId;

    public long itemNum;

    public int queueSize;

    public boolean isApply;

    public boolean isDemand;

    public WarehouseItem()
    {
    }

    public WarehouseItem(int id, boolean isOpen, int openLevel, String itemId, long itemNum, int queueSize, boolean isApply, boolean isDemand)
    {
        this.id = id;
        this.isOpen = isOpen;
        this.openLevel = openLevel;
        this.itemId = itemId;
        this.itemNum = itemNum;
        this.queueSize = queueSize;
        this.isApply = isApply;
        this.isDemand = isDemand;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        WarehouseItem _r = null;
        if(rhs instanceof WarehouseItem)
        {
            _r = (WarehouseItem)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(isOpen != _r.isOpen)
            {
                return false;
            }
            if(openLevel != _r.openLevel)
            {
                return false;
            }
            if(itemId != _r.itemId)
            {
                if(itemId == null || _r.itemId == null || !itemId.equals(_r.itemId))
                {
                    return false;
                }
            }
            if(itemNum != _r.itemNum)
            {
                return false;
            }
            if(queueSize != _r.queueSize)
            {
                return false;
            }
            if(isApply != _r.isApply)
            {
                return false;
            }
            if(isDemand != _r.isDemand)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::XSanGo::Protocol::WarehouseItem");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, isOpen);
        __h = IceInternal.HashUtil.hashAdd(__h, openLevel);
        __h = IceInternal.HashUtil.hashAdd(__h, itemId);
        __h = IceInternal.HashUtil.hashAdd(__h, itemNum);
        __h = IceInternal.HashUtil.hashAdd(__h, queueSize);
        __h = IceInternal.HashUtil.hashAdd(__h, isApply);
        __h = IceInternal.HashUtil.hashAdd(__h, isDemand);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeBool(isOpen);
        __os.writeInt(openLevel);
        __os.writeString(itemId);
        __os.writeLong(itemNum);
        __os.writeInt(queueSize);
        __os.writeBool(isApply);
        __os.writeBool(isDemand);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        isOpen = __is.readBool();
        openLevel = __is.readInt();
        itemId = __is.readString();
        itemNum = __is.readLong();
        queueSize = __is.readInt();
        isApply = __is.readBool();
        isDemand = __is.readBool();
    }

    public static final long serialVersionUID = -1056105699L;
}
