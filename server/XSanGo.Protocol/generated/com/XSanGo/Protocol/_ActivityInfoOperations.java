// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Activity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface _ActivityInfoOperations
{
    /**
     * 活动列表 lua格式activityInfoAll
     * @param __current The Current object for the invocation.
     **/
    String activityList(Ice.Current __current)
        throws NoteException;

    /**
     * 升级奖励活动内容信息 lua格式UpActivityInfoViewSeq
     * @param __current The Current object for the invocation.
     **/
    String upActivityInfoList(Ice.Current __current)
        throws NoteException;

    /**
     * 升级奖励领取礼包 giftId:礼包Id
     * @param __current The Current object for the invocation.
     **/
    boolean getGift(int giftId, Ice.Current __current)
        throws NoteException;

    /**
     * 点击活动列表的 我要做VIP按钮 返回是否可作答
     * @param __current The Current object for the invocation.
     **/
    boolean clickMakeVip(Ice.Current __current);

    /**
     * 开始答题 id,id,id
     * @param __current The Current object for the invocation.
     **/
    String beginAnswer(Ice.Current __current)
        throws NoteException;

    /**
     * 结束答题返回增加的VIP经验 格式：id,answer;id,answer
     * @param __current The Current object for the invocation.
     **/
    int endAnswer(String str, Ice.Current __current)
        throws NoteException;

    String getSummationActivityViewForCharge(Ice.Current __current)
        throws NoteException;

    void receiveRewardForSumCharge(int threshold, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    String getSummationActivityViewForConsume(Ice.Current __current)
        throws NoteException;

    void receiveRewardForSumConsume(int threshold, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 获取邀请好友活动信息，返回InviteActivityView的lua
     * @param __current The Current object for the invocation.
     **/
    String getInviteActivityView(Ice.Current __current)
        throws NoteException;

    /**
     * 领取邀请好友奖励
     * @param __current The Current object for the invocation.
     **/
    void receiveRewardForInvite(int threshoId, Ice.Current __current)
        throws NoteException;

    String getFundView(Ice.Current __current)
        throws NoteException;

    void acceptFundReward(int level, Ice.Current __current)
        throws NoteException;

    void buyFund(Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    String getLevelRewardView(Ice.Current __current)
        throws NoteException;

    void acceptLevelReward(int level, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    String getFirstJiaRewardView(Ice.Current __current)
        throws NoteException;

    void acceptFirstJiaReward(int level, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    String getDayLoginRewardView(Ice.Current __current)
        throws NoteException;

    void acceptDayLoginReward(int day, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    String getDayforverLoginRewardView(Ice.Current __current)
        throws NoteException;

    void acceptDayforverLoginReward(int day, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    String getOpenServerActiveView(Ice.Current __current)
        throws NoteException;

    void acceptOpenServerActiveReward(int active, int nodeId, Ice.Current __current)
        throws NoteException;

    String buysale(int activeId, int day, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    String getSendJunLingView(Ice.Current __current)
        throws NoteException;

    int acceptJunLing(int id, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    String getPowerRewardView(Ice.Current __current)
        throws NoteException;

    void acceptPowerReward(int power, Ice.Current __current)
        throws NoteException;

    /**
     * 获取秒杀活动信息 返回SeckillActivityView的lua
     * @param __current The Current object for the invocation.
     **/
    String getSeckillView(Ice.Current __current)
        throws NoteException;

    /**
     * 秒杀物品
     * @param __current The Current object for the invocation.
     **/
    void seckillItem(int id, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 获取日充值活动信息，返回SummationActivityView的lua
     * @param __current The Current object for the invocation.
     **/
    String getDayChargeView(Ice.Current __current)
        throws NoteException;

    /**
     * 领取日充值奖励
     * @param __current The Current object for the invocation.
     **/
    void receiveDayCharge(int threshold, Ice.Current __current)
        throws NoteException;

    /**
     * 获取日消费活动信息，返回SummationActivityView的lua
     * @param __current The Current object for the invocation.
     **/
    String getDayConsumeView(Ice.Current __current)
        throws NoteException;

    /**
     * 领取日消费奖励
     * @param __current The Current object for the invocation.
     **/
    void receiveDayConsume(int threshold, Ice.Current __current)
        throws NoteException;

    /**
     * 获取copy日充值活动信息，返回SummationActivityView的lua
     * @param __current The Current object for the invocation.
     **/
    String getBigDayChargeView(Ice.Current __current)
        throws NoteException;

    /**
     * 领取copy日充值奖励
     * @param __current The Current object for the invocation.
     **/
    void receiveBigDayCharge(int threshold, Ice.Current __current)
        throws NoteException;

    /**
     * 获取copy日消费活动信息，返回SummationActivityView的lua
     * @param __current The Current object for the invocation.
     **/
    String getBigDayConsumeView(Ice.Current __current)
        throws NoteException;

    /**
     * 领取copy日消费奖励
     * @param __current The Current object for the invocation.
     **/
    void receiveBigDayConsume(int threshold, Ice.Current __current)
        throws NoteException;

    String getBigSummationActivityViewForCharge(Ice.Current __current)
        throws NoteException;

    void receiveBigRewardForSumCharge(int threshold, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    String getBigSummationActivityViewForConsume(Ice.Current __current)
        throws NoteException;

    void receiveBigRewardForSumConsume(int threshold, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    String getFortuneWheelView(Ice.Current __current)
        throws NoteException;

    String doFortuneWheel(Ice.Current __current)
        throws NoteException;

    String doFortuneWheelFor10(Ice.Current __current)
        throws NoteException;

    /**
     * 获取聚宝盆view，返回CornucopiaView的lua
     * @param __current The Current object for the invocation.
     **/
    String getCornucopiaView(Ice.Current __current)
        throws NoteException;

    /**
     * 聚宝盆一键购买
     * @param __current The Current object for the invocation.
     **/
    void buyAllCornucopia(Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 聚宝盆购买单项物品
     * @param __current The Current object for the invocation.
     **/
    void buyCornucopia(int id, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    /**
     * 领取聚宝盆超值礼包
     * @param __current The Current object for the invocation.
     **/
    void getSupperCornucopia(Ice.Current __current)
        throws NoteException;

    /**
     * 领取聚宝盆普通物品
     * @param __current The Current object for the invocation.
     **/
    void getCornucopia(int id, Ice.Current __current)
        throws NoteException;

    /**
     * 一键领取聚宝盆物品
     * @param __current The Current object for the invocation.
     **/
    void getAllCornucopia(Ice.Current __current)
        throws NoteException;

    /**
     * 获取兑换列表
     * @param __current The Current object for the invocation.
     **/
    String getExchangeItems(int itemType, Ice.Current __current)
        throws NoteException;

    /**
     * 兑换物品,成功返回1，兑换失败返回0
     * @param __current The Current object for the invocation.
     **/
    String doExchangeItems(String exchangeNo, int itemType, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 等级福利信息, 返回 LevelWealView
     * @param __current The Current object for the invocation.
     **/
    LevelWealView levelWealInfo(Ice.Current __current)
        throws NoteException;

    /**
     * 领取等级福利
     * @param __current The Current object for the invocation.
     **/
    int getLevelWeal(Ice.Current __current)
        throws NoteException;

    /**
     * 百步穿杨, 返回 MarksmanView systemType 1:普通  2:超级百步
     * @param __current The Current object for the invocation.
     **/
    String openMarksmanView(int systemType, Ice.Current __current)
        throws NoteException;

    /**
     * 百步穿杨射击, 返回 MarksmanView  1:普通 2:超级百步
     * @param __current The Current object for the invocation.
     **/
    String shootReward(int shootType, int systemType, Ice.Current __current)
        throws NotEnoughException,
               NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 百步穿杨 积分领奖 return  ShootAwardInfoSeq
     * @param __current The Current object for the invocation.
     **/
    String getScoreReward(int score, Ice.Current __current)
        throws NoteException;

    /**
     * 百步穿杨积分排名, 返回 MarksmanScoreRankView
     * @param __current The Current object for the invocation.
     **/
    String openMarksmanScoreRankView(Ice.Current __current)
        throws NoteException;

    /**
     * 百步穿杨积分排名奖励, 返回 MarksmanScoreRewardView
     * @param __current The Current object for the invocation.
     **/
    String openMarksmanScoreRewardView(Ice.Current __current)
        throws NoteException;

    /**
     * 是否显示我的中奖记录
     * @param __current The Current object for the invocation.
     **/
    void showMyRecord(boolean show, Ice.Current __current)
        throws NoteException;

    /**
     * 累计获得的奖励
     * @param __current The Current object for the invocation.
     **/
    String historyAward(Ice.Current __current)
        throws NoteException;

    void receiveApiReward(int actId, int targetCount, Ice.Current __current)
        throws NoteException;

    /**
     * 大富温主界面, 返回 GridPageView
     * @param __current The Current object for the invocation.
     **/
    String gridPageView(Ice.Current __current)
        throws NoteException;

    /**
     * 神秘商店界面, 返回 LettoryShopView
     * @param __current The Current object for the invocation.
     **/
    String lettoryshopView(Ice.Current __current)
        throws NoteException;

    /**
     * 神秘商店购买, 返回 LettoryShopView
     * @param __current The Current object for the invocation.
     **/
    String lettoryshopBuy(int id, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 摇骰子, 返回 RoleBaseSub  type:0：普通 1：遥控
     * @param __current The Current object for the invocation.
     **/
    String throwBall(int type, int point, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 排行奖励界面, 返回 RankPageView
     * @param __current The Current object for the invocation.
     **/
    String lettoryRankView(Ice.Current __current)
        throws NoteException;

    /**
     * 大富温排行界面, 返回 LotteryScoreRankView
     * @param __current The Current object for the invocation.
     **/
    String lotteryScoreRankView(Ice.Current __current)
        throws NoteException;

    /**
     * 大富温巡回圈数奖励界面, 返回 LotteryCycleView
     * @param __current The Current object for the invocation.
     **/
    String lotteryCycleView(Ice.Current __current)
        throws NoteException;

    /**
     * 分享活动主界面, 返回 ShareView
     * @param __current The Current object for the invocation.
     **/
    String sharePageView(Ice.Current __current)
        throws NoteException;

    /**
     * 分享    ShareSub
     * @param __current The Current object for the invocation.
     **/
    String share(int id, Ice.Current __current)
        throws NoteException;

    /**
     * 请求资源找回界面, return ResourceBackView
     * @param __current The Current object for the invocation.
     **/
    String getResourceBackView(Ice.Current __current)
        throws NoteException;

    /**
     * 接受奖励，return ItemView
     * @param __current The Current object for the invocation.
     **/
    void acceptResourceBack(String date, int type, int slot, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 一键找回
     * @param __current The Current object for the invocation.
     **/
    void acceptResourceBackOneKey(String date, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    /**
     * 欧洲杯活动主界面数据,return:FootballView的lua
     * @param __current The Current object for the invocation.
     **/
    String getFootballView(Ice.Current __current)
        throws NoteException;

    /**
     * 获取对应国家的所有比赛,return:FootballMatchSeq的lua
     * @param __current The Current object for the invocation.
     **/
    String getCountryMatch(int countryId, Ice.Current __current)
        throws NoteException;

    /**
     * 购买奖杯,return:最新奖杯数量
     * @param __current The Current object for the invocation.
     **/
    int buyTrophy(Ice.Current __current)
        throws NoteException;

    /**
     * 押注，平局countryId传-1
     * @param __current The Current object for the invocation.
     **/
    int footballBet(int id, int countryId, int num, Ice.Current __current)
        throws NoteException;

    /**
     * 商店物品return:FootballShopSeq的lua
     * @param __current The Current object for the invocation.
     **/
    String getFootballShops(Ice.Current __current)
        throws NoteException;

    /**
     * 商店兑换
     * @param __current The Current object for the invocation.
     **/
    int footballExchange(int id, int num, Ice.Current __current)
        throws NoteException;

    /**
     * 球队排行榜,return:IntIntPairSeq的lua
     * @param __current The Current object for the invocation.
     **/
    String footballRank(Ice.Current __current)
        throws NoteException;

    /**
     * 获取竞猜日志,return:FootballBetLogSeq的lua
     * @param __current The Current object for the invocation.
     **/
    String footballBetLogs(Ice.Current __current)
        throws NoteException;
}
