// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ArenaRank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface _ArenaRankOperations
{
    void selectRank_async(AMD_ArenaRank_selectRank __cb, Ice.Current __current)
        throws NoteException;

    void selectRivalRank_async(AMD_ArenaRank_selectRivalRank __cb, Ice.Current __current)
        throws NoteException;

    void saveGuard(String guardId, Ice.Current __current)
        throws NoteException;

    void setSneer(int sneerId, String sneerStr, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    void buyChallenge(Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    void selHundredRank_async(AMD_ArenaRank_selHundredRank __cb, Ice.Current __current)
        throws NoteException;

    String selMallList(Ice.Current __current)
        throws NoteException;

    String refMallList(Ice.Current __current)
        throws NoteException;

    String exchangeItem(int storId, Ice.Current __current)
        throws NoteException;

    void robFightReport_async(AMD_ArenaRank_robFightReport __cb, Ice.Current __current)
        throws NoteException;

    void beginRevenge_async(AMD_ArenaRank_beginRevenge __cb, String targetId, String formationId, Ice.Current __current)
        throws NoteException;

    void endRevenge_async(AMD_ArenaRank_endRevenge __cb, String targetId, int resFlag, byte remainHero, Ice.Current __current)
        throws NoteException;

    void revenge_async(AMD_ArenaRank_revenge __cb, String targetId, String formationId, Ice.Current __current)
        throws NoteException;

    void strutReport(String reportId, int channelType, String targetId, String content, Ice.Current __current)
        throws NoFactionException,
               NoGroupException,
               NoteException;

    void beginChallenge_async(AMD_ArenaRank_beginChallenge __cb, String targetId, String formationId, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    void endChallenge_async(AMD_ArenaRank_endChallenge __cb, String targetId, int resFlag, byte remainHero, Ice.Current __current)
        throws NoteException;

    void challenge_async(AMD_ArenaRank_challenge __cb, String targetId, String formationId, Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    void clearCD(Ice.Current __current)
        throws NotEnoughMoneyException,
               NotEnoughYuanBaoException,
               NoteException;

    void uploadFightMovie(String id, FightMovieView movie, Ice.Current __current)
        throws NoteException;

    void getFightMovie_async(AMD_ArenaRank_getFightMovie __cb, String id, Ice.Current __current)
        throws NoteException;

    /**
     * 进入跨服竞技场，return OwnRank的lua
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void enterCrossArena_async(AMD_ArenaRank_enterCrossArena __cb, Ice.Current __current)
        throws NoteException;

    /**
     * 刷新跨服竞技场对手，return RivalRankSeq的lua
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void refreshCrossRival_async(AMD_ArenaRank_refreshCrossRival __cb, Ice.Current __current)
        throws NoteException;

    /**
     * 获取跨服竞技场排行榜，return RivalRankSeq的lua
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void getCrossRank_async(AMD_ArenaRank_getCrossRank __cb, Ice.Current __current)
        throws NoteException;

    /**
     * 设置个性签名
     * @param __current The Current object for the invocation.
     **/
    void setSignature(String signature, Ice.Current __current)
        throws NoteException;

    /**
     * 保存跨服竞技场阵容
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void saveBattle_async(AMD_ArenaRank_saveBattle __cb, Ice.Current __current)
        throws NoteException;

    /**
     * 购买跨服竞技场挑战次数
     * @param __current The Current object for the invocation.
     **/
    void buyCrossChallenge(Ice.Current __current)
        throws NoteException;

    /**
     * 获取跨服竞技场战报 return ArenaReportViewSeq的lua
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void getCrossReport_async(AMD_ArenaRank_getCrossReport __cb, Ice.Current __current)
        throws NoteException;

    /**
     * 跨服竞技场挑战
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void crossFight_async(AMD_ArenaRank_crossFight __cb, String rivalId, Ice.Current __current)
        throws NoteException;

    /**
     * 跨服竞技场复仇
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void crossRevenge_async(AMD_ArenaRank_crossRevenge __cb, String rivalId, Ice.Current __current)
        throws NoteException;

    /**
     * 查看跨服竞技场战报
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void getCrossMovie_async(AMD_ArenaRank_getCrossMovie __cb, String id, Ice.Current __current)
        throws NoteException;

    /**
     * 清除跨服竞技场CD
     * @param __current The Current object for the invocation.
     **/
    void clearCrossCD(Ice.Current __current)
        throws NoteException;
}
