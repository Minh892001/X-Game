// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public abstract class _ChatCallbackDisp extends Ice.ObjectImpl implements ChatCallback
{
    protected void
    ice_copyStateFrom(Ice.Object __obj)
        throws java.lang.CloneNotSupportedException
    {
        throw new java.lang.CloneNotSupportedException();
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::com::XSanGo::Protocol::ChatCallback"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public final void confirm(String text)
    {
        confirm(text, null);
    }

    /**
     * 登录后获取彩蛋视图
     **/
    public final void getColorfulEggView(String view)
    {
        getColorfulEggView(view, null);
    }

    public final void messageReceived(String senderId, String senderName, String msg)
    {
        messageReceived(senderId, senderName, msg, null);
    }

    public final void redPointSmit(int type, boolean show)
    {
        redPointSmit(type, show, null);
    }

    /**
     * 刷新伤害排行榜，传入WorldBossRankView的lua
     **/
    public final void refreshHarmRank(String harmRanks)
    {
        refreshHarmRank(harmRanks, null);
    }

    /**
     * 更新寻宝数据，返回TreasureView的lua
     **/
    public final void refreshTreasure(String view)
    {
        refreshTreasure(view, null);
    }

    /**
     * 显示主界面的 图标 new IntSeq[]{酿酒,嘉年华}  0:隐藏  1:显示
     **/
    public final void showMainUIButton(String status)
    {
        showMainUIButton(status, null);
    }

    /**
     * 更新双倍卡剩余时间,传入IntIntPairSeq的lua
     **/
    public final void updateDoubleCard(String intPairSeq)
    {
        updateDoubleCard(intPairSeq, null);
    }

    public static Ice.DispatchStatus ___messageReceived(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String senderId;
        String senderName;
        String msg;
        senderId = __is.readString();
        senderName = __is.readString();
        msg = __is.readString();
        __inS.endReadParams();
        __obj.messageReceived(senderId, senderName, msg, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___confirm(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String text;
        text = __is.readString();
        __inS.endReadParams();
        __obj.confirm(text, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___redPointSmit(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int type;
        boolean show;
        type = __is.readInt();
        show = __is.readBool();
        __inS.endReadParams();
        __obj.redPointSmit(type, show, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___updateDoubleCard(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String intPairSeq;
        intPairSeq = __is.readString();
        __inS.endReadParams();
        __obj.updateDoubleCard(intPairSeq, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___refreshHarmRank(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String harmRanks;
        harmRanks = __is.readString();
        __inS.endReadParams();
        __obj.refreshHarmRank(harmRanks, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getColorfulEggView(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String view;
        view = __is.readString();
        __inS.endReadParams();
        __obj.getColorfulEggView(view, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___refreshTreasure(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String view;
        view = __is.readString();
        __inS.endReadParams();
        __obj.refreshTreasure(view, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___showMainUIButton(ChatCallback __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String status;
        status = __is.readString();
        __inS.endReadParams();
        __obj.showMainUIButton(status, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "confirm",
        "getColorfulEggView",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "messageReceived",
        "redPointSmit",
        "refreshHarmRank",
        "refreshTreasure",
        "showMainUIButton",
        "updateDoubleCard"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___confirm(this, in, __current);
            }
            case 1:
            {
                return ___getColorfulEggView(this, in, __current);
            }
            case 2:
            {
                return ___ice_id(this, in, __current);
            }
            case 3:
            {
                return ___ice_ids(this, in, __current);
            }
            case 4:
            {
                return ___ice_isA(this, in, __current);
            }
            case 5:
            {
                return ___ice_ping(this, in, __current);
            }
            case 6:
            {
                return ___messageReceived(this, in, __current);
            }
            case 7:
            {
                return ___redPointSmit(this, in, __current);
            }
            case 8:
            {
                return ___refreshHarmRank(this, in, __current);
            }
            case 9:
            {
                return ___refreshTreasure(this, in, __current);
            }
            case 10:
            {
                return ___showMainUIButton(this, in, __current);
            }
            case 11:
            {
                return ___updateDoubleCard(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        __is.endReadSlice();
    }

    public static final long serialVersionUID = 0L;
}
