// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface _ChatOperations
{
    void speak(String msg, Ice.Current __current)
        throws NoFactionException,
               NoGroupException,
               NoteException;

    void speakAction(String msg, String targetId, Ice.Current __current)
        throws NoFactionException,
               NoGroupException,
               NoteException;

    void speakTo_async(AMD_Chat_speakTo __cb, String targetId, String msg, Ice.Current __current)
        throws NoteException;

    byte[] getAttachObject(int id, Ice.Current __current)
        throws NoteException;

    String selSet(Ice.Current __current)
        throws NoteException;

    void saveSet(String set, Ice.Current __current)
        throws NoteException;

    void saveSetColor(int type, String userColor, Ice.Current __current)
        throws NoteException;

    ItemView viewEquip(String itemId, Ice.Current __current)
        throws NoteException;

    ItemView viewItem(String itemId, Ice.Current __current)
        throws NoteException;

    HeroView viewHero(String heroId, Ice.Current __current)
        throws NoteException;

    void selectOfflineMess(Ice.Current __current)
        throws NoteException;

    void selectChallenge_async(AMD_Chat_selectChallenge __cb, String targetId, Ice.Current __current)
        throws NoteException;

    PvpOpponentFormationView beginChallenge(String targetId, String formationId, Ice.Current __current)
        throws NoteException;

    String endChallenge(String targetId, int resFlag, byte remainHero, Ice.Current __current)
        throws NoteException;

    void voteForbidSpeak_async(AMD_Chat_voteForbidSpeak __cb, int type, String targetID, Ice.Current __current)
        throws NoteException;
}
