// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Copy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface _CopyOperations
{
    void getBigCopyView_async(AMD_Copy_getBigCopyView __cb, Ice.Current __current);

    void getSmallCopyView_async(AMD_Copy_getSmallCopyView __cb, int copyId, Ice.Current __current);

    void getSmallCopyViewWithWarmup_async(AMD_Copy_getSmallCopyViewWithWarmup __cb, int copyId, Ice.Current __current)
        throws NoteException;

    String beginWarmup(Ice.Current __current)
        throws NoteException;

    byte endWarmup(byte remainHero, Ice.Current __current)
        throws NoteException;

    CopyChallengeResultView beginChallenge(String formationId, int copyId, Ice.Current __current)
        throws NotEnoughException,
               NoteException;

    int calculateStar(byte remainHero, byte killNum, float minTime, float maxTime, Ice.Current __current)
        throws NoteException;

    void endChallenge_async(AMD_Copy_endChallenge __cb, Ice.Current __current)
        throws NoteException;

    void failChallenge(Ice.Current __current)
        throws NoteException;

    int getYuanbaoPrice(ItemView[] items, Ice.Current __current)
        throws NoteException;

    void buySuccess(ItemView[] items, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    void buyChallengeChance(int copyId, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    IntIntPair[] buyChapterChallengeChance(int chapterId, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    String clear(int copyTemplateId, int count, Ice.Current __current)
        throws NotEnoughException,
               NoteException;

    ChapterRewardView getChapterRewardView(int chapterId, Ice.Current __current);

    void receiveChapterReward(int chapterId, int level, Ice.Current __current)
        throws NoteException;

    void releaseCaptured(Ice.Current __current);

    int killCaptured(Ice.Current __current);

    String employCaptured(Ice.Current __current)
        throws NotEnoughMoneyException;

    String getCopyChallengeInfo(String idStr, Ice.Current __current);

    void hallOfFameList_async(AMD_Copy_hallOfFameList __cb, Ice.Current __current);

    /**
     * 打开互动界面 返回HuDongView的lua格式
     * @param __current The Current object for the invocation.
     **/
    String getHuDongView(int copyId, Ice.Current __current)
        throws NoteException;

    /**
     * 挑战TA
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void beginChallengeTa_async(AMD_Copy_beginChallengeTa __cb, int copyId, Ice.Current __current)
        throws NoteException;

    /**
     * 自动挑战TA
     * @param __cb The callback object for the operation.
     * @param __current The Current object for the invocation.
     **/
    void autoChallengeTa_async(AMD_Copy_autoChallengeTa __cb, int copyId, Ice.Current __current)
        throws NoteException;

    /**
     * 挑战TA结束 resFlag:0-失败，1-胜利 返回：resFlag
     * @param __current The Current object for the invocation.
     **/
    ChallengeTaResult endChallengeTa(int resFlag, Ice.Current __current)
        throws NoteException;

    /**
     * 膜拜TA
     * @param __current The Current object for the invocation.
     **/
    int worshipTa(int copyId, Ice.Current __current)
        throws NoteException;

    /**
     * 购买互动次数
     * @param __current The Current object for the invocation.
     **/
    void buyHuDong(int copyId, Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    IntIntPair getMyOccupy(Ice.Current __current)
        throws NoteException;

    BuyMilitaryOrderView getBuyMilitaryOrderView(Ice.Current __current)
        throws NoteException;

    void buyMilitaryOrder(Ice.Current __current)
        throws NotEnoughYuanBaoException,
               NoteException;

    String cancelWarmup(boolean first, Ice.Current __current)
        throws NoteException;

    /**
     * 征收
     * @param __current The Current object for the invocation.
     **/
    int levyCopy(int copyId, Ice.Current __current)
        throws NoteException;

    /**
     * 我的占领列表 返回CopyOccupySeq的lua
     * @param __current The Current object for the invocation.
     **/
    String myOccupyList(Ice.Current __current)
        throws NoteException;

    /**
     * 放弃占领
     * @param __current The Current object for the invocation.
     **/
    void giveCopy(int copyId, Ice.Current __current)
        throws NoteException;
}
