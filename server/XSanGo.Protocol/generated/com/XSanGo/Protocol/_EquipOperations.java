// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Equip.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

public interface _EquipOperations
{
    ItemView levelup(String id, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    ItemView levelupAuto(String id, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    EquipLevelEntity[] levelupAll(String id, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    /**
     * 升星,返回 ItemView的lua，idArray格式：id;id  items格式：id,num;id,num
     * @param __current The Current object for the invocation.
     **/
    String starUp(String id, String idArray, String items, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    ItemView rebuild(String id, Ice.Current __current)
        throws NoteException;

    ItemView[] smelt(String idArrayStr, Ice.Current __current)
        throws NotEnoughMoneyException,
               NoteException;

    String hole(String equipId, int position, Ice.Current __current)
        throws NoteException;

    void setGem(String equipId, int position, String gemId, Ice.Current __current)
        throws NoteException;

    void removeGem(String equipId, int position, Ice.Current __current)
        throws NoteException;

    /**
     * 获取所有神器return:ArtifactViewSeq的lua
     * @param __current The Current object for the invocation.
     **/
    String getAllArtifact(Ice.Current __current)
        throws NoteException;

    /**
     * 升级神器
     * @param __current The Current object for the invocation.
     **/
    void upgradeArtifact(String dbId, Ice.Current __current)
        throws NoteException;

    /**
     * 使用神器
     * @param __current The Current object for the invocation.
     **/
    void useArtifact(String dbId, String heroId, Ice.Current __current)
        throws NoteException;
}
