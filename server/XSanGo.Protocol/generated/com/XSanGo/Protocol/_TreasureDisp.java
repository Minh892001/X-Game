// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Treasure.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.XSanGo.Protocol;

/**
 * 寻宝
 **/
public abstract class _TreasureDisp extends Ice.ObjectImpl implements Treasure
{
    protected void
    ice_copyStateFrom(Ice.Object __obj)
        throws java.lang.CloneNotSupportedException
    {
        throw new java.lang.CloneNotSupportedException();
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::com::XSanGo::Protocol::Treasure"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    /**
     * 出发。heroIds-武将数据库ID用,分割 返回TreasureViewSeq的lua
     **/
    public final String depart(int id, String heroIds)
        throws NoteException
    {
        return depart(id, heroIds, null);
    }

    /**
     * 收获，返回ItemViewSeq的lua
     **/
    public final String gain(int id)
        throws NoteException
    {
        return gain(id, null);
    }

    /**
     * 获取发生矿难的好友列表，返回TreasureFriendSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public final void getAccidentFriend_async(AMD_Treasure_getAccidentFriend __cb)
        throws NoteException
    {
        getAccidentFriend_async(__cb, null);
    }

    /**
     * 获取矿难记录，返回TreasureAccidentLogSeq的lua
     **/
    public final String getAccidentLog()
        throws NoteException
    {
        return getAccidentLog(null);
    }

    /**
     * 打开求援界面，返回TreasureRecourseView的lua
     * @param __cb The callback object for the operation.
     **/
    public final void getRescueFriend_async(AMD_Treasure_getRescueFriend __cb)
        throws NoteException
    {
        getRescueFriend_async(__cb, null);
    }

    /**
     * 获取援救记录，返回TreasureRescueLogSeq的lua
     **/
    public final String getRescueLog()
        throws NoteException
    {
        return getRescueLog(null);
    }

    /**
     * 获取寻宝view，返回TreasureView的lua
     **/
    public final String getTreasureView()
        throws NoteException
    {
        return getTreasureView(null);
    }

    /**
     * 召回
     **/
    public final void recall(int id)
        throws NoteException
    {
        recall(id, null);
    }

    /**
     * 救援好友矿难，返回ItemViewSeq的lua
     * @param __cb The callback object for the operation.
     **/
    public final void rescue_async(AMD_Treasure_rescue __cb, String friendId)
        throws NoteException
    {
        rescue_async(__cb, friendId, null);
    }

    /**
     * 保存求援私信
     **/
    public final void saveRescueMsg(String msg)
        throws NoteException
    {
        saveRescueMsg(msg, null);
    }

    /**
     * 向好友发送求援私信，friendIds多个用,分割
     * @param __cb The callback object for the operation.
     **/
    public final void sendRescueMsg_async(AMD_Treasure_sendRescueMsg __cb, String friendIds)
        throws NoteException
    {
        sendRescueMsg_async(__cb, friendIds, null);
    }

    /**
     * 加速,返回TreasureViewSeq的lua
     **/
    public final String speed(int id)
        throws NoteException
    {
        return speed(id, null);
    }

    public static Ice.DispatchStatus ___getTreasureView(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        try
        {
            String __ret = __obj.getTreasureView(__current);
            IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(__ret);
            __inS.__endWriteParams(true);
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___depart(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int id;
        String heroIds;
        id = __is.readInt();
        heroIds = __is.readString();
        __inS.endReadParams();
        try
        {
            String __ret = __obj.depart(id, heroIds, __current);
            IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(__ret);
            __inS.__endWriteParams(true);
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___recall(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int id;
        id = __is.readInt();
        __inS.endReadParams();
        try
        {
            __obj.recall(id, __current);
            __inS.__writeEmptyParams();
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___gain(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int id;
        id = __is.readInt();
        __inS.endReadParams();
        try
        {
            String __ret = __obj.gain(id, __current);
            IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(__ret);
            __inS.__endWriteParams(true);
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___getRescueLog(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        try
        {
            String __ret = __obj.getRescueLog(__current);
            IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(__ret);
            __inS.__endWriteParams(true);
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___getAccidentLog(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        try
        {
            String __ret = __obj.getAccidentLog(__current);
            IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(__ret);
            __inS.__endWriteParams(true);
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___speed(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int id;
        id = __is.readInt();
        __inS.endReadParams();
        try
        {
            String __ret = __obj.speed(id, __current);
            IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(__ret);
            __inS.__endWriteParams(true);
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    public static Ice.DispatchStatus ___rescue(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String friendId;
        friendId = __is.readString();
        __inS.endReadParams();
        AMD_Treasure_rescue __cb = new _AMD_Treasure_rescue(__inS);
        try
        {
            __obj.rescue_async(__cb, friendId, __current);
        }
        catch(java.lang.Exception ex)
        {
            __cb.ice_exception(ex);
        }
        return Ice.DispatchStatus.DispatchAsync;
    }

    public static Ice.DispatchStatus ___getAccidentFriend(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        AMD_Treasure_getAccidentFriend __cb = new _AMD_Treasure_getAccidentFriend(__inS);
        try
        {
            __obj.getAccidentFriend_async(__cb, __current);
        }
        catch(java.lang.Exception ex)
        {
            __cb.ice_exception(ex);
        }
        return Ice.DispatchStatus.DispatchAsync;
    }

    public static Ice.DispatchStatus ___getRescueFriend(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        AMD_Treasure_getRescueFriend __cb = new _AMD_Treasure_getRescueFriend(__inS);
        try
        {
            __obj.getRescueFriend_async(__cb, __current);
        }
        catch(java.lang.Exception ex)
        {
            __cb.ice_exception(ex);
        }
        return Ice.DispatchStatus.DispatchAsync;
    }

    public static Ice.DispatchStatus ___sendRescueMsg(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String friendIds;
        friendIds = __is.readString();
        __inS.endReadParams();
        AMD_Treasure_sendRescueMsg __cb = new _AMD_Treasure_sendRescueMsg(__inS);
        try
        {
            __obj.sendRescueMsg_async(__cb, friendIds, __current);
        }
        catch(java.lang.Exception ex)
        {
            __cb.ice_exception(ex);
        }
        return Ice.DispatchStatus.DispatchAsync;
    }

    public static Ice.DispatchStatus ___saveRescueMsg(Treasure __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String msg;
        msg = __is.readString();
        __inS.endReadParams();
        try
        {
            __obj.saveRescueMsg(msg, __current);
            __inS.__writeEmptyParams();
            return Ice.DispatchStatus.DispatchOK;
        }
        catch(NoteException ex)
        {
            __inS.__writeUserException(ex, Ice.FormatType.DefaultFormat);
            return Ice.DispatchStatus.DispatchUserException;
        }
    }

    private final static String[] __all =
    {
        "depart",
        "gain",
        "getAccidentFriend",
        "getAccidentLog",
        "getRescueFriend",
        "getRescueLog",
        "getTreasureView",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "recall",
        "rescue",
        "saveRescueMsg",
        "sendRescueMsg",
        "speed"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___depart(this, in, __current);
            }
            case 1:
            {
                return ___gain(this, in, __current);
            }
            case 2:
            {
                return ___getAccidentFriend(this, in, __current);
            }
            case 3:
            {
                return ___getAccidentLog(this, in, __current);
            }
            case 4:
            {
                return ___getRescueFriend(this, in, __current);
            }
            case 5:
            {
                return ___getRescueLog(this, in, __current);
            }
            case 6:
            {
                return ___getTreasureView(this, in, __current);
            }
            case 7:
            {
                return ___ice_id(this, in, __current);
            }
            case 8:
            {
                return ___ice_ids(this, in, __current);
            }
            case 9:
            {
                return ___ice_isA(this, in, __current);
            }
            case 10:
            {
                return ___ice_ping(this, in, __current);
            }
            case 11:
            {
                return ___recall(this, in, __current);
            }
            case 12:
            {
                return ___rescue(this, in, __current);
            }
            case 13:
            {
                return ___saveRescueMsg(this, in, __current);
            }
            case 14:
            {
                return ___sendRescueMsg(this, in, __current);
            }
            case 15:
            {
                return ___speed(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        __is.endReadSlice();
    }

    public static final long serialVersionUID = 0L;
}
